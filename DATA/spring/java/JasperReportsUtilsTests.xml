org.springframework.ui.jasperreports java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.StringWriter import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Locale import java.util.Map import java.util.ResourceBundle import net.sf.jasperreports.engine.JRDataSource import net.sf.jasperreports.engine.JRExporterParameter import net.sf.jasperreports.engine.JRParameter import net.sf.jasperreports.engine.JasperFillManager import net.sf.jasperreports.engine.JasperPrint import net.sf.jasperreports.engine.JasperReport import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource import net.sf.jasperreports.engine.export.JRCsvExporterParameter import net.sf.jasperreports.engine.export.JRExportProgressMonitor import net.sf.jasperreports.engine.export.JRHtmlExporter import net.sf.jasperreports.engine.export.JRHtmlExporterParameter import net.sf.jasperreports.engine.export.JRPdfExporter import net.sf.jasperreports.engine.export.JRPdfExporterParameter import net.sf.jasperreports.engine.export.JRXlsExporterParameter import net.sf.jasperreports.engine.util.JRLoader import org.apache.poi.hssf.usermodel.HSSFCell import org.apache.poi.hssf.usermodel.HSSFRow import org.apache.poi.hssf.usermodel.HSSFSheet import org.apache.poi.hssf.usermodel.HSSFWorkbook import org.junit.BeforeClass import org.junit.Test import org.springframework.core.io.ClassPathResource import org.springframework.tests.Assume import static static org.junit.Assert.* import class annotation org.springframework.ui.jasperreports.JasperReportsUtilsTests public static public static String StringWriter public public throws decl_stmt StringWriter = new decl_stmt java.lang.String = call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() String StringWriter public public throws decl_stmt StringWriter = new decl_stmt java.lang.String = call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() String StringWriter decl Map public public throws decl_stmt StringWriter = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) String StringWriter public public throws decl_stmt StringWriter = new decl_stmt java.lang.String = call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() String StringWriter public public throws decl_stmt StringWriter = new decl_stmt java.lang.String = call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() String StringWriter decl Map String public public throws decl_stmt StringWriter = new decl_stmt java.util.Map < = new < decl_stmt java.lang.String = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl byte ByteArrayOutputStream public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl byte ByteArrayOutputStream public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl byte ByteArrayOutputStream decl Map public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() new decl byte ByteArrayOutputStream public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl byte ByteArrayOutputStream public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl byte ByteArrayOutputStream decl Map SimpleProgressMonitor public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.util.Map < = new < decl_stmt SimpleProgressMonitor = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call SimpleProgressMonitor.isInvoked() call SimpleProgressMonitor.isInvoked() call SimpleProgressMonitor.isInvoked() call SimpleProgressMonitor.isInvoked() call SimpleProgressMonitor.isInvoked() JasperPrint String StringWriter public public throws decl_stmt StringWriter = new decl_stmt JasperPrint = new decl_stmt java.lang.String = call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() JasperPrint decl byte ByteArrayOutputStream public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt JasperPrint = new decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() private private > private private > String private private throws > decl_stmt java.lang.String = new call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) HSSFWorkbook HSSFCell HSSFSheet HSSFRow private private throws decl_stmt HSSFWorkbook = new new decl_stmt HSSFSheet = call HSSFWorkbook.getSheetAt() call HSSFWorkbook.getSheetAt() call HSSFWorkbook.getSheetAt() call HSSFWorkbook.getSheetAt() call HSSFWorkbook.getSheetAt() decl_stmt HSSFRow = call HSSFSheet.getRow() call HSSFSheet.getRow() call HSSFSheet.getRow() call HSSFSheet.getRow() call HSSFSheet.getRow() decl_stmt HSSFCell = call HSSFRow.getCell() call HSSFRow.getCell() call HSSFRow.getCell() call HSSFRow.getCell() call HSSFRow.getCell() short call HSSFCell.getRichStringCellValue() call HSSFCell.getRichStringCellValue() call HSSFCell.getRichStringCellValue() call HSSFCell.getRichStringCellValue() call HSSFCell.getRichStringCellValue() ClassPathResource private private throws decl_stmt org.springframework.core.io.ClassPathResource = new return call ClassPathResource.getInputStream() call ClassPathResource.getInputStream() call ClassPathResource.getInputStream() call ClassPathResource.getInputStream() call ClassPathResource.getInputStream() decl Map private < private < decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return private private return new PersonBean decl List private < private < decl_stmt java.util.List < = new < for = < ++ decl_stmt org.springframework.ui.jasperreports.PersonBean = new call org.springframework.ui.jasperreports.PersonBean.setId(int) call org.springframework.ui.jasperreports.PersonBean.setId(int) call org.springframework.ui.jasperreports.PersonBean.setId(int) call org.springframework.ui.jasperreports.PersonBean.setId(int) call org.springframework.ui.jasperreports.PersonBean.setId(int) call PersonBean.setName() call PersonBean.setName() call PersonBean.setName() call PersonBean.setName() call PersonBean.setName() call org.springframework.ui.jasperreports.PersonBean.setStreet(String) call org.springframework.ui.jasperreports.PersonBean.setStreet(String) call org.springframework.ui.jasperreports.PersonBean.setStreet(String) call org.springframework.ui.jasperreports.PersonBean.setStreet(String) call org.springframework.ui.jasperreports.PersonBean.setStreet(String) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public = public public return