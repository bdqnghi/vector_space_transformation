org.springframework.messaging.handler.annotation.support java.lang.reflect.Method import java.util.Map import org.springframework.core.MethodParameter import org.springframework.messaging.Message import org.springframework.messaging.MessageHeaders import org.springframework.messaging.handler.annotation.Headers import org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver import org.springframework.messaging.support.MessageHeaderAccessor import org.springframework.util.Assert import org.springframework.util.ReflectionUtils import class org.springframework.messaging.handler.annotation.support.HeadersMethodArgumentResolver super super implements decl Class public public decl_stmt java.lang.Class < = return && || == || decl Class MessageHeaderAccessor Method public public < throws decl_stmt java.lang.Class < = if return else if == decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = return != : new else if decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = if != && call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() return else decl_stmt com.sun.jdi.Method = + + + return else throw new + + + + +