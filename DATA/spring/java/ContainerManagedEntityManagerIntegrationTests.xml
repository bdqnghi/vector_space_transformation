org.springframework.orm.jpa java.lang.reflect.Proxy import java.util.List import javax.persistence.EntityManager import javax.persistence.PersistenceException import javax.persistence.Query import javax.persistence.TransactionRequiredException import org.springframework.dao.DataAccessException import org.springframework.dao.support.PersistenceExceptionTranslator import org.springframework.orm.jpa.domain.Person import org.springframework.transaction.annotation.Propagation import org.springframework.transaction.annotation.Transactional import class annotation org.springframework.orm.jpa.ContainerManagedEntityManagerIntegrationTests super super extends = public = public throws AbstractEntityManagerFactoryBean = public = public throws decl_stmt org.springframework.orm.jpa.AbstractEntityManagerFactoryBean = call org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.getJpaDialect() call org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.getJpaDialect() call org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.getJpaDialect() call org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.getJpaDialect() call org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.getJpaDialect() DataAccessException RuntimeException PersistenceException protected protected throws decl_stmt RuntimeException = new decl_stmt PersistenceException = new decl_stmt DataAccessException = call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() EntityManager Query decl List public public decl_stmt EntityManager = call EntityManager.getClass() call EntityManager.getClass() call EntityManager.getClass() call EntityManager.getClass() call EntityManager.getClass() decl_stmt javax.management.Query = call EntityManager.createQuery() call EntityManager.createQuery() call EntityManager.createQuery() call EntityManager.createQuery() call EntityManager.createQuery() decl_stmt java.util.List < = call Query.getResultList() call Query.getResultList() call Query.getResultList() call Query.getResultList() call Query.getResultList() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() try call EntityManager.close() call EntityManager.close() call EntityManager.close() call EntityManager.close() call EntityManager.close() catch call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() public public try catch public public = public = public try catch EntityManager public public decl_stmt EntityManager = Person public public decl_stmt org.springframework.test.context.junit4.orm.domain.Person = new call org.springframework.test.context.junit4.orm.domain.Person.setFirstName(String) call org.springframework.test.context.junit4.orm.domain.Person.setFirstName(String) call org.springframework.test.context.junit4.orm.domain.Person.setFirstName(String) call org.springframework.test.context.junit4.orm.domain.Person.setFirstName(String) call org.springframework.test.context.junit4.orm.domain.Person.setFirstName(String) call org.springframework.test.context.junit4.orm.domain.Person.setLastName(String) call org.springframework.test.context.junit4.orm.domain.Person.setLastName(String) call org.springframework.test.context.junit4.orm.domain.Person.setLastName(String) call org.springframework.test.context.junit4.orm.domain.Person.setLastName(String) call org.springframework.test.context.junit4.orm.domain.Person.setLastName(String) EntityManager public public decl_stmt EntityManager = call EntityManager.contains() call EntityManager.contains() call EntityManager.contains() call EntityManager.contains() call EntityManager.contains() new EntityManager public public decl_stmt EntityManager = EntityManager public public decl_stmt EntityManager =