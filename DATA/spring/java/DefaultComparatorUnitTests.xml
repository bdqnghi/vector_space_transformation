org.springframework.expression.spel java.math.BigDecimal import org.junit.Test import org.springframework.expression.EvaluationException import org.springframework.expression.TypeComparator import org.springframework.expression.spel.support.StandardTypeComparator import static static org.junit.Assert.* import class org.springframework.expression.spel.DefaultComparatorUnitTests TypeComparator public public throws decl_stmt org.springframework.expression.TypeComparator = new call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > BigDecimal TypeComparator BigDecimal public public throws decl_stmt org.springframework.expression.TypeComparator = new decl_stmt java.math.BigDecimal = new decl_stmt java.math.BigDecimal = new call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) new == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > TypeComparator public public throws decl_stmt org.springframework.expression.TypeComparator = new call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > TypeComparator public public throws decl_stmt org.springframework.expression.TypeComparator = new call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) == call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) < call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) call org.springframework.expression.TypeComparator.compare(Object,Object) > TypeComparator public public throws decl_stmt org.springframework.expression.TypeComparator = new call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare() call TypeComparator.canCompare()