org.springframework.web.filter java.io.IOException import java.util.Collections import java.util.Enumeration import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Set import javax.servlet.FilterChain import javax.servlet.ServletException import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletRequestWrapper import javax.servlet.http.HttpServletResponse import org.springframework.http.HttpRequest import org.springframework.http.server.ServletServerHttpRequest import org.springframework.util.Assert import org.springframework.util.CollectionUtils import org.springframework.web.util.UriComponents import org.springframework.web.util.UriComponentsBuilder import org.springframework.web.util.UrlPathHelper import class org.springframework.web.filter.ForwardedHeaderFilter super super extends ContextPathHelper decl Set public public = new String decl Enumeration protected protected throws decl_stmt java.util.Enumeration < = while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return return protected protected return protected protected return protected protected throws new StringBuffer private static private static decl_stmt java.lang.StringBuffer = new call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) == - : + call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) return decl Map String decl Enumeration private static < < private static < < decl_stmt java.util.Map < < = new < < decl_stmt java.util.Enumeration < = while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() return public public return public public return public public return public public return public public return public public return public public return decl List public public decl_stmt java.util.List < = return : call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl List public < public < decl_stmt java.util.List < = return != : > public < public < return private static private static = if return if return if != = + while = - return public public return String public public decl_stmt java.lang.String = if && call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) return return +