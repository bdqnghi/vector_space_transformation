org.springframework.expression.spel java.util.ArrayList import java.util.List import org.junit.Ignore import org.junit.Test import org.springframework.core.convert.TypeDescriptor import org.springframework.expression.AccessException import org.springframework.expression.ConstructorExecutor import org.springframework.expression.ConstructorResolver import org.springframework.expression.EvaluationContext import org.springframework.expression.Expression import org.springframework.expression.spel.standard.SpelExpressionParser import org.springframework.expression.spel.support.StandardEvaluationContext import org.springframework.expression.spel.testresources.PlaceOfBirth import static static org.junit.Assert.* import class org.springframework.expression.spel.ConstructorInvocationTests super super extends public public public public Expression StandardEvaluationContext SpelExpressionParser int Object public public decl_stmt org.springframework.expression.spel.standard.SpelExpressionParser = new decl_stmt org.springframework.expression.Expression = call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() decl_stmt org.springframework.expression.spel.support.StandardEvaluationContext = call org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(Object,TypeDescriptor) call org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(Object,TypeDescriptor) call org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(Object,TypeDescriptor) call org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(Object,TypeDescriptor) call org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(Object,TypeDescriptor) new call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) new = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) try = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() catch decl_stmt int = if == - + call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) call org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(String,Object) try = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() catch if instanceof call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() call SpelExpressionParser.parseExpression() decl List decl List StandardEvaluationContext ConstructorResolver public public decl_stmt org.springframework.expression.spel.support.StandardEvaluationContext = new decl_stmt java.util.List < = call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.springframework.beans.factory.support.ConstructorResolver = new call org.springframework.expression.spel.support.StandardEvaluationContext.addConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.addConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.addConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.addConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.addConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() decl_stmt java.util.List < = new < call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.removeConstructorResolver(ConstructorResolver) call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.setConstructorResolvers(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setConstructorResolvers(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setConstructorResolvers(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setConstructorResolvers(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setConstructorResolvers(List) call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() call org.springframework.expression.spel.support.StandardEvaluationContext.getConstructorResolvers() public public < throws throw new public public public public public public public public