org.springframework.transaction.annotation org.junit.Test import org.springframework.aop.framework.ProxyFactory import org.springframework.tests.transaction.CallCountingTransactionManager import org.springframework.transaction.interceptor.TransactionInterceptor import org.springframework.transaction.support.TransactionSynchronizationManager import static static org.junit.Assert.* import class org.springframework.transaction.annotation.AnnotationTransactionInterceptorTests AnnotationTransactionAttributeSource CallCountingTransactionManager TransactionInterceptor TestClassLevelOnly ProxyFactory public public decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt TestClassLevelOnly = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomething() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() call TestClassLevelOnly.doSomethingElse() TestWithSingleMethodOverride ProxyFactory public public decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt TestWithSingleMethodOverride = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomethingElse() call TestWithSingleMethodOverride.doSomethingElse() call TestWithSingleMethodOverride.doSomethingElse() call TestWithSingleMethodOverride.doSomethingElse() call TestWithSingleMethodOverride.doSomethingElse() call TestWithSingleMethodOverride.doSomethingCompletelyElse() call TestWithSingleMethodOverride.doSomethingCompletelyElse() call TestWithSingleMethodOverride.doSomethingCompletelyElse() call TestWithSingleMethodOverride.doSomethingCompletelyElse() call TestWithSingleMethodOverride.doSomethingCompletelyElse() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() call TestWithSingleMethodOverride.doSomething() TestWithSingleMethodOverrideInverted ProxyFactory public public decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt TestWithSingleMethodOverrideInverted = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomethingElse() call TestWithSingleMethodOverrideInverted.doSomethingElse() call TestWithSingleMethodOverrideInverted.doSomethingElse() call TestWithSingleMethodOverrideInverted.doSomethingElse() call TestWithSingleMethodOverrideInverted.doSomethingElse() call TestWithSingleMethodOverrideInverted.doSomethingCompletelyElse() call TestWithSingleMethodOverrideInverted.doSomethingCompletelyElse() call TestWithSingleMethodOverrideInverted.doSomethingCompletelyElse() call TestWithSingleMethodOverrideInverted.doSomethingCompletelyElse() call TestWithSingleMethodOverrideInverted.doSomethingCompletelyElse() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() call TestWithSingleMethodOverrideInverted.doSomething() TestWithMultiMethodOverride ProxyFactory public public decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt TestWithMultiMethodOverride = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomethingElse() call TestWithMultiMethodOverride.doSomethingElse() call TestWithMultiMethodOverride.doSomethingElse() call TestWithMultiMethodOverride.doSomethingElse() call TestWithMultiMethodOverride.doSomethingElse() call TestWithMultiMethodOverride.doSomethingCompletelyElse() call TestWithMultiMethodOverride.doSomethingCompletelyElse() call TestWithMultiMethodOverride.doSomethingCompletelyElse() call TestWithMultiMethodOverride.doSomethingCompletelyElse() call TestWithMultiMethodOverride.doSomethingCompletelyElse() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() call TestWithMultiMethodOverride.doSomething() TestWithRollback ProxyFactory public public decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt TestWithRollback = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) try call TestWithRollback.doSomethingErroneous() call TestWithRollback.doSomethingErroneous() call TestWithRollback.doSomethingErroneous() call TestWithRollback.doSomethingErroneous() call TestWithRollback.doSomethingErroneous() catch try call TestWithRollback.doSomethingElseErroneous() call TestWithRollback.doSomethingElseErroneous() call TestWithRollback.doSomethingElseErroneous() call TestWithRollback.doSomethingElseErroneous() call TestWithRollback.doSomethingElseErroneous() catch TestWithInterface ProxyFactory public public decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt org.springframework.transaction.annotation.TestWithInterface = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TestWithInterface.doSomething() call TestWithInterface.doSomething() call TestWithInterface.doSomething() call TestWithInterface.doSomething() call TestWithInterface.doSomething() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call org.springframework.transaction.annotation.TestWithInterface.doSomethingElse() call TestWithInterface.doSomething() call TestWithInterface.doSomething() call TestWithInterface.doSomething() call TestWithInterface.doSomething() call TestWithInterface.doSomething() SomeService ProxyFactory public public throws decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt SomeService = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call SomeService.bar() call SomeService.bar() call SomeService.bar() call SomeService.bar() call SomeService.bar() call SomeService.foo() call SomeService.foo() call SomeService.foo() call SomeService.foo() call SomeService.foo() call SomeService.fooBar() call SomeService.fooBar() call SomeService.fooBar() call SomeService.fooBar() call SomeService.fooBar() ProxyFactory OtherService public public throws decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() new call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() decl_stmt OtherService = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call OtherService.foo() call OtherService.foo() call OtherService.foo() call OtherService.foo() call OtherService.foo() private private private private public public public public public public = public = public public public public public public public public public = public = public = public = public public public public public throw new = public = public throw new public public public public public public public public = public = public public public