org.springframework.web.socket.server.standard java.io.IOException import java.lang.reflect.Constructor import java.lang.reflect.Method import java.net.URI import java.util.ArrayList import java.util.Collections import java.util.List import java.util.Random import javax.servlet.ServletException import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import javax.websocket.DeploymentException import javax.websocket.Endpoint import javax.websocket.EndpointConfig import javax.websocket.Extension import javax.websocket.WebSocketContainer import org.glassfish.tyrus.core.ComponentProviderService import org.glassfish.tyrus.core.RequestContext import org.glassfish.tyrus.core.TyrusEndpoint import org.glassfish.tyrus.core.TyrusEndpointWrapper import org.glassfish.tyrus.core.TyrusUpgradeResponse import org.glassfish.tyrus.core.TyrusWebSocketEngine import org.glassfish.tyrus.core.Version import org.glassfish.tyrus.core.WebSocketApplication import org.glassfish.tyrus.server.TyrusServerContainer import org.glassfish.tyrus.spi.WebSocketEngine.UpgradeInfo import org.springframework.beans.DirectFieldAccessor import org.springframework.http.HttpHeaders import org.springframework.http.server.ServerHttpRequest import org.springframework.http.server.ServerHttpResponse import org.springframework.util.ReflectionUtils import org.springframework.util.StringUtils import org.springframework.web.socket.WebSocketExtension import org.springframework.web.socket.server.HandshakeFailureException import static static org.glassfish.tyrus.spi.WebSocketEngine.UpgradeStatus.* import class org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy super super extends Random ComponentProviderService public public return protected < protected < try return catch return new < TyrusWebSocketEngine UpgradeInfo RequestContext boolean HttpHeaders Object TyrusServerContainer HttpServletResponse TyrusUpgradeResponse String HttpServletRequest public public < throws decl_stmt HttpServletRequest = decl_stmt HttpServletResponse = decl_stmt TyrusServerContainer = decl_stmt TyrusWebSocketEngine = call TyrusServerContainer.getWebSocketEngine() call TyrusServerContainer.getWebSocketEngine() call TyrusServerContainer.getWebSocketEngine() call TyrusServerContainer.getWebSocketEngine() call TyrusServerContainer.getWebSocketEngine() decl_stmt java.lang.Object = decl_stmt boolean try decl_stmt java.lang.String = + call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() = decl_stmt org.springframework.http.HttpHeaders = decl_stmt org.springframework.web.servlet.support.RequestContext = decl_stmt TyrusUpgradeResponse = new decl_stmt UpgradeInfo = call TyrusWebSocketEngine.upgrade() call TyrusWebSocketEngine.upgrade() call TyrusWebSocketEngine.upgrade() call TyrusWebSocketEngine.upgrade() call TyrusWebSocketEngine.upgrade() = call UpgradeInfo.getStatus() call UpgradeInfo.getStatus() call UpgradeInfo.getStatus() call UpgradeInfo.getStatus() call UpgradeInfo.getStatus() if if + call TyrusUpgradeResponse.getHeaders() call TyrusUpgradeResponse.getHeaders() call TyrusUpgradeResponse.getHeaders() call TyrusUpgradeResponse.getHeaders() call TyrusUpgradeResponse.getHeaders() catch throw new + if ! throw new + ServerEndpointRegistration private private < throws decl_stmt org.springframework.web.socket.server.standard.ServerEndpointRegistration = new call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) return RequestContext private private decl_stmt org.springframework.web.servlet.support.RequestContext = for : call RequestContext.getHeaders() call RequestContext.getHeaders() call RequestContext.getHeaders() call RequestContext.getHeaders() call RequestContext.getHeaders() return private private if != try catch private static < private static < for < : if == && == return throw new Object Object DirectFieldAccessor public public throws decl_stmt org.springframework.beans.DirectFieldAccessor = new decl_stmt java.lang.Object = call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() decl_stmt java.lang.Object = call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() try if return else return catch throw new + public public try catch throw new + public public try catch throw new + TyrusEndpointWrapper public public throws decl_stmt TyrusEndpointWrapper = new return new public public try catch throw new + public public