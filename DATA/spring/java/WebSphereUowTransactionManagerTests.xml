org.springframework.transaction.jta javax.transaction.RollbackException import javax.transaction.Status import javax.transaction.UserTransaction import org.junit.Test import org.springframework.dao.OptimisticLockingFailureException import org.springframework.tests.mock.jndi.ExpectedLookupTemplate import org.springframework.transaction.IllegalTransactionStateException import org.springframework.transaction.NestedTransactionNotSupportedException import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionStatus import org.springframework.transaction.TransactionSystemException import org.springframework.transaction.support.DefaultTransactionDefinition import org.springframework.transaction.support.TransactionCallback import org.springframework.transaction.support.TransactionSynchronizationManager import com.ibm.wsspi.uow.UOWAction import com.ibm.wsspi.uow.UOWException import com.ibm.wsspi.uow.UOWManager import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.transaction.jta.WebSphereUowTransactionManagerTests DefaultTransactionDefinition MockUOWManager ExpectedLookupTemplate WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public return DefaultTransactionDefinition WebSphereUowTransactionManager ExpectedLookupTemplate UserTransaction TransactionStatus MockUOWManager public public throws decl_stmt UserTransaction = call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.setJndiTemplate() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() call WebSphereUowTransactionManager.afterPropertiesSet() decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new decl_stmt org.springframework.transaction.TransactionStatus = call WebSphereUowTransactionManager.getTransaction() call WebSphereUowTransactionManager.getTransaction() call WebSphereUowTransactionManager.getTransaction() call WebSphereUowTransactionManager.getTransaction() call WebSphereUowTransactionManager.getTransaction() call WebSphereUowTransactionManager.commit() call WebSphereUowTransactionManager.commit() call WebSphereUowTransactionManager.commit() call WebSphereUowTransactionManager.commit() call WebSphereUowTransactionManager.commit() call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public return DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() try call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return catch public public return public public public public public public public public public public public public public public public public public public DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager private private final final decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public if == else return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public if == else return public public public public public public public public public public public public public public public public public public DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager private private final final decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() call WebSphereUowTransactionManager.setTransactionSynchronization() decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public if != else return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public if != else return DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call org.springframework.transaction.support.DefaultTransactionDefinition.setTimeout(int) call org.springframework.transaction.support.DefaultTransactionDefinition.setTimeout(int) call org.springframework.transaction.support.DefaultTransactionDefinition.setTimeout(int) call org.springframework.transaction.support.DefaultTransactionDefinition.setTimeout(int) call org.springframework.transaction.support.DefaultTransactionDefinition.setTimeout(int) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public return DefaultTransactionDefinition RollbackException MockUOWManager WebSphereUowTransactionManager public public decl_stmt RollbackException final final = new decl_stmt org.springframework.transaction.jta.MockUOWManager = new public public throws throw new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new try call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return catch instanceof call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() public public throws throw new public public return DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new try call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public throw new catch call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public throw new DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public return DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public return DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() try call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return catch public public return DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) call org.springframework.transaction.jta.MockUOWManager.setUOWStatus(int) decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() try call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return catch public public return public public public public public public DefaultTransactionDefinition DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager private private decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager final final = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition final final = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public new < public public return return public public return public public public public DefaultTransactionDefinition DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager private private final final decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager final final = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition final final = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public == return return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() if == call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() else call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public new < public public == return return public public == return DefaultTransactionDefinition DefaultTransactionDefinition MockUOWManager WebSphereUowTransactionManager public public decl_stmt org.springframework.transaction.jta.MockUOWManager = new decl_stmt org.springframework.transaction.jta.WebSphereUowTransactionManager final final = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition = new decl_stmt org.springframework.transaction.support.DefaultTransactionDefinition final final = new call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call DefaultTransactionDefinition.setPropagationBehavior() call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.support.DefaultTransactionDefinition.setReadOnly(boolean) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) call org.springframework.transaction.jta.WebSphereUowTransactionManager.execute(TransactionDefinition,TransactionCallback) new < public public return return call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call MockUOWManager.getUOWTimeout() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getUOWType() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getJoined() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() call org.springframework.transaction.jta.MockUOWManager.getRollbackOnly() public public new < public public return return public public return