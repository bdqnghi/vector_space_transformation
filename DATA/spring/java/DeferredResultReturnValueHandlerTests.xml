org.springframework.web.servlet.mvc.method.annotation java.lang.reflect.Method import java.util.concurrent.CompletableFuture import org.junit.Before import org.junit.Test import org.springframework.core.MethodParameter import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.util.concurrent.ListenableFuture import org.springframework.util.concurrent.SettableListenableFuture import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.context.request.async.AsyncWebRequest import org.springframework.web.context.request.async.DeferredResult import org.springframework.web.context.request.async.StandardServletAsyncWebRequest import org.springframework.web.context.request.async.WebAsyncUtils import org.springframework.web.method.support.ModelAndViewContainer import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertFalse import static static org.junit.Assert.assertSame import static static org.junit.Assert.assertTrue import class org.springframework.web.servlet.mvc.method.annotation.DeferredResultReturnValueHandlerTests NativeWebRequest DeferredResultMethodReturnValueHandler MockHttpServletRequest AsyncWebRequest MockHttpServletResponse public public throws = new = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new = new decl_stmt org.springframework.web.context.request.async.AsyncWebRequest = new public public throws MethodParameter decl DeferredResult public public throws decl_stmt org.springframework.core.MethodParameter = decl_stmt org.springframework.web.context.request.async.DeferredResult < = new <> call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() MethodParameter decl DeferredResult IllegalStateException public public throws decl_stmt org.springframework.core.MethodParameter = decl_stmt org.springframework.web.context.request.async.DeferredResult < = new <> decl_stmt IllegalStateException = new call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() MethodParameter decl SettableListenableFuture public public throws decl_stmt org.springframework.core.MethodParameter = decl_stmt org.springframework.util.concurrent.SettableListenableFuture < = new <> call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() MethodParameter decl SettableListenableFuture IllegalStateException public public throws decl_stmt org.springframework.core.MethodParameter = decl_stmt org.springframework.util.concurrent.SettableListenableFuture < = new <> decl_stmt IllegalStateException = new call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() MethodParameter decl SettableListenableFuture public public throws decl_stmt org.springframework.core.MethodParameter = decl_stmt org.springframework.util.concurrent.SettableListenableFuture < = new <> call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() MethodParameter decl CompletableFuture IllegalStateException public public throws decl_stmt org.springframework.core.MethodParameter = decl_stmt CompletableFuture < = new <> decl_stmt IllegalStateException = new call decl CompletableFuture.completeExceptionally() call decl CompletableFuture.completeExceptionally() call decl CompletableFuture.completeExceptionally() call decl CompletableFuture.completeExceptionally() call decl CompletableFuture.completeExceptionally() ModelAndViewContainer private private throws decl_stmt org.springframework.web.method.support.ModelAndViewContainer = new Method private private throws decl_stmt com.sun.jdi.Method = return new - private private return private < private < return private < private < return private < private < return