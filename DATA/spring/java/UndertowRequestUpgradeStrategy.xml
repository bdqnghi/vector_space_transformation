org.springframework.web.socket.server.standard java.io.IOException import java.lang.reflect.Constructor import java.lang.reflect.Method import java.util.Collections import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import javax.servlet.ServletException import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import javax.websocket.Decoder import javax.websocket.Encoder import javax.websocket.Endpoint import javax.websocket.Extension import javax.websocket.server.ServerEndpointConfig import io.undertow.server.HttpServerExchange import io.undertow.server.HttpUpgradeListener import io.undertow.servlet.api.InstanceFactory import io.undertow.servlet.api.InstanceHandle import io.undertow.servlet.websockets.ServletWebSocketHttpExchange import io.undertow.util.PathTemplate import io.undertow.websockets.core.WebSocketChannel import io.undertow.websockets.core.WebSocketVersion import io.undertow.websockets.core.protocol.Handshake import io.undertow.websockets.jsr.ConfiguredServerEndpoint import io.undertow.websockets.jsr.EncodingFactory import io.undertow.websockets.jsr.EndpointSessionHandler import io.undertow.websockets.jsr.ServerWebSocketContainer import io.undertow.websockets.jsr.annotated.AnnotatedEndpointFactory import io.undertow.websockets.jsr.handshake.HandshakeUtil import io.undertow.websockets.jsr.handshake.JsrHybi07Handshake import io.undertow.websockets.jsr.handshake.JsrHybi08Handshake import io.undertow.websockets.jsr.handshake.JsrHybi13Handshake import io.undertow.websockets.spi.WebSocketHttpExchange import org.xnio.StreamConnection import org.springframework.http.server.ServerHttpRequest import org.springframework.http.server.ServerHttpResponse import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import org.springframework.web.socket.server.HandshakeFailureException import class org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy super super extends FallbackStrategy decl String boolean public public return ServerEndpointRegistration StringBuffer HttpServletResponse String HttpServletRequest decl Map protected protected < throws if decl_stmt HttpServletRequest = decl_stmt HttpServletResponse = decl_stmt java.lang.StringBuffer = call HttpServletRequest.getRequestURL() call HttpServletRequest.getRequestURL() call HttpServletRequest.getRequestURL() call HttpServletRequest.getRequestURL() call HttpServletRequest.getRequestURL() decl_stmt java.lang.String = call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() decl_stmt java.util.Map < = decl_stmt org.springframework.web.socket.server.standard.ServerEndpointRegistration = new try catch throw new + catch throw new + else call FallbackStrategy.upgradeInternal() call FallbackStrategy.upgradeInternal() call FallbackStrategy.upgradeInternal() call FallbackStrategy.upgradeInternal() call FallbackStrategy.upgradeInternal() public public return public public return ServerWebSocketContainer EndpointSessionHandler ConfiguredServerEndpoint ServletWebSocketHttpExchange Handshake HttpServletResponse HttpServletRequest WebSocketChannel Object protected protected < final final throws decl_stmt HttpServletRequest = decl_stmt HttpServletResponse = decl_stmt ServletWebSocketHttpExchange final final = call ServletWebSocketHttpExchange.putAttachment() call ServletWebSocketHttpExchange.putAttachment() call ServletWebSocketHttpExchange.putAttachment() call ServletWebSocketHttpExchange.putAttachment() call ServletWebSocketHttpExchange.putAttachment() > decl_stmt ServerWebSocketContainer = decl_stmt EndpointSessionHandler final final = new decl_stmt ConfiguredServerEndpoint final final = decl_stmt Handshake final final = call ServletWebSocketHttpExchange.upgradeChannel() call ServletWebSocketHttpExchange.upgradeChannel() call ServletWebSocketHttpExchange.upgradeChannel() call ServletWebSocketHttpExchange.upgradeChannel() call ServletWebSocketHttpExchange.upgradeChannel() new public public decl_stmt java.lang.Object = decl_stmt WebSocketChannel = if != call EndpointSessionHandler.onConnect() call EndpointSessionHandler.onConnect() call EndpointSessionHandler.onConnect() call EndpointSessionHandler.onConnect() call EndpointSessionHandler.onConnect() call Handshake.handshake() call Handshake.handshake() call Handshake.handshake() call Handshake.handshake() call Handshake.handshake() Object WebSocketChannel public public decl_stmt java.lang.Object = decl_stmt WebSocketChannel = if != private private try return != : catch throw new Handshake private private decl_stmt Handshake = new if call Handshake.matches() call Handshake.matches() call Handshake.matches() call Handshake.matches() call Handshake.matches() return = new if call Handshake.matches() call Handshake.matches() call Handshake.matches() call Handshake.matches() call Handshake.matches() return = new if call Handshake.matches() call Handshake.matches() call Handshake.matches() call Handshake.matches() call Handshake.matches() return throw new + ServerEndpointRegistration String EncodingFactory private private < decl_stmt java.lang.String = decl_stmt org.springframework.web.socket.server.standard.ServerEndpointRegistration = new call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setSubprotocols(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) call org.springframework.web.socket.server.standard.ServerEndpointRegistration.setExtensions(List) decl_stmt EncodingFactory = new < < < extends extends > < < < extends extends > < < < extends extends > < < < extends extends > try return new : new catch throw new public < public < throws return new < public public return public public public public return public public