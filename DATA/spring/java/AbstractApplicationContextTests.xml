org.springframework.context java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.ObjectInputStream import java.io.ObjectOutputStream import java.util.Locale import org.junit.Before import org.junit.Test import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.xml.AbstractListableBeanFactoryTests import org.springframework.tests.sample.beans.LifecycleBean import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.context.AbstractApplicationContextTests super super extends TestListener ConfigurableApplicationContext String TestListener public public throws = protected protected return protected protected return ACATester Object public public throws decl_stmt org.springframework.context.ACATester = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ACATester.getApplicationContext() call ACATester.getApplicationContext() call ACATester.getApplicationContext() call ACATester.getApplicationContext() call ACATester.getApplicationContext() == decl_stmt java.lang.Object = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() == call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() ACATester Object public public throws decl_stmt org.springframework.context.ACATester = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ACATester.getApplicationContext() call ACATester.getApplicationContext() call ACATester.getApplicationContext() call ACATester.getApplicationContext() call ACATester.getApplicationContext() == decl_stmt java.lang.Object = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() != ! call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() call ConfigurableApplicationContext.isSingleton() public public call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() != public public call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() == TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() LifecycleBean public public decl_stmt org.springframework.test.context.junit4.spr4868.LifecycleBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() ! call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() if call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() != call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() if call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() != call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call ConfigurableApplicationContext.getParent() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() = public = public throws call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() call ConfigurableApplicationContext.getMessage() public public throws new ByteArrayOutputStream MyEvent ObjectOutputStream public public throws decl_stmt MyEvent = new decl_stmt java.io.ByteArrayOutputStream = new decl_stmt ObjectOutputStream = new call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() = new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() protected protected call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.zeroCounter() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() == call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() == + call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() == call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() call org.springframework.context.TestListener.getEventCount() == BeanThatListens public public throws decl_stmt org.springframework.context.BeanThatListens = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.context.BeanThatListens.zero() call org.springframework.context.BeanThatListens.zero() call org.springframework.context.BeanThatListens.zero() call org.springframework.context.BeanThatListens.zero() call org.springframework.context.BeanThatListens.zero() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() == new + call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() ==