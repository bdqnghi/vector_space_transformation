org.springframework.context.expression java.io.File import java.io.IOException import java.io.InputStream import java.io.Reader import java.io.Serializable import java.net.URI import java.net.URL import java.security.AccessControlException import java.security.Permission import java.util.Properties import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.junit.Test import org.springframework.beans.factory.ObjectFactory import org.springframework.beans.factory.annotation.Autowired import org.springframework.beans.factory.annotation.Qualifier import org.springframework.beans.factory.annotation.Value import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer import org.springframework.beans.factory.config.Scope import org.springframework.beans.factory.config.TypedStringValue import org.springframework.beans.factory.support.AutowireCandidateQualifier import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.GenericBeanDefinition import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.AnnotationConfigUtils import org.springframework.context.support.GenericApplicationContext import org.springframework.core.convert.converter.Converter import org.springframework.core.convert.support.GenericConversionService import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.core.io.support.EncodedResource import org.springframework.tests.Assume import org.springframework.tests.TestGroup import org.springframework.tests.sample.beans.TestBean import org.springframework.util.FileCopyUtils import org.springframework.util.SerializationTestUtils import org.springframework.util.StopWatch import static static org.junit.Assert.* import class org.springframework.context.expression.ApplicationContextExpressionTests Log PropertyPlaceholderConfigurer GenericApplicationContext TestBean TestBean ValueTestBean TestBean MethodValueTestBean ConstructorValueTestBean PropertyValueTestBean GenericBeanDefinition GenericBeanDefinition GenericBeanDefinition GenericBeanDefinition GenericBeanDefinition GenericBeanDefinition GenericBeanDefinition Properties public public throws decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() new public public < return public public return public public public public if return else return public public return decl_stmt org.springframework.beans.factory.config.PropertyPlaceholderConfigurer = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call PropertyPlaceholderConfigurer.setProperties() call PropertyPlaceholderConfigurer.setProperties() call PropertyPlaceholderConfigurer.setProperties() call PropertyPlaceholderConfigurer.setProperties() call PropertyPlaceholderConfigurer.setProperties() call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setBeanClassName() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) try call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() decl_stmt ValueTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.ageFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() = call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() call ValueTestBean.countryFactory() decl_stmt ConstructorValueTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt MethodValueTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt PropertyValueTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() finally public public < return public public return public public public public if return else return public public return GenericConversionService GenericApplicationContext RootBeanDefinition PrototypeTestBean public public decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.core.convert.support.GenericConversionService = new call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) new < public public return call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() try decl_stmt PrototypeTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getName() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() call PrototypeTestBean.getCountry2() finally public public return TestBean GenericApplicationContext RootBeanDefinition StopWatch public public decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt org.springframework.util.StopWatch = new call org.springframework.util.StopWatch.start(String) call org.springframework.util.StopWatch.start(String) call org.springframework.util.StopWatch.start(String) call org.springframework.util.StopWatch.start(String) call org.springframework.util.StopWatch.start(String) try for = < ++ decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.util.StopWatch.stop() call org.springframework.util.StopWatch.stop() call org.springframework.util.StopWatch.stop() call org.springframework.util.StopWatch.stop() call org.springframework.util.StopWatch.stop() finally + call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() call org.springframework.util.StopWatch.getTotalTimeMillis() < GenericBeanDefinition SecurityManager GenericApplicationContext SecurityManager TestBean public public decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt java.lang.SecurityManager = try decl_stmt java.lang.SecurityManager = new public public throw new public public call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() call org.springframework.tests.sample.beans.TestBean.getCountry() finally public public throw new public public GenericBeanDefinition GenericApplicationContext String public public decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call GenericBeanDefinition.getConstructorArgumentValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt java.lang.String = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) ResourceInjectionBean AnnotationConfigApplicationContext Resource public public throws try decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new decl_stmt ResourceInjectionBean = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() decl_stmt org.springframework.core.io.Resource = new call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() call org.springframework.core.io.Resource.getURI() call org.springframework.core.io.Resource.getURI() call org.springframework.core.io.Resource.getURI() call org.springframework.core.io.Resource.getURI() call org.springframework.core.io.Resource.getURI() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() new finally public public = = = = public public = public public = public public = public public = public public = public public return public public = public public return public public = public public return