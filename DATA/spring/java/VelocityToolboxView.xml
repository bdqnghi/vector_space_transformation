org.springframework.web.servlet.view.velocity java.lang.reflect.Method import java.util.Map import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.apache.velocity.VelocityContext import org.apache.velocity.context.Context import org.apache.velocity.tools.view.ToolboxManager import org.apache.velocity.tools.view.context.ChainedContext import org.apache.velocity.tools.view.servlet.ServletToolboxManager import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import class annotation org.springframework.web.servlet.view.velocity.VelocityToolboxView super super extends String public public = protected protected return decl Map ChainedContext ToolboxManager protected protected < throws decl_stmt ChainedContext = new new if != decl_stmt ToolboxManager = decl_stmt java.util.Map < = call ToolboxManager.getToolbox() call ToolboxManager.getToolbox() call ToolboxManager.getToolbox() call ToolboxManager.getToolbox() call ToolboxManager.getToolbox() call ChainedContext.setToolbox() call ChainedContext.setToolbox() call ChainedContext.setToolbox() call ChainedContext.setToolbox() call ChainedContext.setToolbox() return Method protected protected throws decl_stmt com.sun.jdi.Method = if !=