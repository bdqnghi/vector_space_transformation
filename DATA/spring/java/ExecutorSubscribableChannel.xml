org.springframework.messaging.support java.util.ArrayList import java.util.List import java.util.concurrent.Executor import org.springframework.messaging.Message import org.springframework.messaging.MessageDeliveryException import org.springframework.messaging.MessageHandler import org.springframework.messaging.MessagingException import org.springframework.messaging.SubscribableChannel import class org.springframework.messaging.support.ExecutorSubscribableChannel super super extends decl List Executor public public return public public < for : if instanceof public public if instanceof SendTask public public < for : decl_stmt SendTask = new if == call SendTask.run() call SendTask.run() call SendTask.run() call SendTask.run() call SendTask.run() else return public < public < return public public return decl Message String public public decl_stmt org.springframework.messaging.Message < = try = if == return catch if instanceof throw decl_stmt java.lang.String = + + + + + throw new catch decl_stmt java.lang.String = + + + + + new throw String private < private < < for : = if == decl_stmt java.lang.String = if + return ++ return ExecutorChannelInterceptor private private < for = >= -- decl_stmt org.springframework.messaging.support.ExecutorChannelInterceptor = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() try call org.springframework.messaging.support.ExecutorChannelInterceptor.afterMessageHandled(Message,MessageChannel,MessageHandler,Exception) call org.springframework.messaging.support.ExecutorChannelInterceptor.afterMessageHandled(Message,MessageChannel,MessageHandler,Exception) call org.springframework.messaging.support.ExecutorChannelInterceptor.afterMessageHandled(Message,MessageChannel,MessageHandler,Exception) call org.springframework.messaging.support.ExecutorChannelInterceptor.afterMessageHandled(Message,MessageChannel,MessageHandler,Exception) call org.springframework.messaging.support.ExecutorChannelInterceptor.afterMessageHandled(Message,MessageChannel,MessageHandler,Exception) catch +