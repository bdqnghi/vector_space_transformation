org.springframework.web.socket.sockjs.client java.io.ByteArrayInputStream import java.io.IOException import java.io.InputStream import java.net.URI import java.nio.charset.Charset import java.util.Arrays import java.util.Queue import java.util.concurrent.CountDownLatch import java.util.concurrent.LinkedBlockingDeque import org.junit.Before import org.junit.Test import org.springframework.core.task.SyncTaskExecutor import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.http.HttpStatus import org.springframework.http.client.ClientHttpResponse import org.springframework.messaging.Message import org.springframework.messaging.MessageHeaders import org.springframework.messaging.simp.stomp.StompCommand import org.springframework.messaging.simp.stomp.StompEncoder import org.springframework.messaging.simp.stomp.StompHeaderAccessor import org.springframework.messaging.support.MessageBuilder import org.springframework.util.concurrent.ListenableFuture import org.springframework.util.concurrent.ListenableFutureCallback import org.springframework.web.client.HttpServerErrorException import org.springframework.web.client.RequestCallback import org.springframework.web.client.ResponseExtractor import org.springframework.web.client.RestClientException import org.springframework.web.client.RestOperations import org.springframework.web.client.RestTemplate import org.springframework.web.socket.CloseStatus import org.springframework.web.socket.TextMessage import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.sockjs.frame.Jackson2SockJsMessageCodec import org.springframework.web.socket.sockjs.frame.SockJsFrame import org.springframework.web.socket.sockjs.transport.TransportType import static static org.mockito.BDDMockito.* import class org.springframework.web.socket.sockjs.client.RestTemplateXhrTransportTests WebSocketHandler Jackson2SockJsMessageCodec public public throws = String ClientHttpResponse public public throws decl_stmt java.lang.String = + + decl_stmt org.springframework.http.client.ClientHttpResponse = new new String StringBuilder ClientHttpResponse public public throws decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + + + + decl_stmt org.springframework.http.client.ClientHttpResponse = new new String SockJsFrame decl byte ClientHttpResponse MessageHeaders TextMessage decl Message StompHeaderAccessor public public throws decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) decl_stmt org.springframework.messaging.MessageHeaders = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.Message < = decl_stmt byte = new decl_stmt org.springframework.web.socket.TextMessage = new decl_stmt org.springframework.web.socket.sockjs.frame.SockJsFrame = new call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() decl_stmt java.lang.String = + call org.springframework.web.socket.sockjs.frame.SockJsFrame.getContent() call org.springframework.web.socket.sockjs.frame.SockJsFrame.getContent() call org.springframework.web.socket.sockjs.frame.SockJsFrame.getContent() call org.springframework.web.socket.sockjs.frame.SockJsFrame.getContent() call org.springframework.web.socket.sockjs.frame.SockJsFrame.getContent() + + decl_stmt org.springframework.http.client.ClientHttpResponse = new HttpServerErrorException CountDownLatch RestOperations public public throws decl_stmt HttpServerErrorException final final = new decl_stmt org.springframework.web.client.RestOperations = call org.springframework.web.client.RestOperations.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestOperations.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestOperations.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestOperations.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestOperations.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) decl_stmt java.util.concurrent.CountDownLatch final final = new new < public public public public if == call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() public public public public if == public public throws String ClientHttpResponse public public throws decl_stmt java.lang.String = + + decl_stmt org.springframework.http.client.ClientHttpResponse = private < private < throws return new HttpHeaders SockJsUrlInfo TransportRequest RestTemplateXhrTransport private < private < throws decl_stmt org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport = new call org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport.setTaskExecutor(TaskExecutor) call org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport.setTaskExecutor(TaskExecutor) call org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport.setTaskExecutor(TaskExecutor) call org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport.setTaskExecutor(TaskExecutor) call org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport.setTaskExecutor(TaskExecutor) new decl_stmt org.springframework.web.socket.sockjs.client.SockJsUrlInfo = new new decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) decl_stmt org.springframework.web.socket.sockjs.client.TransportRequest = new return call RestTemplateXhrTransport.connect() call RestTemplateXhrTransport.connect() call RestTemplateXhrTransport.connect() call RestTemplateXhrTransport.connect() call RestTemplateXhrTransport.connect() ClientHttpResponse InputStream private private throws decl_stmt org.springframework.http.client.ClientHttpResponse = decl_stmt java.io.InputStream = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() return decl byte private private decl_stmt byte = return new public < public < < throws try catch throw new return