org.springframework.context.event java.util.HashSet import java.util.Set import java.util.concurrent.Executor import org.aopalliance.intercept.MethodInvocation import org.junit.Test import org.springframework.aop.framework.ProxyFactory import org.springframework.beans.BeansException import org.springframework.beans.factory.config.BeanPostProcessor import org.springframework.beans.factory.config.RuntimeBeanReference import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.ApplicationContext import org.springframework.context.ApplicationContextAware import org.springframework.context.ApplicationEvent import org.springframework.context.ApplicationListener import org.springframework.context.BeanThatBroadcasts import org.springframework.context.BeanThatListens import org.springframework.context.PayloadApplicationEvent import org.springframework.context.support.AbstractApplicationContext import org.springframework.context.support.GenericApplicationContext import org.springframework.context.support.StaticApplicationContext import org.springframework.context.support.StaticMessageSource import org.springframework.core.Ordered import org.springframework.core.ResolvableType import org.springframework.core.annotation.Order import org.springframework.scheduling.support.TaskUtils import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.context.event.ApplicationContextEventTests super super extends public public new new public public public public public public public public new public public new public public new <> public public new <> decl ApplicationListener int SimpleApplicationEventMulticaster private private < decl_stmt org.springframework.context.ApplicationListener < = < decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = new call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() if != call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) else call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) decl_stmt int = : decl ApplicationListener SimpleApplicationEventMulticaster ApplicationEvent public public decl_stmt org.springframework.context.ApplicationListener < = decl_stmt org.springframework.context.ApplicationEvent = new new decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = new call org.springframework.context.event.SimpleApplicationEventMulticaster.setTaskExecutor(Executor) call org.springframework.context.event.SimpleApplicationEventMulticaster.setTaskExecutor(Executor) call org.springframework.context.event.SimpleApplicationEventMulticaster.setTaskExecutor(Executor) call org.springframework.context.event.SimpleApplicationEventMulticaster.setTaskExecutor(Executor) call org.springframework.context.event.SimpleApplicationEventMulticaster.setTaskExecutor(Executor) new public public call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) public public decl ApplicationListener SimpleApplicationEventMulticaster ApplicationEvent RuntimeException public public decl_stmt org.springframework.context.ApplicationListener < = decl_stmt org.springframework.context.ApplicationEvent = new new decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = new call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() decl_stmt RuntimeException = new try call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) catch decl ApplicationListener SimpleApplicationEventMulticaster ApplicationEvent public public decl_stmt org.springframework.context.ApplicationListener < = decl_stmt org.springframework.context.ApplicationEvent = new new decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = new call org.springframework.context.event.SimpleApplicationEventMulticaster.setErrorHandler(ErrorHandler) call org.springframework.context.event.SimpleApplicationEventMulticaster.setErrorHandler(ErrorHandler) call org.springframework.context.event.SimpleApplicationEventMulticaster.setErrorHandler(ErrorHandler) call org.springframework.context.event.SimpleApplicationEventMulticaster.setErrorHandler(ErrorHandler) call org.springframework.context.event.SimpleApplicationEventMulticaster.setErrorHandler(ErrorHandler) call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() new call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) MyOrderedListener1 MyOrderedListener2 SimpleApplicationEventMulticaster public public decl_stmt MyOrderedListener1 = new decl_stmt MyOrderedListener2 = new decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = new call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) new call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) new MyOrderedListener3 MyOrderedListener4 SimpleApplicationEventMulticaster public public decl_stmt MyOrderedListener3 = new decl_stmt MyOrderedListener4 = new decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = new call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) new call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) new MyOrderedListener1 SimpleApplicationEventMulticaster MyOrderedListener2 decl ApplicationListener decl ApplicationListener public public decl_stmt MyOrderedListener1 = new decl_stmt MyOrderedListener2 = new decl_stmt org.springframework.context.ApplicationListener < = < new decl_stmt org.springframework.context.ApplicationListener < = < new decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = new call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call SimpleApplicationEventMulticaster.addApplicationListener() call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) new call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) call org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent,ResolvableType) new MethodInvocation EventPublicationInterceptor ApplicationContext public public throws decl_stmt org.aopalliance.intercept.MethodInvocation = decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.context.event.EventPublicationInterceptor = new call EventPublicationInterceptor.setApplicationEventClass() call EventPublicationInterceptor.setApplicationEventClass() call EventPublicationInterceptor.setApplicationEventClass() call EventPublicationInterceptor.setApplicationEventClass() call EventPublicationInterceptor.setApplicationEventClass() call EventPublicationInterceptor.setApplicationEventPublisher() call EventPublicationInterceptor.setApplicationEventPublisher() call EventPublicationInterceptor.setApplicationEventPublisher() call EventPublicationInterceptor.setApplicationEventPublisher() call EventPublicationInterceptor.setApplicationEventPublisher() call EventPublicationInterceptor.afterPropertiesSet() call EventPublicationInterceptor.afterPropertiesSet() call EventPublicationInterceptor.afterPropertiesSet() call EventPublicationInterceptor.afterPropertiesSet() call EventPublicationInterceptor.afterPropertiesSet() call MethodInvocation.proceed() call MethodInvocation.proceed() call MethodInvocation.proceed() call MethodInvocation.proceed() call MethodInvocation.proceed() new call MethodInvocation.getThis() call MethodInvocation.getThis() call MethodInvocation.getThis() call MethodInvocation.getThis() call MethodInvocation.getThis() new call EventPublicationInterceptor.invoke() call EventPublicationInterceptor.invoke() call EventPublicationInterceptor.invoke() call EventPublicationInterceptor.invoke() call EventPublicationInterceptor.invoke() MyOrderedListener1 RootBeanDefinition StaticApplicationContext AbstractApplicationEventMulticaster MyOtherEvent MyEvent MyEvent MyOtherEvent public public decl_stmt org.springframework.context.support.StaticApplicationContext = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() new call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() decl_stmt MyOrderedListener1 = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt MyOtherEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() decl_stmt MyEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() decl_stmt MyEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() decl_stmt MyOtherEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() decl_stmt org.springframework.context.event.AbstractApplicationEventMulticaster = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() MyPayloadListener AbstractApplicationEventMulticaster StaticApplicationContext public public decl_stmt org.springframework.context.support.StaticApplicationContext = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() new call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt MyPayloadListener = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() call MyPayloadListener.seenPayloads() decl_stmt org.springframework.context.event.AbstractApplicationEventMulticaster = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call AbstractApplicationEventMulticaster.retrieverCache() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() RootBeanDefinition MyOrderedListener1 RootBeanDefinition StaticApplicationContext SimpleApplicationEventMulticaster MyEvent public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.setInitMethodName() call RootBeanDefinition.setInitMethodName() call RootBeanDefinition.setInitMethodName() call RootBeanDefinition.setInitMethodName() call RootBeanDefinition.setInitMethodName() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setDependsOn() call RootBeanDefinition.setDependsOn() call RootBeanDefinition.setDependsOn() call RootBeanDefinition.setDependsOn() call RootBeanDefinition.setDependsOn() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt MyOrderedListener1 = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt MyEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() call MyOrderedListener1.seenEvents() decl_stmt org.springframework.context.event.SimpleApplicationEventMulticaster = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() call SimpleApplicationEventMulticaster.getApplicationListeners() RootBeanDefinition StaticApplicationContext MyOtherEvent MyOtherEvent MyEvent MyEvent public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt MyEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() decl_stmt MyOtherEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() decl_stmt MyEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() decl_stmt MyOtherEvent = new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() BeanThatBroadcasts RootBeanDefinition StaticApplicationContext public public decl_stmt org.springframework.context.support.StaticApplicationContext = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() call RootBeanDefinition.getConstructorArgumentValues() new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt org.springframework.context.BeanThatBroadcasts = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() new call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() TestBean RootBeanDefinition StaticApplicationContext public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() new call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() call StaticApplicationContext.publishEvent() new decl_stmt org.springframework.tests.sample.beans.TestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getFriends() call org.springframework.tests.sample.beans.TestBean.getFriends() call org.springframework.tests.sample.beans.TestBean.getFriends() call org.springframework.tests.sample.beans.TestBean.getFriends() call org.springframework.tests.sample.beans.TestBean.getFriends() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() BeanThatListens GenericApplicationContext public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.publishEvent() call GenericApplicationContext.publishEvent() call GenericApplicationContext.publishEvent() call GenericApplicationContext.publishEvent() call GenericApplicationContext.publishEvent() new decl_stmt org.springframework.context.BeanThatListens = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call org.springframework.context.BeanThatListens.getEventCount() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() public public public public return public public return public public public public public public public public public public public public = public public throws new return public public throws return