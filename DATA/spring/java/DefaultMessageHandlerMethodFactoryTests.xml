org.springframework.messaging.handler.annotation.support java.lang.reflect.Method import java.util.ArrayList import java.util.Arrays import java.util.HashMap import java.util.List import java.util.Locale import java.util.Map import javax.validation.Valid import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.junit.rules.TestName import org.springframework.beans.factory.support.StaticListableBeanFactory import org.springframework.core.MethodParameter import org.springframework.core.convert.converter.Converter import org.springframework.core.convert.support.GenericConversionService import org.springframework.messaging.Message import org.springframework.messaging.converter.ByteArrayMessageConverter import org.springframework.messaging.converter.MessageConversionException import org.springframework.messaging.converter.MessageConverter import org.springframework.messaging.handler.annotation.Payload import org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver import org.springframework.messaging.handler.invocation.InvocableHandlerMethod import org.springframework.messaging.support.MessageBuilder import org.springframework.util.ReflectionUtils import org.springframework.validation.Errors import org.springframework.validation.Validator import static static org.junit.Assert.* import class org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactoryTests ExpectedException SampleBean TestName GenericConversionService DefaultMessageHandlerMethodFactory InvocableHandlerMethod public public throws decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = decl_stmt org.springframework.core.convert.support.GenericConversionService = new call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) new < public public return call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) public public return GenericConversionService DefaultMessageHandlerMethodFactory InvocableHandlerMethod public public throws decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = decl_stmt org.springframework.core.convert.support.GenericConversionService = new call org.springframework.core.convert.support.GenericConversionService.canConvert(TypeDescriptor,TypeDescriptor) call org.springframework.core.convert.support.GenericConversionService.canConvert(TypeDescriptor,TypeDescriptor) call org.springframework.core.convert.support.GenericConversionService.canConvert(TypeDescriptor,TypeDescriptor) call org.springframework.core.convert.support.GenericConversionService.canConvert(TypeDescriptor,TypeDescriptor) call org.springframework.core.convert.support.GenericConversionService.canConvert(TypeDescriptor,TypeDescriptor) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setConversionService(ConversionService) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) InvocableHandlerMethod DefaultMessageHandlerMethodFactory MessageConverter public public throws decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = decl_stmt org.springframework.jms.support.converter.MessageConverter = new call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setMessageConverter(MessageConverter) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setMessageConverter(MessageConverter) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setMessageConverter(MessageConverter) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setMessageConverter(MessageConverter) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setMessageConverter(MessageConverter) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) InvocableHandlerMethod DefaultMessageHandlerMethodFactory decl List public public throws decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setCustomArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setCustomArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setCustomArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setCustomArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setCustomArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) InvocableHandlerMethod DefaultMessageHandlerMethodFactory decl Message InvocableHandlerMethod decl List public public throws decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setArgumentResolvers(List) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) InvocableHandlerMethod DefaultMessageHandlerMethodFactory public public throws decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) InvocableHandlerMethod DefaultMessageHandlerMethodFactory String public public throws decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setValidator(Validator) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setValidator(Validator) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setValidator(Validator) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setValidator(Validator) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setValidator(Validator) new public public < return public public decl_stmt java.lang.String = if call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(Message,Object) public public < return String public public decl_stmt java.lang.String = if private private + + private private < return DefaultMessageHandlerMethodFactory private private decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = new call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) new return Method private private < decl_stmt com.sun.jdi.Method = + + + return public public public public public public public public return public public < throws return