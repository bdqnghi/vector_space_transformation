org.springframework.messaging.simp.config org.springframework.messaging.MessageChannel import org.springframework.messaging.SubscribableChannel import org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler import org.springframework.scheduling.TaskScheduler import class org.springframework.messaging.simp.config.SimpleBrokerRegistration super super extends decl long TaskScheduler public public = return public public = return SimpleBrokerMessageHandler protected protected decl_stmt org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler = new if != call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setTaskScheduler(TaskScheduler) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setTaskScheduler(TaskScheduler) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setTaskScheduler(TaskScheduler) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setTaskScheduler(TaskScheduler) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setTaskScheduler(TaskScheduler) if != call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setHeartbeatValue(long) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setHeartbeatValue(long) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setHeartbeatValue(long) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setHeartbeatValue(long) call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setHeartbeatValue(long) return