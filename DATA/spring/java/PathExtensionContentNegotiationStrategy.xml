org.springframework.web.accept java.io.IOException import java.io.InputStream import java.util.Locale import java.util.Map import javax.activation.FileTypeMap import javax.activation.MimetypesFileTypeMap import javax.servlet.http.HttpServletRequest import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.http.MediaType import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.StringUtils import org.springframework.web.HttpMediaTypeNotAcceptableException import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.util.UrlPathHelper import org.springframework.web.util.WebUtils import class org.springframework.web.accept.PathExtensionContentNegotiationStrategy super super extends boolean Log UrlPathHelper boolean boolean public public = public public = String HttpServletRequest String String protected protected decl_stmt HttpServletRequest = if == call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() return decl_stmt java.lang.String = call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) decl_stmt java.lang.String = decl_stmt java.lang.String = return call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) : MediaType protected protected throws if && decl_stmt org.springframework.http.MediaType = + if != && ! return if return throw new MediaType String String public public decl_stmt org.springframework.http.MediaType = decl_stmt java.lang.String = decl_stmt java.lang.String = if != = if == && = if = return Resource InputStream private static private static decl_stmt org.springframework.core.io.Resource = new if call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + decl_stmt java.io.InputStream = try = call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() return new catch finally if != try call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() catch if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() return String public static public static decl_stmt java.lang.String = return :