org.springframework.core.type.classreading java.lang.reflect.Field import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.asm.AnnotationVisitor import org.springframework.asm.SpringAsmInfo import org.springframework.asm.Type import org.springframework.core.annotation.AnnotationAttributes import org.springframework.util.ReflectionUtils import class org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor super super extends AnnotationAttributes Log ClassLoader public public String AnnotationAttributes public public decl_stmt java.lang.String = decl_stmt org.springframework.core.annotation.AnnotationAttributes = new return new public public return new Object public public decl_stmt java.lang.Object = Field Object decl Class protected protected decl_stmt java.lang.Object = try decl_stmt java.lang.Class < = decl_stmt com.sun.jdi.Field = if != = call com.sun.jdi.Field.get(Object) call com.sun.jdi.Field.get(Object) call com.sun.jdi.Field.get(Object) call com.sun.jdi.Field.get(Object) call com.sun.jdi.Field.get(Object) catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() catch call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() return