org.springframework.cache.annotation java.io.Serializable import java.lang.annotation.Annotation import java.lang.reflect.AnnotatedElement import java.lang.reflect.Method import java.util.ArrayList import java.util.Collection import org.springframework.cache.interceptor.CacheEvictOperation import org.springframework.cache.interceptor.CacheOperation import org.springframework.cache.interceptor.CachePutOperation import org.springframework.cache.interceptor.CacheableOperation import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.core.annotation.AnnotationUtils import org.springframework.util.ObjectUtils import org.springframework.util.StringUtils import class annotation org.springframework.cache.annotation.SpringCacheAnnotationParser super super implements DefaultCacheConfig public < public < < decl_stmt DefaultCacheConfig = return DefaultCacheConfig public < public < decl_stmt DefaultCacheConfig = return decl Collection decl Collection decl Collection decl Collection decl Collection decl Collection protected < protected < decl_stmt java.util.Collection < = decl_stmt java.util.Collection < = if ! call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() = for : call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() decl_stmt java.util.Collection < = if ! call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() = for : call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() decl_stmt java.util.Collection < = if ! call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() = for : call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() decl_stmt java.util.Collection < = if ! call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() = for : decl_stmt java.util.Collection < = if != call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() return private < extends extends < private < extends extends < < return != : new < decl CacheableOperation decl Builder decl_stmt org.springframework.web.servlet.mvc.method.Builder = new call decl CacheableOperation.setName() call decl CacheableOperation.setName() call decl CacheableOperation.setName() call decl CacheableOperation.setName() call decl CacheableOperation.setName() call decl CacheableOperation.setCacheNames() call decl CacheableOperation.setCacheNames() call decl CacheableOperation.setCacheNames() call decl CacheableOperation.setCacheNames() call decl CacheableOperation.setCacheNames() call decl CacheableOperation.setCondition() call decl CacheableOperation.setCondition() call decl CacheableOperation.setCondition() call decl CacheableOperation.setCondition() call decl CacheableOperation.setCondition() call decl CacheableOperation.setUnless() call decl CacheableOperation.setUnless() call decl CacheableOperation.setUnless() call decl CacheableOperation.setUnless() call decl CacheableOperation.setUnless() call decl CacheableOperation.setKey() call decl CacheableOperation.setKey() call decl CacheableOperation.setKey() call decl CacheableOperation.setKey() call decl CacheableOperation.setKey() call decl CacheableOperation.setKeyGenerator() call decl CacheableOperation.setKeyGenerator() call decl CacheableOperation.setKeyGenerator() call decl CacheableOperation.setKeyGenerator() call decl CacheableOperation.setKeyGenerator() call decl CacheableOperation.setCacheManager() call decl CacheableOperation.setCacheManager() call decl CacheableOperation.setCacheManager() call decl CacheableOperation.setCacheManager() call decl CacheableOperation.setCacheManager() call decl CacheableOperation.setCacheResolver() call decl CacheableOperation.setCacheResolver() call decl CacheableOperation.setCacheResolver() call decl CacheableOperation.setCacheResolver() call decl CacheableOperation.setCacheResolver() call decl CacheableOperation.setSync() call decl CacheableOperation.setSync() call decl CacheableOperation.setSync() call decl CacheableOperation.setSync() call decl CacheableOperation.setSync() decl_stmt org.springframework.cache.interceptor.CacheableOperation = call decl CacheableOperation.build() call decl CacheableOperation.build() call decl CacheableOperation.build() call decl CacheableOperation.build() call decl CacheableOperation.build() return decl CacheEvictOperation decl Builder decl_stmt org.springframework.web.servlet.mvc.method.Builder = new call decl CacheEvictOperation.setName() call decl CacheEvictOperation.setName() call decl CacheEvictOperation.setName() call decl CacheEvictOperation.setName() call decl CacheEvictOperation.setName() call decl CacheEvictOperation.setCacheNames() call decl CacheEvictOperation.setCacheNames() call decl CacheEvictOperation.setCacheNames() call decl CacheEvictOperation.setCacheNames() call decl CacheEvictOperation.setCacheNames() call decl CacheEvictOperation.setCondition() call decl CacheEvictOperation.setCondition() call decl CacheEvictOperation.setCondition() call decl CacheEvictOperation.setCondition() call decl CacheEvictOperation.setCondition() call decl CacheEvictOperation.setKey() call decl CacheEvictOperation.setKey() call decl CacheEvictOperation.setKey() call decl CacheEvictOperation.setKey() call decl CacheEvictOperation.setKey() call decl CacheEvictOperation.setKeyGenerator() call decl CacheEvictOperation.setKeyGenerator() call decl CacheEvictOperation.setKeyGenerator() call decl CacheEvictOperation.setKeyGenerator() call decl CacheEvictOperation.setKeyGenerator() call decl CacheEvictOperation.setCacheManager() call decl CacheEvictOperation.setCacheManager() call decl CacheEvictOperation.setCacheManager() call decl CacheEvictOperation.setCacheManager() call decl CacheEvictOperation.setCacheManager() call decl CacheEvictOperation.setCacheResolver() call decl CacheEvictOperation.setCacheResolver() call decl CacheEvictOperation.setCacheResolver() call decl CacheEvictOperation.setCacheResolver() call decl CacheEvictOperation.setCacheResolver() call decl CacheEvictOperation.setCacheWide() call decl CacheEvictOperation.setCacheWide() call decl CacheEvictOperation.setCacheWide() call decl CacheEvictOperation.setCacheWide() call decl CacheEvictOperation.setCacheWide() call decl CacheEvictOperation.setBeforeInvocation() call decl CacheEvictOperation.setBeforeInvocation() call decl CacheEvictOperation.setBeforeInvocation() call decl CacheEvictOperation.setBeforeInvocation() call decl CacheEvictOperation.setBeforeInvocation() decl_stmt org.springframework.cache.interceptor.CacheEvictOperation = call decl CacheEvictOperation.build() call decl CacheEvictOperation.build() call decl CacheEvictOperation.build() call decl CacheEvictOperation.build() call decl CacheEvictOperation.build() return decl CachePutOperation decl Builder decl_stmt org.springframework.web.servlet.mvc.method.Builder = new call decl CachePutOperation.setName() call decl CachePutOperation.setName() call decl CachePutOperation.setName() call decl CachePutOperation.setName() call decl CachePutOperation.setName() call decl CachePutOperation.setCacheNames() call decl CachePutOperation.setCacheNames() call decl CachePutOperation.setCacheNames() call decl CachePutOperation.setCacheNames() call decl CachePutOperation.setCacheNames() call decl CachePutOperation.setCondition() call decl CachePutOperation.setCondition() call decl CachePutOperation.setCondition() call decl CachePutOperation.setCondition() call decl CachePutOperation.setCondition() call decl CachePutOperation.setUnless() call decl CachePutOperation.setUnless() call decl CachePutOperation.setUnless() call decl CachePutOperation.setUnless() call decl CachePutOperation.setUnless() call decl CachePutOperation.setKey() call decl CachePutOperation.setKey() call decl CachePutOperation.setKey() call decl CachePutOperation.setKey() call decl CachePutOperation.setKey() call decl CachePutOperation.setKeyGenerator() call decl CachePutOperation.setKeyGenerator() call decl CachePutOperation.setKeyGenerator() call decl CachePutOperation.setKeyGenerator() call decl CachePutOperation.setKeyGenerator() call decl CachePutOperation.setCacheManager() call decl CachePutOperation.setCacheManager() call decl CachePutOperation.setCacheManager() call decl CachePutOperation.setCacheManager() call decl CachePutOperation.setCacheManager() call decl CachePutOperation.setCacheResolver() call decl CachePutOperation.setCacheResolver() call decl CachePutOperation.setCacheResolver() call decl CachePutOperation.setCacheResolver() call decl CachePutOperation.setCacheResolver() decl_stmt org.springframework.cache.jcache.interceptor.CachePutOperation = call decl CachePutOperation.build() call decl CachePutOperation.build() call decl CachePutOperation.build() call decl CachePutOperation.build() call decl CachePutOperation.build() return decl CacheEvict decl Cacheable decl CachePut decl Collection < < decl_stmt java.util.Collection < = decl_stmt Cacheable = if ! = for : call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() decl_stmt CacheEvict = if ! = for : call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() decl_stmt CachePut = if ! = for : call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() return CacheConfig < decl_stmt CacheConfig = if != return new call CacheConfig.cacheNames() call CacheConfig.cacheNames() call CacheConfig.cacheNames() call CacheConfig.cacheNames() call CacheConfig.cacheNames() call CacheConfig.keyGenerator() call CacheConfig.keyGenerator() call CacheConfig.keyGenerator() call CacheConfig.keyGenerator() call CacheConfig.keyGenerator() call CacheConfig.cacheManager() call CacheConfig.cacheManager() call CacheConfig.cacheManager() call CacheConfig.cacheManager() call CacheConfig.cacheManager() call CacheConfig.cacheResolver() call CacheConfig.cacheResolver() call CacheConfig.cacheResolver() call CacheConfig.cacheResolver() call CacheConfig.cacheResolver() return new private private if && throw new + + + + if && throw new + + + + + public public return == || instanceof public public return public public if && != if ! && ! && if || else if else if