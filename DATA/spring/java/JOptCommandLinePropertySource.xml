org.springframework.core.env java.util.ArrayList import java.util.Collections import java.util.List import joptsimple.OptionSet import joptsimple.OptionSpec import org.springframework.util.Assert import class org.springframework.core.env.JOptCommandLinePropertySource super super extends protected protected return decl List decl List public public decl_stmt java.util.List < = new < for < : decl_stmt java.util.List < = new < if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl List decl List public < public < decl_stmt java.util.List < = decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() instanceof : if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return > : return decl List decl List protected < protected < decl_stmt java.util.List < = decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() > :