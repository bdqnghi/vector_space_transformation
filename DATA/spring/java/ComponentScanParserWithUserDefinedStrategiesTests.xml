org.springframework.context.annotation org.junit.Test import org.springframework.beans.BeansException import org.springframework.beans.factory.config.BeanDefinition import org.springframework.context.ApplicationContext import org.springframework.context.support.ClassPathXmlApplicationContext import static static org.junit.Assert.* import class org.springframework.context.annotation.ComponentScanParserWithUserDefinedStrategiesTests ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = new call ApplicationContext.containsBean() call ApplicationContext.containsBean() call ApplicationContext.containsBean() call ApplicationContext.containsBean() call ApplicationContext.containsBean() BeanDefinition ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new decl_stmt org.springframework.beans.factory.config.BeanDefinition = call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call org.springframework.beans.factory.config.BeanDefinition.getScope() call org.springframework.beans.factory.config.BeanDefinition.getScope() call org.springframework.beans.factory.config.BeanDefinition.getScope() call org.springframework.beans.factory.config.BeanDefinition.getScope() call org.springframework.beans.factory.config.BeanDefinition.getScope() call org.springframework.beans.factory.config.BeanDefinition.isSingleton() call org.springframework.beans.factory.config.BeanDefinition.isSingleton() call org.springframework.beans.factory.config.BeanDefinition.isSingleton() call org.springframework.beans.factory.config.BeanDefinition.isSingleton() call org.springframework.beans.factory.config.BeanDefinition.isSingleton() public public try new catch public public try new catch