org.springframework.web.servlet.support java.util.Collections import java.util.EnumSet import java.util.EventListener import java.util.LinkedHashMap import java.util.Map import javax.servlet.DispatcherType import javax.servlet.Filter import javax.servlet.FilterRegistration.Dynamic import javax.servlet.Servlet import javax.servlet.ServletContextEvent import javax.servlet.ServletContextListener import javax.servlet.ServletException import javax.servlet.ServletRegistration import org.junit.Before import org.junit.Test import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.mock.web.test.MockServletConfig import org.springframework.mock.web.test.MockServletContext import org.springframework.web.context.WebApplicationContext import org.springframework.web.context.support.AnnotationConfigWebApplicationContext import org.springframework.web.filter.DelegatingFilterProxy import org.springframework.web.filter.HiddenHttpMethodFilter import org.springframework.web.servlet.DispatcherServlet import static static org.junit.Assert.* import class org.springframework.web.servlet.support.AnnotationConfigDispatcherServletInitializerTests decl Map decl Map decl Map decl Map AbstractDispatcherServletInitializer String MockServletContext String String public public throws = new = new = new < = new < = new < = new < WebApplicationContext DispatcherServlet MockServletRegistration public public throws call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.springframework.web.servlet.DispatcherServlet = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.springframework.web.context.WebApplicationContext = call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() instanceof call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.springframework.web.servlet.support.MockServletRegistration = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.springframework.web.servlet.support.MockServletRegistration.getMappings() call org.springframework.web.servlet.support.MockServletRegistration.getMappings() call org.springframework.web.servlet.support.MockServletRegistration.getMappings() call org.springframework.web.servlet.support.MockServletRegistration.getMappings() call org.springframework.web.servlet.support.MockServletRegistration.getMappings() call org.springframework.web.servlet.support.MockServletRegistration.getLoadOnStartup() call org.springframework.web.servlet.support.MockServletRegistration.getLoadOnStartup() call org.springframework.web.servlet.support.MockServletRegistration.getLoadOnStartup() call org.springframework.web.servlet.support.MockServletRegistration.getLoadOnStartup() call org.springframework.web.servlet.support.MockServletRegistration.getLoadOnStartup() call org.springframework.web.servlet.support.MockServletRegistration.getRunAsRole() call org.springframework.web.servlet.support.MockServletRegistration.getRunAsRole() call org.springframework.web.servlet.support.MockServletRegistration.getRunAsRole() call org.springframework.web.servlet.support.MockServletRegistration.getRunAsRole() call org.springframework.web.servlet.support.MockServletRegistration.getRunAsRole() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() MockServletRegistration public public throws = new protected protected return call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() decl_stmt org.springframework.web.servlet.support.MockServletRegistration = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() call org.springframework.web.servlet.support.MockServletRegistration.isAsyncSupported() for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() protected protected return WebApplicationContext DispatcherServlet public public throws = new protected < protected < return new < protected < protected < return call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() decl_stmt org.springframework.web.servlet.DispatcherServlet = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call DispatcherServlet.init() call DispatcherServlet.init() call DispatcherServlet.init() call DispatcherServlet.init() call DispatcherServlet.init() new decl_stmt org.springframework.web.context.WebApplicationContext = call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call DispatcherServlet.getWebApplicationContext() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.containsBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() call WebApplicationContext.getBean() instanceof protected < protected < return new < protected < protected < return public public throws = new protected protected return call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call AbstractDispatcherServletInitializer.onStartup() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() protected protected return public < extends extends public < extends extends if instanceof new MockServletRegistration public public if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() return call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.web.servlet.support.MockServletRegistration = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return MockFilterRegistration public public if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() return call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.web.servlet.support.MockFilterRegistration = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return protected protected return protected < protected < return new < protected protected return new protected protected return new new new new new protected protected protected < protected < return public public return new