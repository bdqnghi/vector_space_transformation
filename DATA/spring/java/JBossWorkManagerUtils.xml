org.springframework.jca.work.jboss java.lang.reflect.Method import javax.management.MBeanServerConnection import javax.management.MBeanServerInvocationHandler import javax.management.ObjectName import javax.naming.InitialContext import javax.resource.spi.work.WorkManager import org.springframework.util.Assert import class annotation org.springframework.jca.work.jboss.JBossWorkManagerUtils String String String public static public static return ObjectName decl Class Object InitialContext Method MBeanServerConnection public static public static try decl_stmt java.lang.Class < = decl_stmt javax.naming.InitialContext = new decl_stmt javax.management.MBeanServerConnection = call javax.naming.InitialContext.lookup(Name) call javax.naming.InitialContext.lookup(Name) call javax.naming.InitialContext.lookup(Name) call javax.naming.InitialContext.lookup(Name) call javax.naming.InitialContext.lookup(Name) decl_stmt ObjectName = decl_stmt java.lang.Object = decl_stmt com.sun.jdi.Method = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() return call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) catch throw new