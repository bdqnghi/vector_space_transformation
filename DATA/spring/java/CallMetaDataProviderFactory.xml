org.springframework.jdbc.core.metadata java.sql.DatabaseMetaData import java.sql.SQLException import java.util.Arrays import java.util.List import javax.sql.DataSource import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.dao.DataAccessResourceFailureException import org.springframework.jdbc.support.DatabaseMetaDataCallback import org.springframework.jdbc.support.JdbcUtils import org.springframework.jdbc.support.MetaDataAccessException import class org.springframework.jdbc.core.metadata.CallMetaDataProviderFactory decl List decl List Log boolean String CallMetaDataProvider static public static public final final try return new public public throws decl_stmt java.lang.String = decl_stmt boolean = if if ! call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + + if call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() = else if ! call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + + if call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() = decl_stmt org.springframework.jdbc.core.metadata.CallMetaDataProvider if = new else if = new else if = new else if = new else if = new else if = new else if = new else = new if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) if call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) return catch throw new boolean String CallMetaDataProvider public public throws decl_stmt java.lang.String = decl_stmt boolean = if if ! call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + + if call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() = else if ! call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + + if call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() = decl_stmt org.springframework.jdbc.core.metadata.CallMetaDataProvider if = new else if = new else if = new else if = new else if = new else if = new else if = new else = new if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call CallMetaDataProvider.getClass() call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithMetaData(DatabaseMetaData) if call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.CallMetaDataProvider.initializeWithProcedureColumnMetaData(DatabaseMetaData,String,String,String) return