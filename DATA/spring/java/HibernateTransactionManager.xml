org.springframework.orm.hibernate3 java.sql.Connection import javax.sql.DataSource import org.hibernate.ConnectionReleaseMode import org.hibernate.FlushMode import org.hibernate.HibernateException import org.hibernate.Interceptor import org.hibernate.JDBCException import org.hibernate.Session import org.hibernate.SessionFactory import org.hibernate.Transaction import org.hibernate.exception.GenericJDBCException import org.hibernate.impl.SessionImpl import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.InitializingBean import org.springframework.dao.DataAccessException import org.springframework.dao.DataAccessResourceFailureException import org.springframework.jdbc.datasource.ConnectionHolder import org.springframework.jdbc.datasource.DataSourceUtils import org.springframework.jdbc.datasource.JdbcTransactionObjectSupport import org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy import org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator import org.springframework.jdbc.support.SQLExceptionTranslator import org.springframework.transaction.CannotCreateTransactionException import org.springframework.transaction.IllegalTransactionStateException import org.springframework.transaction.InvalidIsolationLevelException import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionSystemException import org.springframework.transaction.support.AbstractPlatformTransactionManager import org.springframework.transaction.support.DefaultTransactionStatus import org.springframework.transaction.support.ResourceTransactionManager import org.springframework.transaction.support.TransactionSynchronizationManager import class annotation annotation org.springframework.orm.hibernate3.HibernateTransactionManager super super extends super implements BeanFactory boolean boolean boolean SQLExceptionTranslator SessionFactory boolean SQLExceptionTranslator Object DataSource public public = public public return public public if instanceof = else = public public return public public = public public = public public = public public = public public = public public = String public public throws if instanceof return else if instanceof if == throw new decl_stmt java.lang.String = return else return public public = public public return public public = DataSource public public if == throw new if instanceof && == throw new if && == decl_stmt javax.sql.DataSource = if != if + + public public return Session HibernateTransactionObject SessionHolder ConnectionHolder protected protected decl_stmt HibernateTransactionObject = new call HibernateTransactionObject.setSavepointAllowed() call HibernateTransactionObject.setSavepointAllowed() call HibernateTransactionObject.setSavepointAllowed() call HibernateTransactionObject.setSavepointAllowed() call HibernateTransactionObject.setSavepointAllowed() decl_stmt org.springframework.orm.hibernate4.SessionHolder = if != if + call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() + call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() else if try decl_stmt sun.security.pkcs11.Session = if + + call HibernateTransactionObject.setExistingSession() call HibernateTransactionObject.setExistingSession() call HibernateTransactionObject.setExistingSession() call HibernateTransactionObject.setExistingSession() call HibernateTransactionObject.setExistingSession() catch throw new if != decl_stmt org.springframework.jdbc.datasource.ConnectionHolder = call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() return HibernateTransactionObject protected protected decl_stmt HibernateTransactionObject = return call HibernateTransactionObject.hasSpringManagedTransaction() call HibernateTransactionObject.hasSpringManagedTransaction() call HibernateTransactionObject.hasSpringManagedTransaction() call HibernateTransactionObject.hasSpringManagedTransaction() call HibernateTransactionObject.hasSpringManagedTransaction() || && call HibernateTransactionObject.hasHibernateManagedTransaction() call HibernateTransactionObject.hasHibernateManagedTransaction() call HibernateTransactionObject.hasHibernateManagedTransaction() call HibernateTransactionObject.hasHibernateManagedTransaction() call HibernateTransactionObject.hasHibernateManagedTransaction() Interceptor int Transaction Session ConnectionHolder HibernateTransactionObject Session FlushMode Integer Connection protected protected decl_stmt HibernateTransactionObject = if call HibernateTransactionObject.hasConnectionHolder() call HibernateTransactionObject.hasConnectionHolder() call HibernateTransactionObject.hasConnectionHolder() call HibernateTransactionObject.hasConnectionHolder() call HibernateTransactionObject.hasConnectionHolder() && ! call HibernateTransactionObject.getConnectionHolder() call HibernateTransactionObject.getConnectionHolder() call HibernateTransactionObject.getConnectionHolder() call HibernateTransactionObject.getConnectionHolder() call HibernateTransactionObject.getConnectionHolder() throw new + + + decl_stmt sun.security.pkcs11.Session = try if call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() == || call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() decl_stmt Interceptor = decl_stmt sun.security.pkcs11.Session = != : if + + call HibernateTransactionObject.setSession() call HibernateTransactionObject.setSession() call HibernateTransactionObject.setSession() call HibernateTransactionObject.setSession() call HibernateTransactionObject.setSession() = call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() if && if + + decl_stmt sun.rmi.transport.Connection = call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt java.lang.Integer = call HibernateTransactionObject.setPreviousIsolationLevel() call HibernateTransactionObject.setPreviousIsolationLevel() call HibernateTransactionObject.setPreviousIsolationLevel() call HibernateTransactionObject.setPreviousIsolationLevel() call HibernateTransactionObject.setPreviousIsolationLevel() else if != throw new + + + + if + + if && call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() if ! && ! call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() decl_stmt FlushMode = call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() if call FlushMode.lessThan() call FlushMode.lessThan() call FlushMode.lessThan() call FlushMode.lessThan() call FlushMode.lessThan() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() decl_stmt Transaction decl_stmt int = if != = call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Transaction.setTimeout() call Transaction.setTimeout() call Transaction.setTimeout() call Transaction.setTimeout() call Transaction.setTimeout() call Transaction.begin() call Transaction.begin() call Transaction.begin() call Transaction.begin() call Transaction.begin() else = call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() if != decl_stmt sun.rmi.transport.Connection = call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.jdbc.datasource.ConnectionHolder = new if != call ConnectionHolder.setTimeoutInSeconds() call ConnectionHolder.setTimeoutInSeconds() call ConnectionHolder.setTimeoutInSeconds() call ConnectionHolder.setTimeoutInSeconds() call ConnectionHolder.setTimeoutInSeconds() if + + call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() if call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() catch if call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() try if call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() catch finally call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() throw new HibernateTransactionObject ConnectionHolder SessionHolder protected protected decl_stmt HibernateTransactionObject = call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() call HibernateTransactionObject.setSessionHolder() decl_stmt org.springframework.orm.hibernate4.SessionHolder = call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() call HibernateTransactionObject.setConnectionHolder() decl_stmt org.springframework.jdbc.datasource.ConnectionHolder = if != = return new SuspendedResourcesHolder protected protected decl_stmt SuspendedResourcesHolder = if call SuspendedResourcesHolder.getSessionHolder() call SuspendedResourcesHolder.getSessionHolder() call SuspendedResourcesHolder.getSessionHolder() call SuspendedResourcesHolder.getSessionHolder() call SuspendedResourcesHolder.getSessionHolder() if != call SuspendedResourcesHolder.getConnectionHolder() call SuspendedResourcesHolder.getConnectionHolder() call SuspendedResourcesHolder.getConnectionHolder() call SuspendedResourcesHolder.getConnectionHolder() call SuspendedResourcesHolder.getConnectionHolder() HibernateTransactionObject Session protected protected if && decl_stmt HibernateTransactionObject = decl_stmt sun.security.pkcs11.Session = call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() if ! call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() try call Session.flush() call Session.flush() call Session.flush() call Session.flush() call Session.flush() catch throw finally call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() HibernateTransactionObject protected protected decl_stmt HibernateTransactionObject = if + call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() + try call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() catch throw new catch throw HibernateTransactionObject protected protected decl_stmt HibernateTransactionObject = if + call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() + try call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() catch throw new catch throw finally if ! call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() && ! call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() HibernateTransactionObject protected protected decl_stmt HibernateTransactionObject = if + call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() + call HibernateTransactionObject.setRollbackOnly() call HibernateTransactionObject.setRollbackOnly() call HibernateTransactionObject.setRollbackOnly() call HibernateTransactionObject.setRollbackOnly() call HibernateTransactionObject.setRollbackOnly() HibernateTransactionObject Session Connection protected protected decl_stmt HibernateTransactionObject = if call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() call HibernateTransactionObject.isNewSessionHolder() if != decl_stmt sun.security.pkcs11.Session = call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() if && call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() && try decl_stmt sun.rmi.transport.Connection = call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call HibernateTransactionObject.getPreviousIsolationLevel() call HibernateTransactionObject.getPreviousIsolationLevel() call HibernateTransactionObject.getPreviousIsolationLevel() call HibernateTransactionObject.getPreviousIsolationLevel() call HibernateTransactionObject.getPreviousIsolationLevel() catch if call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() call HibernateTransactionObject.isNewSession() if + + else if + + if call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() != call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() if ! call Session.disconnect() call Session.disconnect() call Session.disconnect() call Session.disconnect() call Session.disconnect() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() call HibernateTransactionObject.getSessionHolder() ConnectionReleaseMode protected protected if ! instanceof return decl_stmt ConnectionReleaseMode = return protected protected if != && instanceof return else if == return return protected protected return + protected synchronized protected synchronized if == if != = new else = return public public = new = = public public = new = = public public = = = public public return public public return public public return public public return != && != public public return != && public public if public public return || && public public try catch throw private private return private private return