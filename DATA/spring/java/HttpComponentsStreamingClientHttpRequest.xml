org.springframework.http.client java.io.IOException import java.io.InputStream import java.io.OutputStream import java.net.URI import org.apache.http.Header import org.apache.http.HttpEntity import org.apache.http.HttpEntityEnclosingRequest import org.apache.http.HttpResponse import org.apache.http.client.HttpClient import org.apache.http.client.methods.HttpUriRequest import org.apache.http.message.BasicHeader import org.apache.http.protocol.HttpContext import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.http.MediaType import org.springframework.http.StreamingHttpOutputMessage import class org.springframework.http.client.HttpComponentsStreamingClientHttpRequest super super extends super implements HttpUriRequest Body HttpContext HttpClient public public return public public return public public = protected protected throws throw new HttpResponse HttpEntityEnclosingRequest HttpEntity protected protected throws if instanceof && != decl_stmt HttpEntityEnclosingRequest = decl_stmt org.springframework.http.HttpEntity = new call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() decl_stmt HttpResponse = return new public public return public public return public public return MediaType public public decl_stmt org.springframework.http.MediaType = return != new call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) : String public public decl_stmt java.lang.String = return != new : public public throws throw new public public throws public public return public public throws throw new