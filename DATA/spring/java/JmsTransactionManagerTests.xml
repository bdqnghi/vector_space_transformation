org.springframework.jms.connection javax.jms.Connection import javax.jms.ConnectionFactory import javax.jms.Destination import javax.jms.JMSException import javax.jms.Message import javax.jms.MessageProducer import javax.jms.Session import org.junit.After import org.junit.Test import org.springframework.jms.StubQueue import org.springframework.jms.core.JmsTemplate import org.springframework.jms.core.MessageCreator import org.springframework.jms.core.SessionCallback import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionStatus import org.springframework.transaction.UnexpectedRollbackException import org.springframework.transaction.support.DefaultTransactionDefinition import org.springframework.transaction.support.TransactionCallbackWithoutResult import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.transaction.support.TransactionTemplate import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.jms.connection.JmsTransactionManagerTests public public Session JmsTemplate ConnectionFactory TransactionStatus JmsTransactionManager Connection public public throws decl_stmt ConnectionFactory = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session final final = call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() decl_stmt org.springframework.jms.connection.JmsTransactionManager = new decl_stmt org.springframework.transaction.TransactionStatus = call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() new decl_stmt org.springframework.jms.core.JmsTemplate = new call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() public public == return Session JmsTemplate ConnectionFactory TransactionStatus JmsTransactionManager Connection public public throws decl_stmt ConnectionFactory = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session final final = call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() decl_stmt org.springframework.jms.connection.JmsTransactionManager = new decl_stmt org.springframework.transaction.TransactionStatus = call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() new decl_stmt org.springframework.jms.core.JmsTemplate = new call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return call JmsTransactionManager.rollback() call JmsTransactionManager.rollback() call JmsTransactionManager.rollback() call JmsTransactionManager.rollback() call JmsTransactionManager.rollback() public public == return Session JmsTemplate TransactionTemplate ConnectionFactory TransactionStatus JmsTransactionManager Connection public public throws decl_stmt ConnectionFactory = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session final final = call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() decl_stmt org.springframework.jms.connection.JmsTransactionManager = new decl_stmt org.springframework.transaction.TransactionStatus = call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() new decl_stmt org.springframework.jms.core.JmsTemplate final final = new call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return decl_stmt org.springframework.transaction.support.TransactionTemplate = new call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() public public == return protected protected new < public public == return public public == return Session JmsTemplate TransactionTemplate ConnectionFactory TransactionStatus JmsTransactionManager Connection public public throws decl_stmt ConnectionFactory = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session final final = call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() decl_stmt org.springframework.jms.connection.JmsTransactionManager = new decl_stmt org.springframework.transaction.TransactionStatus = call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() new decl_stmt org.springframework.jms.core.JmsTemplate final final = new call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return decl_stmt org.springframework.transaction.support.TransactionTemplate = new call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return try call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() catch public public == return protected protected new < public public == return public public == return Session Session JmsTemplate TransactionTemplate TransactionStatus ConnectionFactory JmsTransactionManager Connection public public throws decl_stmt ConnectionFactory final final = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session final final = decl_stmt sun.security.pkcs11.Session final final = call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() decl_stmt org.springframework.jms.connection.JmsTransactionManager = new decl_stmt org.springframework.transaction.TransactionStatus = call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() new decl_stmt org.springframework.jms.core.JmsTemplate final final = new call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public != return call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() public public == return protected protected new < public public != return public public != return public public == return Session Session JmsTemplate TransactionTemplate TransactionStatus ConnectionFactory JmsTransactionManager Connection public public throws decl_stmt ConnectionFactory final final = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session final final = decl_stmt sun.security.pkcs11.Session final final = call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() decl_stmt org.springframework.jms.connection.JmsTransactionManager = new decl_stmt org.springframework.transaction.TransactionStatus = call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() new decl_stmt org.springframework.jms.core.JmsTemplate final final = new call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public != return call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) call org.springframework.jms.core.JmsTemplate.execute(SessionCallback,boolean) new < public public == return call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() public public == return protected protected new < public public != return public public != return public public == return JmsTransactionManager MessageProducer Destination ConnectionFactory TransactionStatus JmsTemplate Session Message Connection public public throws decl_stmt javax.print.attribute.standard.Destination = new decl_stmt ConnectionFactory = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session = decl_stmt MessageProducer = decl_stmt org.springframework.messaging.Message final final = call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call ConnectionFactory.createConnection() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Connection.createSession() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.getTransacted() call Session.getTransacted() call Session.getTransacted() call Session.getTransacted() call Session.getTransacted() decl_stmt org.springframework.jms.connection.JmsTransactionManager = new decl_stmt org.springframework.transaction.TransactionStatus = call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() call JmsTransactionManager.getTransaction() new decl_stmt org.springframework.jms.core.JmsTemplate = new call org.springframework.jms.core.JmsTemplate.send(String,MessageCreator) call org.springframework.jms.core.JmsTemplate.send(String,MessageCreator) call org.springframework.jms.core.JmsTemplate.send(String,MessageCreator) call org.springframework.jms.core.JmsTemplate.send(String,MessageCreator) call org.springframework.jms.core.JmsTemplate.send(String,MessageCreator) new public public throws return call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() call JmsTransactionManager.commit() public public throws return