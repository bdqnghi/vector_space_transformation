org.springframework.http.client java.io.IOException import java.io.OutputStream import java.net.URI import java.util.Arrays import java.util.Locale import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.beans.factory.DisposableBean import org.springframework.beans.factory.InitializingBean import org.springframework.http.HttpMethod import org.springframework.http.HttpStatus import org.springframework.http.StreamingHttpOutputMessage import org.springframework.util.FileCopyUtils import org.springframework.util.StreamUtils import static static org.junit.Assert.* import class org.springframework.http.client.AbstractHttpRequestFactoryTestCase super super extends ClientHttpRequestFactory public final public final throws = if instanceof public final public final throws if instanceof ClientHttpRequest URI ClientHttpResponse public public throws decl_stmt java.net.URI = new + decl_stmt org.springframework.http.client.ClientHttpRequest = call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getURI() call ClientHttpRequest.getURI() call ClientHttpRequest.getURI() call ClientHttpRequest.getURI() call ClientHttpRequest.getURI() decl_stmt org.springframework.http.client.ClientHttpResponse = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() try call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() finally call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() decl byte StreamingHttpOutputMessage String ClientHttpRequest String decl byte String ClientHttpResponse public public throws decl_stmt org.springframework.http.client.ClientHttpRequest = call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new + call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() decl_stmt java.lang.String = decl_stmt java.lang.String = call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() decl_stmt java.lang.String = call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() decl_stmt byte final final final = call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() if instanceof decl_stmt org.springframework.http.StreamingHttpOutputMessage = call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() new public public throws else call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() decl_stmt org.springframework.http.client.ClientHttpResponse = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() try call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt byte = call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() finally call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() public public throws decl byte StreamingHttpOutputMessage ClientHttpRequest ClientHttpResponse = public = public throws decl_stmt org.springframework.http.client.ClientHttpRequest = call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new + decl_stmt byte final final final = if instanceof decl_stmt org.springframework.http.StreamingHttpOutputMessage = call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() call StreamingHttpOutputMessage.setBody() new public public throws else call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() decl_stmt org.springframework.http.client.ClientHttpResponse = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() try call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() finally call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() public public throws decl byte ClientHttpRequest ClientHttpResponse = public = public throws decl_stmt org.springframework.http.client.ClientHttpRequest = call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new + call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() decl_stmt byte = call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() decl_stmt org.springframework.http.client.ClientHttpResponse = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() try call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() finally call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() public public throws ClientHttpRequest ClientHttpResponse protected protected throws decl_stmt org.springframework.http.client.ClientHttpResponse = try decl_stmt org.springframework.http.client.ClientHttpRequest = call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new + + if == || == || == try call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() catch = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() call ClientHttpRequest.getMethod() finally if != call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() ClientHttpRequest URI ClientHttpResponse public public throws decl_stmt java.net.URI = new + decl_stmt org.springframework.http.client.ClientHttpRequest = call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() decl_stmt org.springframework.http.client.ClientHttpResponse = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() try call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() finally call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close() call org.springframework.http.client.ClientHttpResponse.close()