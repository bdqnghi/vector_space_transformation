org.springframework.context.support java.util.Optional import java.util.Properties import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.beans.factory.BeanDefinitionStoreException import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.core.convert.support.DefaultConversionService import org.springframework.core.env.MutablePropertySources import org.springframework.core.env.PropertySource import org.springframework.core.env.StandardEnvironment import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.mock.env.MockEnvironment import org.springframework.mock.env.MockPropertySource import org.springframework.tests.sample.beans.TestBean import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import static static org.springframework.beans.factory.support.BeanDefinitionBuilder.* import class org.springframework.context.support.PropertySourcesPlaceholderConfigurerTests ExpectedException PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory MockEnvironment public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.mock.env.MockEnvironment = new call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory Resource public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new decl_stmt org.springframework.core.io.Resource = new call PropertySourcesPlaceholderConfigurer.setLocation() call PropertySourcesPlaceholderConfigurer.setLocation() call PropertySourcesPlaceholderConfigurer.setLocation() call PropertySourcesPlaceholderConfigurer.setLocation() call PropertySourcesPlaceholderConfigurer.setLocation() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) public public public public MutablePropertySources PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.core.env.MutablePropertySources = new call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) new decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() MutablePropertySources PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.core.env.MutablePropertySources = new call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) new decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() new call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() call org.springframework.core.env.MutablePropertySources.iterator() MutablePropertySources PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.core.env.MutablePropertySources = new call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) call org.springframework.core.env.MutablePropertySources.addLast(PropertySource) new decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.setPropertySources(PropertySources) call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() new call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory = public = public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory = public = public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() new call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer decl PropertySource DefaultListableBeanFactory MockEnvironment public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new decl_stmt org.springframework.core.env.PropertySource < = new < new public public return decl_stmt org.springframework.mock.env.MockEnvironment = new call MockEnvironment.getPropertySources() call MockEnvironment.getPropertySources() call MockEnvironment.getPropertySources() call MockEnvironment.getPropertySources() call MockEnvironment.getPropertySources() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) public public return PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory private private decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setLocalOverride() call PropertySourcesPlaceholderConfigurer.setLocalOverride() call PropertySourcesPlaceholderConfigurer.setLocalOverride() call PropertySourcesPlaceholderConfigurer.setLocalOverride() call PropertySourcesPlaceholderConfigurer.setLocalOverride() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() call PropertySourcesPlaceholderConfigurer.setProperties() new call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) if call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) else call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setPlaceholderPrefix() call PropertySourcesPlaceholderConfigurer.setPlaceholderPrefix() call PropertySourcesPlaceholderConfigurer.setPlaceholderPrefix() call PropertySourcesPlaceholderConfigurer.setPlaceholderPrefix() call PropertySourcesPlaceholderConfigurer.setPlaceholderPrefix() call PropertySourcesPlaceholderConfigurer.setPlaceholderSuffix() call PropertySourcesPlaceholderConfigurer.setPlaceholderSuffix() call PropertySourcesPlaceholderConfigurer.setPlaceholderSuffix() call PropertySourcesPlaceholderConfigurer.setPlaceholderSuffix() call PropertySourcesPlaceholderConfigurer.setPlaceholderSuffix() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory public public decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setTrimValues() call PropertySourcesPlaceholderConfigurer.setTrimValues() call PropertySourcesPlaceholderConfigurer.setTrimValues() call PropertySourcesPlaceholderConfigurer.setTrimValues() call PropertySourcesPlaceholderConfigurer.setTrimValues() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() new call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer public public throws decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.getAppliedPropertySources() PropertySourcesPlaceholderConfigurer ClassPathResource DefaultListableBeanFactory ClassPathResource public public throws decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new decl_stmt org.springframework.core.io.ClassPathResource = new decl_stmt org.springframework.core.io.ClassPathResource = new call PropertySourcesPlaceholderConfigurer.setLocations() call PropertySourcesPlaceholderConfigurer.setLocations() call PropertySourcesPlaceholderConfigurer.setLocations() call PropertySourcesPlaceholderConfigurer.setLocations() call PropertySourcesPlaceholderConfigurer.setLocations() call PropertySourcesPlaceholderConfigurer.setIgnoreResourceNotFound() call PropertySourcesPlaceholderConfigurer.setIgnoreResourceNotFound() call PropertySourcesPlaceholderConfigurer.setIgnoreResourceNotFound() call PropertySourcesPlaceholderConfigurer.setIgnoreResourceNotFound() call PropertySourcesPlaceholderConfigurer.setIgnoreResourceNotFound() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory MockEnvironment public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.mock.env.MockEnvironment = new call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PropertySourcesPlaceholderConfigurer DefaultListableBeanFactory MockEnvironment public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() call DefaultListableBeanFactory.setConversionService() new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.mock.env.MockEnvironment = new call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() decl_stmt org.springframework.context.support.PropertySourcesPlaceholderConfigurer = new call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setEnvironment() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setIgnoreUnresolvablePlaceholders() call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() call PropertySourcesPlaceholderConfigurer.setNullValue() call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(ConfigurableListableBeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) public < public < return public public < =