org.springframework.remoting.caucho java.io.IOException import java.net.InetSocketAddress import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.aop.framework.ProxyFactory import org.springframework.remoting.RemoteAccessException import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import org.springframework.util.SocketUtils import com.caucho.burlap.client.BurlapProxyFactory import com.caucho.hessian.client.HessianProxyFactory import com.sun.net.httpserver.HttpServer import static static org.junit.Assert.* import class annotation org.springframework.remoting.caucho.CauchoRemotingTests ExpectedException HessianProxyFactoryBean public public throws decl_stmt org.springframework.remoting.caucho.HessianProxyFactoryBean = new call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() ITestBean HessianProxyFactoryBean public public throws decl_stmt org.springframework.remoting.caucho.HessianProxyFactoryBean = new call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) ITestBean HessianProxyFactoryBean public public throws decl_stmt org.springframework.remoting.caucho.HessianProxyFactoryBean = new call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) ITestBean HessianProxyFactoryBean TestHessianProxyFactory public public throws decl_stmt TestHessianProxyFactory = new decl_stmt org.springframework.remoting.caucho.HessianProxyFactoryBean = new call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceInterface() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setServiceUrl() call HessianProxyFactoryBean.setProxyFactory() call HessianProxyFactoryBean.setProxyFactory() call HessianProxyFactoryBean.setProxyFactory() call HessianProxyFactoryBean.setProxyFactory() call HessianProxyFactoryBean.setProxyFactory() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setUsername() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setPassword() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.setOverloadEnabled() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call HessianProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call org.springframework.remoting.caucho.HessianProxyFactoryBean.getObject() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) ITestBean BurlapProxyFactoryBean public public throws decl_stmt org.springframework.remoting.caucho.BurlapProxyFactoryBean = new call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) ITestBean BurlapProxyFactoryBean public public throws decl_stmt org.springframework.remoting.caucho.BurlapProxyFactoryBean = new call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) ITestBean BurlapProxyFactoryBean TestBurlapProxyFactory public public throws decl_stmt TestBurlapProxyFactory = new decl_stmt org.springframework.remoting.caucho.BurlapProxyFactoryBean = new call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceInterface() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setServiceUrl() call BurlapProxyFactoryBean.setProxyFactory() call BurlapProxyFactoryBean.setProxyFactory() call BurlapProxyFactoryBean.setProxyFactory() call BurlapProxyFactoryBean.setProxyFactory() call BurlapProxyFactoryBean.setProxyFactory() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setUsername() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setPassword() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call BurlapProxyFactoryBean.setOverloadEnabled() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.afterPropertiesSet() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.isSingleton() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call org.springframework.remoting.caucho.BurlapProxyFactoryBean.getObject() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) SimpleHessianServiceExporter HttpServer HessianClientInterceptor ITestBean TestBean int public public throws decl_stmt int final final = decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.remoting.caucho.SimpleHessianServiceExporter = new call SimpleHessianServiceExporter.setService() call SimpleHessianServiceExporter.setService() call SimpleHessianServiceExporter.setService() call SimpleHessianServiceExporter.setService() call SimpleHessianServiceExporter.setService() call SimpleHessianServiceExporter.setServiceInterface() call SimpleHessianServiceExporter.setServiceInterface() call SimpleHessianServiceExporter.setServiceInterface() call SimpleHessianServiceExporter.setServiceInterface() call SimpleHessianServiceExporter.setServiceInterface() call SimpleHessianServiceExporter.setDebug() call SimpleHessianServiceExporter.setDebug() call SimpleHessianServiceExporter.setDebug() call SimpleHessianServiceExporter.setDebug() call SimpleHessianServiceExporter.setDebug() call SimpleHessianServiceExporter.prepare() call SimpleHessianServiceExporter.prepare() call SimpleHessianServiceExporter.prepare() call SimpleHessianServiceExporter.prepare() call SimpleHessianServiceExporter.prepare() decl_stmt com.sun.net.httpserver.HttpServer = new - call HttpServer.createContext() call HttpServer.createContext() call HttpServer.createContext() call HttpServer.createContext() call HttpServer.createContext() call HttpServer.start() call HttpServer.start() call HttpServer.start() call HttpServer.start() call HttpServer.start() try decl_stmt org.springframework.remoting.caucho.HessianClientInterceptor = new call HessianClientInterceptor.setServiceUrl() call HessianClientInterceptor.setServiceUrl() call HessianClientInterceptor.setServiceUrl() call HessianClientInterceptor.setServiceUrl() call HessianClientInterceptor.setServiceUrl() + + call HessianClientInterceptor.setServiceInterface() call HessianClientInterceptor.setServiceInterface() call HessianClientInterceptor.setServiceInterface() call HessianClientInterceptor.setServiceInterface() call HessianClientInterceptor.setServiceInterface() call org.springframework.remoting.caucho.HessianClientInterceptor.prepare() call org.springframework.remoting.caucho.HessianClientInterceptor.prepare() call org.springframework.remoting.caucho.HessianClientInterceptor.prepare() call org.springframework.remoting.caucho.HessianClientInterceptor.prepare() call org.springframework.remoting.caucho.HessianClientInterceptor.prepare() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() finally call HttpServer.stop() call HttpServer.stop() call HttpServer.stop() call HttpServer.stop() call HttpServer.stop() public public = public public = public public = public public = public public = public public =