org.springframework.cache.interceptor java.io.Serializable import java.lang.reflect.Method import java.util.Collection import java.util.LinkedHashMap import java.util.Map import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.util.ObjectUtils import org.springframework.util.PatternMatchUtils import class annotation org.springframework.cache.interceptor.NameMatchCacheOperationSource super super implements Log decl Map public public < < for < < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() public public < if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + String String decl Collection public < public < < decl_stmt java.lang.String = decl_stmt java.util.Collection < = if == decl_stmt java.lang.String = for : if && == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() <= = = return protected protected return NameMatchCacheOperationSource public public if == return if ! instanceof return decl_stmt org.springframework.cache.interceptor.NameMatchCacheOperationSource = return public public return public public return + +