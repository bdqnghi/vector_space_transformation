org.springframework.aop.aspectj.annotation java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.lang.reflect.Method import org.aspectj.lang.ProceedingJoinPoint import org.aspectj.lang.annotation.Around import org.aspectj.lang.annotation.Aspect import org.aspectj.lang.annotation.Pointcut import org.junit.Test import org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.aop.aspectj.annotation.ArgumentBindingTests TestBean ITestBean AspectJProxyFactory = public = public decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) TransactionalBean ITransactionalBean AspectJProxyFactory = public = public decl_stmt TransactionalBean = new decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.aop.aspectj.annotation.ITransactionalBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call ITransactionalBean.doInTransaction() call ITransactionalBean.doInTransaction() call ITransactionalBean.doInTransaction() call ITransactionalBean.doInTransaction() call ITransactionalBean.doInTransaction() decl String AspectJAdviceParameterNameDiscoverer Method public public throws decl_stmt org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer = new call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.setRaiseExceptions(boolean) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.setRaiseExceptions(boolean) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.setRaiseExceptions(boolean) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.setRaiseExceptions(boolean) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.setRaiseExceptions(boolean) decl_stmt com.sun.jdi.Method = decl_stmt java.lang.String = call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.getParameterNames(Constructor) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.getParameterNames(Constructor) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.getParameterNames(Constructor) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.getParameterNames(Constructor) call org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.getParameterNames(Constructor) public public public public