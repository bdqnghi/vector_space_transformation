org.springframework.web.servlet.view java.util.Map import javax.servlet.RequestDispatcher import javax.servlet.ServletException import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.springframework.util.StringUtils import org.springframework.web.util.WebUtils import class org.springframework.web.servlet.view.InternalResourceView super super extends boolean boolean public public = public public = protected protected return RequestDispatcher String protected protected < throws decl_stmt java.lang.String = decl_stmt RequestDispatcher = if == throw new + + if if + + + + call RequestDispatcher.include() call RequestDispatcher.include() call RequestDispatcher.include() call RequestDispatcher.include() call RequestDispatcher.include() else if + + + + call RequestDispatcher.forward() call RequestDispatcher.forward() call RequestDispatcher.forward() call RequestDispatcher.forward() call RequestDispatcher.forward() protected protected throws String String protected protected throws decl_stmt java.lang.String = if decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) : call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) throw new + + + + + + return protected protected return protected protected return || ||