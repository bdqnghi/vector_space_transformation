org.springframework.core java.lang.reflect.Method import java.lang.reflect.Type import java.util.ArrayList import java.util.Arrays import java.util.List import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import class org.springframework.core.BridgeMethodResolver Method decl List decl Method public static public static if == || ! return decl_stmt java.util.List < = new < decl_stmt com.sun.jdi.Method = for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt com.sun.jdi.Method = if != return else return private static private static return ! && ! && && == boolean Method private static private static < if return decl_stmt com.sun.jdi.Method = decl_stmt boolean = for : if return else if != = && call com.sun.jdi.Method.getGenericParameterTypes() call com.sun.jdi.Method.getGenericParameterTypes() call com.sun.jdi.Method.getGenericParameterTypes() call com.sun.jdi.Method.getGenericParameterTypes() call com.sun.jdi.Method.getGenericParameterTypes() = return : Method static static < if return decl_stmt com.sun.jdi.Method = return != && Method decl Class Method private static private static decl_stmt java.lang.Class < = while != && != decl_stmt com.sun.jdi.Method = if != && ! call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() return = call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() decl_stmt java.lang.Class < = while != && != decl_stmt com.sun.jdi.Method = if != && ! call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() return = call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() for < : decl_stmt com.sun.jdi.Method = if != && ! call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() call com.sun.jdi.Method.isBridge() return return ResolvableType decl Class decl Type private static private static < decl_stmt org.springframework.asm.Type = decl_stmt org.springframework.asm.Type = if != return for = < ++ decl_stmt org.springframework.core.ResolvableType = decl_stmt java.lang.Class < = if if ! call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() return if ! call decl Class.resolve() call decl Class.resolve() call decl Class.resolve() call decl Class.resolve() call decl Class.resolve() return return private static private static < return public static public static if == return return &&