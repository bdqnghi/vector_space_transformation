org.springframework.web.servlet.mvc.method.annotation java.lang.reflect.Method import java.util.Arrays import java.util.Collections import java.util.LinkedHashMap import java.util.Map import org.junit.Before import org.junit.Test import org.springframework.core.MethodParameter import org.springframework.core.annotation.SynthesizingMethodParameter import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MultiValueMap import org.springframework.web.bind.annotation.MatrixVariable import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.HandlerMapping import static static org.junit.Assert.* import class org.springframework.web.servlet.mvc.method.annotation.MatrixVariablesMapMethodArgumentResolverTests MockHttpServletRequest ModelAndViewContainer MethodParameter ServletWebRequest MatrixVariableMapMethodArgumentResolver MethodParameter MethodParameter MethodParameter MethodParameter decl Map Method public public throws = new decl_stmt com.sun.jdi.Method = = new = new = new = new = new = new = new = new new decl_stmt java.util.Map < < = new < < public public call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() call MatrixVariableMapMethodArgumentResolver.supportsParameter() decl Map decl MultiValueMap decl MultiValueMap public public throws decl_stmt org.springframework.util.MultiValueMap < = call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt java.util.Map < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.springframework.util.MultiValueMap < = < call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() decl MultiValueMap decl Map decl MultiValueMap decl Map public public throws decl_stmt org.springframework.util.MultiValueMap < = call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt org.springframework.util.MultiValueMap < = call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt java.util.Map < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.util.Map < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl Map public public throws decl_stmt java.util.Map < = < decl Map decl MultiValueMap public public throws decl_stmt org.springframework.util.MultiValueMap < = call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt java.util.Map < = < decl MultiValueMap decl Map private < private < decl_stmt java.util.Map < < = < < decl_stmt org.springframework.util.MultiValueMap < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public < < = = = < <