org.springframework.test.context.support org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.support.BeanDefinitionReader import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.context.ApplicationContext import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.annotation.AnnotationConfigUtils import org.springframework.context.support.GenericApplicationContext import org.springframework.test.context.MergedContextConfiguration import org.springframework.util.StringUtils import class org.springframework.test.context.support.AbstractGenericContextLoader super super extends Log ApplicationContext GenericApplicationContext public final public final throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.context.ApplicationContext = if != call org.springframework.context.support.GenericApplicationContext.setParent(ApplicationContext) call org.springframework.context.support.GenericApplicationContext.setParent(ApplicationContext) call org.springframework.context.support.GenericApplicationContext.setParent(ApplicationContext) call org.springframework.context.support.GenericApplicationContext.setParent(ApplicationContext) call org.springframework.context.support.GenericApplicationContext.setParent(ApplicationContext) call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() return protected protected GenericApplicationContext public final public final throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() call GenericApplicationContext.registerShutdownHook() return protected protected protected protected protected protected protected protected