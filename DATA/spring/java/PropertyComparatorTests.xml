org.springframework.beans.support org.junit.Test import org.springframework.util.comparator.CompoundComparator import static static org.junit.Assert.* import class org.springframework.beans.support.PropertyComparatorTests PropertyComparator Dog Dog public public decl_stmt Dog = new call Dog.setNickName() call Dog.setNickName() call Dog.setNickName() call Dog.setNickName() call Dog.setNickName() decl_stmt Dog = new call Dog.setNickName() call Dog.setNickName() call Dog.setNickName() call Dog.setNickName() call Dog.setNickName() decl_stmt org.springframework.beans.support.PropertyComparator = new call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) > call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) == call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) < PropertyComparator Dog Dog public public decl_stmt Dog = new decl_stmt Dog = new decl_stmt org.springframework.beans.support.PropertyComparator = new call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) call org.springframework.beans.support.PropertyComparator.compare(T,T) == decl CompoundComparator Dog Dog public public decl_stmt org.springframework.util.comparator.CompoundComparator < = new < call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() new decl_stmt Dog = new call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() decl_stmt Dog = new call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() == call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() new call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() > call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() > decl CompoundComparator Dog Dog public public decl_stmt org.springframework.util.comparator.CompoundComparator < = new < call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() new call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() call decl CompoundComparator.addComparator() new decl_stmt Dog = new call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() decl_stmt Dog = new call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setFirstName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call Dog.setLastName() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() > call decl CompoundComparator.invertOrder() call decl CompoundComparator.invertOrder() call decl CompoundComparator.invertOrder() call decl CompoundComparator.invertOrder() call decl CompoundComparator.invertOrder() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() call decl CompoundComparator.compare() < public public return public public return public public = public public return public public = public public return public public =