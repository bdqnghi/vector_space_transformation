org.springframework.beans.factory.xml java.beans.PropertyEditorSupport import java.util.StringTokenizer import org.junit.Test import org.springframework.beans.BeansException import org.springframework.beans.PropertyBatchUpdateException import org.springframework.beans.factory.BeanCreationException import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanIsNotAFactoryException import org.springframework.beans.factory.BeanNotOfRequiredTypeException import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.config.ConfigurableBeanFactory import org.springframework.tests.sample.beans.LifecycleBean import org.springframework.tests.sample.beans.MustBeInitialized import org.springframework.tests.sample.beans.TestBean import org.springframework.tests.sample.beans.factory.DummyFactory import static static org.junit.Assert.* import class org.springframework.beans.factory.xml.AbstractBeanFactoryTests TestBean TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = decl_stmt org.springframework.tests.sample.beans.TestBean = != call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() == call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() == call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() = public = public MustBeInitialized public public decl_stmt org.springframework.tests.sample.beans.MustBeInitialized = call org.springframework.tests.sample.beans.MustBeInitialized.businessMethod() call org.springframework.tests.sample.beans.MustBeInitialized.businessMethod() call org.springframework.tests.sample.beans.MustBeInitialized.businessMethod() call org.springframework.tests.sample.beans.MustBeInitialized.businessMethod() call org.springframework.tests.sample.beans.MustBeInitialized.businessMethod() LifecycleBean public public decl_stmt org.springframework.test.context.junit4.spr4868.LifecycleBean = call org.springframework.test.context.junit4.spr4868.LifecycleBean.getBeanName() call org.springframework.test.context.junit4.spr4868.LifecycleBean.getBeanName() call org.springframework.test.context.junit4.spr4868.LifecycleBean.getBeanName() call org.springframework.test.context.junit4.spr4868.LifecycleBean.getBeanName() call org.springframework.test.context.junit4.spr4868.LifecycleBean.getBeanName() call org.springframework.test.context.junit4.spr4868.LifecycleBean.businessMethod() call org.springframework.test.context.junit4.spr4868.LifecycleBean.businessMethod() call org.springframework.test.context.junit4.spr4868.LifecycleBean.businessMethod() call org.springframework.test.context.junit4.spr4868.LifecycleBean.businessMethod() call org.springframework.test.context.junit4.spr4868.LifecycleBean.businessMethod() ! call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() call org.springframework.test.context.junit4.spr4868.LifecycleBean.isDestroyed() TestBean Object public public decl_stmt java.lang.Object = instanceof decl_stmt org.springframework.tests.sample.beans.TestBean = call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() == Object public public decl_stmt java.lang.Object = instanceof public public try catch == Object public public decl_stmt java.lang.Object = instanceof Object public public decl_stmt java.lang.Object = instanceof public public try catch Object Object public public decl_stmt java.lang.Object = instanceof decl_stmt java.lang.Object = instanceof == TestBean TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = decl_stmt org.springframework.tests.sample.beans.TestBean = != call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() == call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() == ! call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) = public = public TestBean Object public public decl_stmt java.lang.Object = instanceof decl_stmt org.springframework.tests.sample.beans.TestBean = call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() == && call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() == && call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() == PropertyBatchUpdateException public public try catch instanceof decl_stmt org.springframework.beans.PropertyBatchUpdateException = call org.springframework.beans.PropertyBatchUpdateException.getExceptionCount() call org.springframework.beans.PropertyBatchUpdateException.getExceptionCount() call org.springframework.beans.PropertyBatchUpdateException.getExceptionCount() call org.springframework.beans.PropertyBatchUpdateException.getExceptionCount() call org.springframework.beans.PropertyBatchUpdateException.getExceptionCount() == call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) != call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) call org.springframework.beans.PropertyBatchUpdateException.getPropertyAccessException(String) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() TestBean TestBean DummyFactory public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = + call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() decl_stmt org.springframework.tests.sample.beans.DummyFactory = decl_stmt org.springframework.tests.sample.beans.TestBean = == call org.springframework.tests.sample.beans.DummyFactory.getBeanFactory() call org.springframework.tests.sample.beans.DummyFactory.getBeanFactory() call org.springframework.tests.sample.beans.DummyFactory.getBeanFactory() call org.springframework.tests.sample.beans.DummyFactory.getBeanFactory() call org.springframework.tests.sample.beans.DummyFactory.getBeanFactory() != TestBean TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = ! call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() decl_stmt org.springframework.tests.sample.beans.TestBean = != public public throws TestBean DummyFactory public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = decl_stmt org.springframework.tests.sample.beans.DummyFactory = call org.springframework.tests.sample.beans.DummyFactory.wasInitialized() call org.springframework.tests.sample.beans.DummyFactory.wasInitialized() call org.springframework.tests.sample.beans.DummyFactory.wasInitialized() call org.springframework.tests.sample.beans.DummyFactory.wasInitialized() call org.springframework.tests.sample.beans.DummyFactory.wasInitialized() = public = public String BeanFactory Object ConfigurableBeanFactory Object public public decl_stmt org.springframework.beans.factory.BeanFactory = if ! instanceof return decl_stmt org.springframework.beans.factory.config.ConfigurableBeanFactory = decl_stmt java.lang.String = try call ConfigurableBeanFactory.getBean() call ConfigurableBeanFactory.getBean() call ConfigurableBeanFactory.getBean() call ConfigurableBeanFactory.getBean() call ConfigurableBeanFactory.getBean() catch call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.springframework.beans.factory.config.ConfigurableBeanFactory.registerAlias(String,String) call org.springframework.beans.factory.config.ConfigurableBeanFactory.registerAlias(String,String) call org.springframework.beans.factory.config.ConfigurableBeanFactory.registerAlias(String,String) call org.springframework.beans.factory.config.ConfigurableBeanFactory.registerAlias(String,String) call org.springframework.beans.factory.config.ConfigurableBeanFactory.registerAlias(String,String) decl_stmt java.lang.Object = decl_stmt java.lang.Object = == TestBean StringTokenizer public public decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt java.util.StringTokenizer = new call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String)