org.springframework.scheduling.quartz java.util.HashMap import java.util.Map import javax.sql.DataSource import org.junit.Test import org.quartz.Job import org.quartz.JobExecutionContext import org.quartz.JobExecutionException import org.quartz.Scheduler import org.quartz.SchedulerContext import org.quartz.SchedulerFactory import org.quartz.impl.JobDetailImpl import org.quartz.impl.SchedulerRepository import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.support.BeanDefinitionBuilder import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.support.ClassPathXmlApplicationContext import org.springframework.context.support.StaticApplicationContext import org.springframework.core.task.TaskExecutor import org.springframework.jdbc.core.JdbcTemplate import org.springframework.tests.Assume import org.springframework.tests.TestGroup import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.scheduling.quartz.QuartzSupportTests StaticApplicationContext Scheduler TestBean decl Map Scheduler SchedulerFactoryBean SchedulerContext public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt Scheduler final final = decl_stmt SchedulerContext = new call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() decl_stmt org.springframework.scheduling.quartz.SchedulerFactoryBean = new protected protected return call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.scheduling.quartz.SchedulerFactoryBean.setSchedulerContextAsMap(Map) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setSchedulerContextAsMap(Map) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setSchedulerContextAsMap(Map) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setSchedulerContextAsMap(Map) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setSchedulerContextAsMap(Map) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContext(ApplicationContext) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContext(ApplicationContext) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContext(ApplicationContext) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContext(ApplicationContext) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContext(ApplicationContext) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContextSchedulerContextKey(String) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContextSchedulerContextKey(String) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContextSchedulerContextKey(String) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContextSchedulerContextKey(String) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setApplicationContextSchedulerContextKey(String) try call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() decl_stmt Scheduler = call org.springframework.scheduling.quartz.SchedulerFactoryBean.getObject() call org.springframework.scheduling.quartz.SchedulerFactoryBean.getObject() call org.springframework.scheduling.quartz.SchedulerFactoryBean.getObject() call org.springframework.scheduling.quartz.SchedulerFactoryBean.getObject() call org.springframework.scheduling.quartz.SchedulerFactoryBean.getObject() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() call Scheduler.getContext() finally call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() protected protected return CountingTaskExecutor SchedulerFactoryBean SimpleTriggerFactoryBean JobDetailImpl public public throws decl_stmt CountingTaskExecutor = new = decl_stmt JobDetailImpl = new call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() decl_stmt org.springframework.scheduling.quartz.SimpleTriggerFactoryBean = new call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() decl_stmt org.springframework.scheduling.quartz.SchedulerFactoryBean = new call org.springframework.scheduling.quartz.SchedulerFactoryBean.setTaskExecutor(Executor) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setTaskExecutor(Executor) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setTaskExecutor(Executor) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setTaskExecutor(Executor) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setTaskExecutor(Executor) call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() > call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() JobDetailImpl = public = public decl_stmt JobDetailImpl = new call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() SchedulerFactoryBean SimpleTriggerFactoryBean JobDetailImpl public public throws = = decl_stmt JobDetailImpl = new call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() decl_stmt org.springframework.scheduling.quartz.SimpleTriggerFactoryBean = new call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() decl_stmt org.springframework.scheduling.quartz.SchedulerFactoryBean = new call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() > call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() SchedulerFactoryBean SimpleTriggerFactoryBean JobDetailImpl public public throws = = decl_stmt JobDetailImpl = new call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() decl_stmt org.springframework.scheduling.quartz.SimpleTriggerFactoryBean = new call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() decl_stmt org.springframework.scheduling.quartz.SchedulerFactoryBean = new call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) new call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() > call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() SpringBeanJobFactory SchedulerFactoryBean SimpleTriggerFactoryBean JobDetailImpl public public throws = = decl_stmt JobDetailImpl = new call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() decl_stmt org.springframework.scheduling.quartz.SimpleTriggerFactoryBean = new call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() decl_stmt org.springframework.scheduling.quartz.SchedulerFactoryBean = new decl_stmt org.springframework.scheduling.quartz.SpringBeanJobFactory = new call org.springframework.scheduling.quartz.SpringBeanJobFactory.setIgnoredUnknownProperties(String) call org.springframework.scheduling.quartz.SpringBeanJobFactory.setIgnoredUnknownProperties(String) call org.springframework.scheduling.quartz.SpringBeanJobFactory.setIgnoredUnknownProperties(String) call org.springframework.scheduling.quartz.SpringBeanJobFactory.setIgnoredUnknownProperties(String) call org.springframework.scheduling.quartz.SpringBeanJobFactory.setIgnoredUnknownProperties(String) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() == call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() SchedulerFactoryBean SimpleTriggerFactoryBean JobDetailImpl public public throws = = decl_stmt JobDetailImpl = new call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setDurability() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setJobClass() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.setName() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() call JobDetailImpl.getJobDataMap() decl_stmt org.springframework.scheduling.quartz.SimpleTriggerFactoryBean = new call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setName(String) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setJobDetail(JobDetail) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setStartDelay(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatInterval(long) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.setRepeatCount(int) call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.afterPropertiesSet() decl_stmt org.springframework.scheduling.quartz.SchedulerFactoryBean = new call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) new call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call SchedulerFactoryBean.setTriggers() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call org.springframework.scheduling.quartz.SimpleTriggerFactoryBean.getObject() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call SchedulerFactoryBean.setJobDetails() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() > call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() SchedulerFactoryBean public public throws = = decl_stmt org.springframework.scheduling.quartz.SchedulerFactoryBean = new call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) call org.springframework.scheduling.quartz.SchedulerFactoryBean.setJobFactory(JobFactory) new call SchedulerFactoryBean.setJobSchedulingDataLocation() call SchedulerFactoryBean.setJobSchedulingDataLocation() call SchedulerFactoryBean.setJobSchedulingDataLocation() call SchedulerFactoryBean.setJobSchedulingDataLocation() call SchedulerFactoryBean.setJobSchedulingDataLocation() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() call org.springframework.scheduling.quartz.SchedulerFactoryBean.start() > call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() call org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy() ClassPathXmlApplicationContext Scheduler Scheduler public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = try decl_stmt Scheduler = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt Scheduler = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() call Scheduler.getSchedulerName() finally call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() QuartzTestBean QuartzTestBean ClassPathXmlApplicationContext public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = try decl_stmt org.springframework.scheduling.quartz.QuartzTestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt org.springframework.scheduling.quartz.QuartzTestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() finally call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() QuartzTestBean QuartzTestBean ClassPathXmlApplicationContext public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = try decl_stmt org.springframework.scheduling.quartz.QuartzTestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt org.springframework.scheduling.quartz.QuartzTestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call org.springframework.scheduling.quartz.QuartzTestBean.getImportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() call QuartzTestBean.getExportCount() finally call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() Scheduler StaticApplicationContext public public throws decl_stmt org.springframework.context.support.StaticApplicationContext = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() new decl_stmt Scheduler = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() Scheduler StaticApplicationContext BeanDefinition public public throws decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.config.BeanDefinition = call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt Scheduler = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() call Scheduler.isStarted() ClassPathXmlApplicationContext public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext JdbcTemplate public public throws = = decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = decl_stmt org.springframework.jdbc.core.JdbcTemplate = new call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call JdbcTemplate.queryForList() call JdbcTemplate.queryForList() call JdbcTemplate.queryForList() call JdbcTemplate.queryForList() call JdbcTemplate.queryForList() private private return new public public ++ public public if > throw new = public synchronized public synchronized throws ++ public public if > throw new = protected synchronized protected synchronized throws ++ public public