org.springframework.test.web.servlet.result java.net.URI import java.util.HashMap import java.util.Map import javax.servlet.http.Cookie import org.junit.Test import org.springframework.http.HttpHeaders import org.springframework.http.MediaType import org.springframework.mock.web.MockHttpServletRequest import org.springframework.mock.web.MockHttpServletResponse import org.springframework.test.web.servlet.StubMvcResult import org.springframework.util.Assert import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MultiValueMap import org.springframework.validation.BindException import org.springframework.validation.BindingResult import org.springframework.web.method.HandlerMethod import org.springframework.web.servlet.DispatcherServlet import org.springframework.web.servlet.FlashMap import org.springframework.web.servlet.ModelAndView import static static org.junit.Assert.* import class org.springframework.test.web.servlet.result.PrintingResultHandlerTests StubMvcResult TestPrintingResultHandler MockHttpServletRequest MockHttpServletResponse public public return HttpHeaders decl MultiValueMap public public throws decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) decl_stmt org.springframework.util.MultiValueMap < = new < call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() String decl String String Cookie HttpHeaders decl Map String public public throws decl_stmt Cookie = new call Cookie.setComment() call Cookie.setComment() call Cookie.setComment() call Cookie.setComment() call Cookie.setComment() call Cookie.setHttpOnly() call Cookie.setHttpOnly() call Cookie.setHttpOnly() call Cookie.setHttpOnly() call Cookie.setHttpOnly() call Cookie.setMaxAge() call Cookie.setMaxAge() call Cookie.setMaxAge() call Cookie.setMaxAge() call Cookie.setMaxAge() call Cookie.setDomain() call Cookie.setDomain() call Cookie.setDomain() call Cookie.setDomain() call Cookie.setDomain() call Cookie.setPath() call Cookie.setPath() call Cookie.setPath() call Cookie.setPath() call Cookie.setPath() call Cookie.setSecure() call Cookie.setSecure() call Cookie.setSecure() call Cookie.setSecure() call Cookie.setSecure() new decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) new decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() decl_stmt java.util.Map < < = decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = decl_stmt java.lang.String = call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) + call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) + call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) StubMvcResult public public throws decl_stmt org.springframework.test.web.servlet.StubMvcResult = new public public throws new HandlerMethod public public throws decl_stmt org.springframework.web.method.HandlerMethod = new public public throws public public throws new public public throws BindException ModelAndView public public throws decl_stmt org.springframework.validation.BindException = new new call org.springframework.validation.BindException.reject(String,Object,String) call org.springframework.validation.BindException.reject(String,Object,String) call org.springframework.validation.BindException.reject(String,Object,String) call org.springframework.validation.BindException.reject(String,Object,String) call org.springframework.validation.BindException.reject(String,Object,String) decl_stmt org.springframework.web.portlet.ModelAndView = new call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) + call org.springframework.validation.BindException.getAllErrors() call org.springframework.validation.BindException.getAllErrors() call org.springframework.validation.BindException.getAllErrors() call org.springframework.validation.BindException.getAllErrors() call org.springframework.validation.BindException.getAllErrors() public public throws FlashMap public public throws decl_stmt org.springframework.web.servlet.FlashMap = new call FlashMap.put() call FlashMap.put() call FlashMap.put() call FlashMap.put() call FlashMap.put() + decl Map private private decl_stmt java.util.Map < < = + + call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() public public return public public = new < public public + + + public public