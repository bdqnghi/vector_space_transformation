org.springframework.jdbc.support java.sql.Connection import java.sql.DatabaseMetaData import java.sql.SQLException import java.util.Arrays import javax.sql.DataSource import org.junit.Test import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.jdbc.support.SQLErrorCodesFactoryTests SQLErrorCodes public public decl_stmt org.springframework.jdbc.support.SQLErrorCodes = call org.springframework.jdbc.support.SQLErrorCodes.getBadSqlGrammarCodes() call org.springframework.jdbc.support.SQLErrorCodes.getBadSqlGrammarCodes() call org.springframework.jdbc.support.SQLErrorCodes.getBadSqlGrammarCodes() call org.springframework.jdbc.support.SQLErrorCodes.getBadSqlGrammarCodes() call org.springframework.jdbc.support.SQLErrorCodes.getBadSqlGrammarCodes() == call org.springframework.jdbc.support.SQLErrorCodes.getDataIntegrityViolationCodes() call org.springframework.jdbc.support.SQLErrorCodes.getDataIntegrityViolationCodes() call org.springframework.jdbc.support.SQLErrorCodes.getDataIntegrityViolationCodes() call org.springframework.jdbc.support.SQLErrorCodes.getDataIntegrityViolationCodes() call org.springframework.jdbc.support.SQLErrorCodes.getDataIntegrityViolationCodes() == SQLErrorCodes public public decl_stmt org.springframework.jdbc.support.SQLErrorCodes = private private > > >= >= >= private private > >= >= >= >= >= >= > >= > >= >= > >= >= >= > >= > >= > >= private private > > >= >= private private > > >= >= private private > > >= >= >= >= >= >= >= >= >= int TestSQLErrorCodesFactory public public class class extends extends decl_stmt int private = protected protected ++ if == return else return decl_stmt TestSQLErrorCodesFactory = new call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() == call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() == protected protected ++ if == return else return TestSQLErrorCodesFactory public public class class extends extends protected protected if return new return decl_stmt TestSQLErrorCodesFactory = new call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() == call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() protected protected if return new return TestSQLErrorCodesFactory public public class class extends extends protected protected if return new return decl_stmt TestSQLErrorCodesFactory = new call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() == call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() protected protected if return new return CustomSQLErrorCodesTranslation TestSQLErrorCodesFactory public public class class extends extends protected protected if return new return decl_stmt TestSQLErrorCodesFactory = new call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() decl_stmt org.springframework.jdbc.support.CustomSQLErrorCodesTranslation = call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call TestSQLErrorCodesFactory.getErrorCodes() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getExceptionClass() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getExceptionClass() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getExceptionClass() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getExceptionClass() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getExceptionClass() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getErrorCodes() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getErrorCodes() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getErrorCodes() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getErrorCodes() call org.springframework.jdbc.support.CustomSQLErrorCodesTranslation.getErrorCodes() protected protected if return new return Connection SQLErrorCodes DataSource public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt javax.sql.DataSource = call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() decl_stmt org.springframework.jdbc.support.SQLErrorCodes = SQLException SQLErrorCodes DataSource public public throws decl_stmt java.sql.SQLException = new decl_stmt javax.sql.DataSource = call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() decl_stmt org.springframework.jdbc.support.SQLErrorCodes = private private SQLErrorCodesFactory Connection SQLErrorCodes SQLErrorCodes DataSource DatabaseMetaData private private throws decl_stmt java.sql.DatabaseMetaData = call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() decl_stmt sun.rmi.transport.Connection = call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() decl_stmt javax.sql.DataSource = call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() decl_stmt org.springframework.jdbc.support.SQLErrorCodesFactory = if != = else = decl_stmt org.springframework.jdbc.support.SQLErrorCodes = call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) decl_stmt org.springframework.jdbc.support.SQLErrorCodes = call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) call org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(DataSource) return SQLErrorCodes public public throws decl_stmt org.springframework.jdbc.support.SQLErrorCodes = SQLErrorCodes public public throws decl_stmt org.springframework.jdbc.support.SQLErrorCodes = SQLErrorCodes public public throws decl_stmt org.springframework.jdbc.support.SQLErrorCodes = SQLErrorCodes public public throws decl_stmt org.springframework.jdbc.support.SQLErrorCodes = = = SQLErrorCodes public public throws decl_stmt org.springframework.jdbc.support.SQLErrorCodes = SQLErrorCodes WildcardSQLErrorCodesFactory public public throws class class extends extends protected protected if return new return decl_stmt WildcardSQLErrorCodesFactory = new decl_stmt org.springframework.jdbc.support.SQLErrorCodes = = = = = = = = = = = = = = = = protected protected if return new return