org.springframework.web.servlet.mvc.annotation java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.util.Locale import org.junit.Test import org.springframework.beans.TypeMismatchException import org.springframework.context.i18n.LocaleContextHolder import org.springframework.context.support.StaticMessageSource import org.springframework.core.annotation.AliasFor import org.springframework.http.HttpStatus import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.tests.sample.beans.ITestBean import org.springframework.web.bind.annotation.ResponseStatus import org.springframework.web.servlet.ModelAndView import static static org.junit.Assert.* import class org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolverTests MockHttpServletRequest ResponseStatusExceptionResolver MockHttpServletResponse StatusCodeException ModelAndView public public decl_stmt StatusCodeException = new decl_stmt org.springframework.web.portlet.ModelAndView = call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() StatusCodeFromComposedResponseStatusException ModelAndView public public decl_stmt StatusCodeFromComposedResponseStatusException = new decl_stmt org.springframework.web.portlet.ModelAndView = call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() StatusCodeAndReasonException ModelAndView public public decl_stmt StatusCodeAndReasonException = new decl_stmt org.springframework.web.portlet.ModelAndView = call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() call org.springframework.mock.web.MockHttpServletResponse.isCommitted() Locale StaticMessageSource StatusCodeAndReasonMessageException public public decl_stmt java.util.Locale = try decl_stmt org.springframework.context.support.StaticMessageSource = new call org.springframework.context.support.StaticMessageSource.addMessage(String,Locale,String) call org.springframework.context.support.StaticMessageSource.addMessage(String,Locale,String) call org.springframework.context.support.StaticMessageSource.addMessage(String,Locale,String) call org.springframework.context.support.StaticMessageSource.addMessage(String,Locale,String) call org.springframework.context.support.StaticMessageSource.addMessage(String,Locale,String) call org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver.setMessageSource(MessageSource) call org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver.setMessageSource(MessageSource) call org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver.setMessageSource(MessageSource) call org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver.setMessageSource(MessageSource) call org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver.setMessageSource(MessageSource) decl_stmt StatusCodeAndReasonMessageException = new call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() finally Exception ModelAndView public public decl_stmt Exception = new call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() decl_stmt org.springframework.web.portlet.ModelAndView = call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() Exception TypeMismatchException ModelAndView public public throws decl_stmt Exception = new decl_stmt org.springframework.beans.TypeMismatchException = new decl_stmt org.springframework.web.portlet.ModelAndView = call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call ResponseStatusExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus()