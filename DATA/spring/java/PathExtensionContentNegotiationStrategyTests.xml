org.springframework.web.accept java.util.Arrays import java.util.Collections import java.util.List import java.util.Map import javax.servlet.ServletContext import org.junit.Before import org.junit.Test import org.springframework.http.MediaType import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.web.HttpMediaTypeNotAcceptableException import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.ServletWebRequest import static static org.junit.Assert.* import class org.springframework.web.accept.PathExtensionContentNegotiationStrategyTests NativeWebRequest MockHttpServletRequest public public = new = new decl Map decl List PathExtensionContentNegotiationStrategy public public throws decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new decl_stmt java.util.List < = call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() new decl_stmt java.util.Map < = = new = call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() new decl List PathExtensionContentNegotiationStrategy public public throws decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new decl_stmt java.util.List < = call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() new ServletContext decl List PathExtensionContentNegotiationStrategy public public throws decl_stmt ServletContext = decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setUseJaf(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setUseJaf(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setUseJaf(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setUseJaf(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setUseJaf(boolean) decl_stmt java.util.List < = call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() > PathExtensionContentNegotiationStrategy public public throws decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() decl List PathExtensionContentNegotiationStrategy public public throws decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new decl_stmt java.util.List < = call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() new decl List PathExtensionContentNegotiationStrategy public public throws decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new decl_stmt java.util.List < = call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() > PathExtensionContentNegotiationStrategy = public = public throws decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setIgnoreUnknownExtensions(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setIgnoreUnknownExtensions(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setIgnoreUnknownExtensions(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setIgnoreUnknownExtensions(boolean) call org.springframework.web.accept.PathExtensionContentNegotiationStrategy.setIgnoreUnknownExtensions(boolean) call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes() call PathExtensionContentNegotiationStrategy.resolveMediaTypes()