org.springframework.jdbc.datasource java.sql.Connection import java.sql.DatabaseMetaData import java.sql.PreparedStatement import java.sql.SQLException import java.sql.Savepoint import javax.sql.DataSource import org.junit.After import org.junit.Before import org.junit.Test import org.mockito.InOrder import org.springframework.dao.DataAccessResourceFailureException import org.springframework.jdbc.UncategorizedSQLException import org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor import org.springframework.tests.Assume import org.springframework.tests.TestGroup import org.springframework.transaction.CannotCreateTransactionException import org.springframework.transaction.IllegalTransactionStateException import org.springframework.transaction.PlatformTransactionManager import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionStatus import org.springframework.transaction.TransactionSystemException import org.springframework.transaction.TransactionTimedOutException import org.springframework.transaction.UnexpectedRollbackException import org.springframework.transaction.support.DefaultTransactionDefinition import org.springframework.transaction.support.TransactionCallbackWithoutResult import org.springframework.transaction.support.TransactionSynchronization import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.transaction.support.TransactionTemplate import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.jdbc.datasource.DataSourceTransactionManagerTests DataSourceTransactionManager DataSource Connection public public throws = = = new call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() public public public public throws public public throws public public throws public public throws public public throws public public throws InOrder DataSource Connection TransactionTemplate private private final final throws if call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() if ! || call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() decl_stmt javax.sql.DataSource final final = new : = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws decl_stmt sun.rmi.transport.Connection = try if call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) new catch throw new ! ! if && ! || decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() if else Connection protected protected throws decl_stmt sun.rmi.transport.Connection = try if call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) new catch throw new public public throws public public throws public public throws public public throws public public throws public public throws DataSource Connection InOrder TransactionTemplate RuntimeException private private final final throws if call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() if ! || call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() decl_stmt javax.sql.DataSource final final = new : = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! decl_stmt RuntimeException final final = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws decl_stmt sun.rmi.transport.Connection = if try call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) catch throw new throw catch ! ! if && ! || decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() if else Connection protected protected throws decl_stmt sun.rmi.transport.Connection = if try call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) catch throw new throw TransactionTemplate RuntimeException ConnectionHolder public public throws call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! decl_stmt org.springframework.jdbc.datasource.ConnectionHolder = new call org.springframework.jdbc.datasource.ConnectionHolder.setTransactionActive(boolean) call org.springframework.jdbc.datasource.ConnectionHolder.setTransactionActive(boolean) call org.springframework.jdbc.datasource.ConnectionHolder.setTransactionActive(boolean) call org.springframework.jdbc.datasource.ConnectionHolder.setTransactionActive(boolean) call org.springframework.jdbc.datasource.ConnectionHolder.setTransactionActive(boolean) decl_stmt RuntimeException final final = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! throw catch ! finally ! protected protected throws ! ! throw public public throws public public throws boolean TransactionTemplate TransactionStatus TestTransactionSynchronization private private throws call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() if call DataSourceTransactionManager.setFailEarlyOnGlobalRollbackOnly() call DataSourceTransactionManager.setFailEarlyOnGlobalRollbackOnly() call DataSourceTransactionManager.setFailEarlyOnGlobalRollbackOnly() call DataSourceTransactionManager.setFailEarlyOnGlobalRollbackOnly() call DataSourceTransactionManager.setFailEarlyOnGlobalRollbackOnly() ! ! decl_stmt org.springframework.transaction.TransactionStatus = call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() new decl_stmt TestTransactionSynchronization = new decl_stmt boolean = try call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! = call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() catch if ! call DataSourceTransactionManager.rollback() call DataSourceTransactionManager.rollback() call DataSourceTransactionManager.rollback() call DataSourceTransactionManager.rollback() call DataSourceTransactionManager.rollback() if else ! protected protected throws ! new protected protected throws ! ! protected protected throws ! TransactionTemplate TransactionTemplate public public throws call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() ! ! try decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws catch ! protected protected throws new protected protected throws protected protected throws TransactionTemplate TransactionTemplate public public throws new call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() call DataSourceTransactionManager.setValidateExistingTransaction() ! ! try decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws catch ! protected protected throws new protected protected throws protected protected throws TransactionTemplate TestTransactionSynchronization public public throws ! ! decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt TestTransactionSynchronization final final = new public public call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! public public new protected protected throws protected protected throws protected protected throws DataSourceTransactionManager TransactionTemplate TransactionStatus TestTransactionSynchronization public public throws call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() decl_stmt org.springframework.jdbc.datasource.DataSourceTransactionManager = new ! ! decl_stmt org.springframework.transaction.TransactionStatus = call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() call DataSourceTransactionManager.getTransaction() new decl_stmt TestTransactionSynchronization final final = new try call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() call org.springframework.transaction.TransactionStatus.isNewTransaction() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() call DataSourceTransactionManager.commit() catch ! protected protected throws ! new protected protected throws ! ! protected protected throws ! TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! protected protected throws new protected protected throws protected protected throws PlatformTransactionManager Connection DataSource TransactionTemplate TransactionTemplate public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt javax.sql.DataSource final final = call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! protected protected throws new protected protected throws protected protected throws SQLException TransactionTemplate DataSource DataSourceTransactionManager TransactionTemplate public public throws decl_stmt javax.sql.DataSource final final = decl_stmt java.sql.SQLException = new call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt org.springframework.jdbc.datasource.DataSourceTransactionManager = new call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() call DataSourceTransactionManager.setTransactionSynchronization() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws catch ! ! protected protected throws new protected protected throws protected protected throws TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! ! protected protected throws new protected protected throws ! ! protected protected throws ! ! TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws catch ! protected protected throws new protected protected throws protected protected throws TransactionTemplate TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! TransactionTemplate protected protected throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws protected protected throws Connection Connection TransactionTemplate TransactionTemplate public public throws decl_stmt sun.rmi.transport.Connection final final = decl_stmt sun.rmi.transport.Connection final final = call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! TransactionTemplate protected protected throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws protected protected throws TransactionTemplate InOrder public public throws call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() protected protected public public throws public public throws PreparedStatement TransactionTemplate InOrder Connection private private throws decl_stmt java.sql.PreparedStatement = call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected try catch try decl_stmt sun.rmi.transport.Connection = decl_stmt java.sql.PreparedStatement = call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) catch throw new if <= catch if <= else throw ! if > - else decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() PreparedStatement Connection protected protected try catch try decl_stmt sun.rmi.transport.Connection = decl_stmt java.sql.PreparedStatement = call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) catch throw new TransactionTemplate InOrder TransactionAwareDataSourceProxy public public throws call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected decl_stmt org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy = new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() TransactionAwareDataSourceProxy protected protected decl_stmt org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy = new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new TransactionTemplate InOrder TransactionAwareDataSourceProxy public public throws call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected decl_stmt org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy final final = new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() TransactionAwareDataSourceProxy protected protected decl_stmt org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy final final = new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new new protected protected try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new protected protected try new catch throw new TransactionTemplate InOrder TransactionAwareDataSourceProxy public public throws call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected decl_stmt org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy final final = new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() TransactionAwareDataSourceProxy protected protected decl_stmt org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy final final = new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.setReobtainTransactionalConnections(boolean) try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new new protected protected try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() new call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new try call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() call org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getConnection() catch throw new protected protected try new catch throw new TransactionTemplate public public throws new decl_stmt org.springframework.transaction.support.TransactionTemplate = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected catch ! protected protected TransactionTemplate public public throws new decl_stmt org.springframework.transaction.support.TransactionTemplate = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected catch ! protected protected TransactionTemplate public public throws new call DataSourceTransactionManager.setRollbackOnCommitFailure() call DataSourceTransactionManager.setRollbackOnCommitFailure() call DataSourceTransactionManager.setRollbackOnCommitFailure() call DataSourceTransactionManager.setRollbackOnCommitFailure() call DataSourceTransactionManager.setRollbackOnCommitFailure() decl_stmt org.springframework.transaction.support.TransactionTemplate = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected catch ! protected protected TransactionTemplate InOrder public public throws call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() call sun.rmi.transport.Connection.getAutoCommit() new decl_stmt org.springframework.transaction.support.TransactionTemplate = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws catch ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() protected protected throws TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! ! protected protected throws ! ! TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! ! protected protected throws ! ! TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! ! protected protected throws ! ! public public throws public public throws DatabaseMetaData TransactionTemplate Savepoint private private final final throws decl_stmt java.sql.DatabaseMetaData = decl_stmt java.sql.Savepoint = call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() for = <= ++ call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) + decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! for = < ++ call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! ! protected protected throws ! for = < ++ new protected protected throws ! ! protected protected throws ! DatabaseMetaData TransactionTemplate Savepoint public public throws decl_stmt java.sql.DatabaseMetaData = decl_stmt java.sql.Savepoint = call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! ! ! protected protected throws ! new protected protected throws ! ! protected protected throws ! DatabaseMetaData TransactionTemplate Savepoint Object public public throws decl_stmt java.sql.DatabaseMetaData = decl_stmt java.sql.Savepoint = call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws decl_stmt java.lang.Object = ! Object protected protected throws decl_stmt java.lang.Object = DatabaseMetaData TransactionTemplate Savepoint Object public public throws decl_stmt java.sql.DatabaseMetaData = decl_stmt java.sql.Savepoint = call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws decl_stmt java.lang.Object = ! Object protected protected throws decl_stmt java.lang.Object = TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! protected protected throws TransactionTemplate public public throws decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected throws ! protected protected throws public public public public public public public public if != = public public = public public if != = public public = ==