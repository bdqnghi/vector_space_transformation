org.springframework.cache.support java.util.Collection import java.util.Collections import java.util.LinkedHashSet import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.ConcurrentMap import org.springframework.beans.factory.InitializingBean import org.springframework.cache.Cache import org.springframework.cache.CacheManager import class org.springframework.cache.support.AbstractCacheManager super super implements decl Set decl ConcurrentMap public public decl Set String decl Collection public public decl_stmt java.util.Collection < extends extends = synchronized = decl_stmt java.util.Set < = new < call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() for : decl_stmt java.lang.String = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = Cache public public decl_stmt org.springframework.cache.Cache = if != return else synchronized = if == = if != = return public < public < return protected final protected final return String protected final protected final decl_stmt java.lang.String = synchronized if == decl Set private private decl_stmt java.util.Set < = new < + call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = protected protected return protected protected return