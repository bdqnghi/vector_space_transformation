org.springframework.web.portlet.handler javax.portlet.PortletSecurityException import org.junit.Test import org.springframework.mock.web.portlet.MockRenderRequest import org.springframework.mock.web.portlet.MockRenderResponse import static static org.junit.Assert.* import class org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptorTests UserRoleAuthorizationInterceptor MockRenderRequest MockRenderResponse Object boolean String public public throws decl_stmt java.lang.String = call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) new decl_stmt java.lang.Object = new call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() decl_stmt boolean = call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) String String Object boolean public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) new decl_stmt java.lang.Object = new call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() decl_stmt boolean = call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) String = public = public throws decl_stmt java.lang.String = call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) new call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) new String = public = public throws decl_stmt java.lang.String = call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.setAuthorizedRoles(String) new call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call MockRenderRequest.isUserInRole() call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) new = public = public throws call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call MockRenderRequest.addUserRole() call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) call org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor.preHandle(HttpServletRequest,HttpServletResponse,Object) new