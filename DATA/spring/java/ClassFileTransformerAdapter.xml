org.springframework.orm.jpa.persistenceunit java.lang.instrument.ClassFileTransformer import java.security.ProtectionDomain import javax.persistence.spi.ClassTransformer import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.util.Assert import class org.springframework.orm.jpa.persistenceunit.ClassFileTransformerAdapter super super implements ClassTransformer Log boolean decl byte public public < synchronized if return = try decl_stmt byte = if != && call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + + + + return catch if call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() + + + + + throw new + + catch if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + + + throw new + + finally = public public return +