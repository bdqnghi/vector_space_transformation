org.springframework.http.converter.xml java.util.concurrent.ConcurrentHashMap import java.util.concurrent.ConcurrentMap import javax.xml.bind.JAXBContext import javax.xml.bind.JAXBException import javax.xml.bind.Marshaller import javax.xml.bind.Unmarshaller import org.springframework.http.converter.HttpMessageConversionException import org.springframework.util.Assert import class super super extends decl ConcurrentMap JAXBContext Marshaller protected final protected final < try decl_stmt JAXBContext = decl_stmt org.springframework.oxm.Marshaller = call JAXBContext.createMarshaller() call JAXBContext.createMarshaller() call JAXBContext.createMarshaller() call JAXBContext.createMarshaller() call JAXBContext.createMarshaller() return catch throw new + + + protected protected JAXBContext Unmarshaller protected final protected final < throws try decl_stmt JAXBContext = decl_stmt org.springframework.oxm.Unmarshaller = call JAXBContext.createUnmarshaller() call JAXBContext.createUnmarshaller() call JAXBContext.createUnmarshaller() call JAXBContext.createUnmarshaller() call JAXBContext.createUnmarshaller() return catch throw new + + + protected protected JAXBContext protected final protected final < decl_stmt JAXBContext = if == try = catch throw new + + + return