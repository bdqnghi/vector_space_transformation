org.springframework.messaging.simp.user static static org.springframework.messaging.simp.SimpMessageHeaderAccessor.* import java.util.Arrays import java.util.List import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.context.SmartLifecycle import org.springframework.messaging.Message import org.springframework.messaging.MessageHandler import org.springframework.messaging.MessageHeaders import org.springframework.messaging.MessagingException import org.springframework.messaging.SubscribableChannel import org.springframework.messaging.core.MessageSendingOperations import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.simp.SimpMessagingTemplate import org.springframework.messaging.support.MessageBuilder import org.springframework.messaging.support.MessageHeaderInitializer import org.springframework.util.Assert import org.springframework.util.StringUtils import class org.springframework.messaging.simp.user.UserDestinationMessageHandler super super implements SubscribableChannel Object UserDestinationResolver boolean MessageHeaderInitializer SubscribableChannel Log decl MessageSendingOperations BroadcastHandler public public return public public = new : public public return != : public < public < return public public = public public return public public return public public return public final public final synchronized return public final public final synchronized = public final public final synchronized = public final public final synchronized UserDestinationResult SimpMessageHeaderAccessor public public < throws if != = if == return decl_stmt org.springframework.messaging.simp.user.UserDestinationResult = if == return if call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() if != return decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call org.springframework.messaging.simp.user.UserDestinationResult.getSubscribeDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSubscribeDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSubscribeDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSubscribeDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSubscribeDestination() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() = call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() call org.springframework.messaging.simp.user.UserDestinationResult.getSourceDestination() + + call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() for : call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() call org.springframework.messaging.simp.user.UserDestinationResult.getTargetDestinations() private private if != public public return + + public public return String SimpMessageHeaderAccessor SimpMessageHeaderAccessor public < public < < throws decl_stmt java.lang.String = if ! return decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = if call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) == return = call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = for : call SimpMessageHeaderAccessor.toNativeHeaderMap() call SimpMessageHeaderAccessor.toNativeHeaderMap() call SimpMessageHeaderAccessor.toNativeHeaderMap() call SimpMessageHeaderAccessor.toNativeHeaderMap() call SimpMessageHeaderAccessor.toNativeHeaderMap() if continue call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call SimpMessageHeaderAccessor.getFirstNativeHeader() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() MessageHeaders String SimpMessageHeaderAccessor public public < decl_stmt org.springframework.messaging.MessageHeaders = if != return decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = decl_stmt java.lang.String = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() = call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + +