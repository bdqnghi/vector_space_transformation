org.springframework.aop.framework java.io.FileNotFoundException import java.io.IOException import java.lang.reflect.Method import java.lang.reflect.Proxy import java.util.LinkedList import java.util.List import org.aopalliance.aop.Advice import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.junit.Before import org.junit.Test import test.mixin.Lockable import test.mixin.LockedException import org.springframework.aop.ClassFilter import org.springframework.aop.IntroductionAdvisor import org.springframework.aop.IntroductionInterceptor import org.springframework.aop.interceptor.DebugInterceptor import org.springframework.aop.support.AopUtils import org.springframework.aop.support.DefaultIntroductionAdvisor import org.springframework.aop.support.DefaultPointcutAdvisor import org.springframework.aop.support.DynamicMethodMatcherPointcut import org.springframework.beans.factory.BeanCreationException import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.FactoryBean import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.context.ApplicationListener import org.springframework.context.TestListener import org.springframework.core.io.ClassPathResource import org.springframework.tests.TimeStamped import org.springframework.tests.aop.advice.CountingBeforeAdvice import org.springframework.tests.aop.advice.MyThrowsHandler import org.springframework.tests.aop.interceptor.NopInterceptor import org.springframework.tests.aop.interceptor.TimestampIntroductionInterceptor import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.Person import org.springframework.tests.sample.beans.SideEffectBean import org.springframework.tests.sample.beans.TestBean import org.springframework.util.SerializationTestUtils import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import class org.springframework.aop.framework.ProxyFactoryBeanTests String String String String String BeanFactory String String String String String String String decl Class DefaultListableBeanFactory public public throws decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new = new new new ITestBean public public decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() ITestBean public public decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() ITestBean public public decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() ITestBean public public decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() public public AopConfigException DefaultListableBeanFactory private private try decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) catch decl_stmt AopConfigException = call AopConfigException.getMessage() call AopConfigException.getMessage() call AopConfigException.getMessage() call AopConfigException.getMessage() call AopConfigException.getMessage() != - AopConfigException DefaultListableBeanFactory public public try decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) catch decl_stmt AopConfigException = call AopConfigException.getMessage() call AopConfigException.getMessage() call AopConfigException.getMessage() call AopConfigException.getMessage() call AopConfigException.getMessage() ProxyFactoryBean DefaultListableBeanFactory CountingBeforeAdvice ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.tests.aop.advice.CountingBeforeAdvice = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() decl_stmt org.springframework.http.client.support.ProxyFactoryBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() DefaultListableBeanFactory ProxyFactoryBean ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() decl_stmt org.springframework.http.client.support.ProxyFactoryBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() DefaultListableBeanFactory decl FactoryBean ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) try call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() catch decl_stmt org.springframework.beans.factory.FactoryBean < = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call decl FactoryBean.getObjectType() call decl FactoryBean.getObjectType() call decl FactoryBean.getObjectType() call decl FactoryBean.getObjectType() call decl FactoryBean.getObjectType() ITestBean ITestBean NopInterceptor Advised Advised int public public decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() decl_stmt org.springframework.aop.framework.Advised = decl_stmt org.springframework.aop.framework.Advised = call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() decl_stmt int = call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() decl_stmt org.springframework.tests.aop.interceptor.NopInterceptor = new call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() + call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() ITestBean ITestBean public public call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) != call ITestBean.equals() call ITestBean.equals() call ITestBean.equals() call ITestBean.equals() call ITestBean.equals() call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) SideEffectBean SideEffectBean DefaultListableBeanFactory int SideEffectBean private private decl_stmt int = decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.tests.sample.beans.SideEffectBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() + call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() decl_stmt org.springframework.tests.sample.beans.SideEffectBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() + call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() decl_stmt org.springframework.tests.sample.beans.SideEffectBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) == call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() + call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() return Object public public decl_stmt java.lang.Object = String ITestBean TestBean public public decl_stmt java.lang.String = decl_stmt org.springframework.tests.sample.beans.TestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() ITestBean ProxyFactoryBean Exception public public decl_stmt org.springframework.http.client.support.ProxyFactoryBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.http.client.support.ProxyFactoryBean.getObjectType() call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call ITestBean.hashCode() call ITestBean.hashCode() call ITestBean.hashCode() call ITestBean.hashCode() call ITestBean.hashCode() decl_stmt Exception final final = new call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() new public public throws throw call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) try call ITestBean.toString() call ITestBean.toString() call ITestBean.toString() call ITestBean.toString() call ITestBean.toString() catch == public public throws throw DependsOnITestBean DefaultListableBeanFactory ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() decl_stmt DependsOnITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) long ITestBean TimeStamped int TimestampIntroductionInterceptor DebugInterceptor ProxyFactoryBean public public call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.http.client.support.ProxyFactoryBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt long = decl_stmt org.springframework.tests.aop.interceptor.TimestampIntroductionInterceptor = new call TimestampIntroductionInterceptor.setTime() call TimestampIntroductionInterceptor.setTime() call TimestampIntroductionInterceptor.setTime() call TimestampIntroductionInterceptor.setTime() call TimestampIntroductionInterceptor.setTime() decl_stmt int = call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.addAdvisor() call ProxyFactoryBean.addAdvisor() call ProxyFactoryBean.addAdvisor() call ProxyFactoryBean.addAdvisor() call ProxyFactoryBean.addAdvisor() new call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() == + decl_stmt org.springframework.tests.TimeStamped = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() == call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() == call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() new call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() == decl_stmt org.springframework.scheduling.annotation.ITestBean = decl_stmt org.springframework.aop.interceptor.DebugInterceptor = new call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() == = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call ProxyFactoryBean.removeAdvice() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call org.springframework.aop.interceptor.DebugInterceptor.getCount() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() Advised ITestBean NopInterceptor public public decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.aop.framework.Advised = call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() decl_stmt org.springframework.tests.aop.interceptor.NopInterceptor = new call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call org.springframework.aop.framework.Advised.addAdvice(Advice) call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() call NopInterceptor.getCount() ITestBean public public decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call ITestBean.toString() call ITestBean.toString() call ITestBean.toString() call ITestBean.toString() call ITestBean.toString() CountingBeforeAdvice DefaultListableBeanFactory int IEcho MyThrowsHandler Exception public public throws decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.tests.aop.advice.MyThrowsHandler = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.tests.aop.advice.CountingBeforeAdvice = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() decl_stmt org.springframework.aop.framework.IEcho = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt int = call org.springframework.aop.framework.IEcho.setA(int) call org.springframework.aop.framework.IEcho.setA(int) call org.springframework.aop.framework.IEcho.setA(int) call org.springframework.aop.framework.IEcho.setA(int) call org.springframework.aop.framework.IEcho.setA(int) call org.springframework.aop.framework.IEcho.getA() call org.springframework.aop.framework.IEcho.getA() call org.springframework.aop.framework.IEcho.getA() call org.springframework.aop.framework.IEcho.getA() call org.springframework.aop.framework.IEcho.getA() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() decl_stmt Exception = new try call IEcho.echoException() call IEcho.echoException() call IEcho.echoException() call IEcho.echoException() call IEcho.echoException() catch call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() = new try call IEcho.echoException() call IEcho.echoException() call IEcho.echoException() call IEcho.echoException() call IEcho.echoException() catch call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() call MyThrowsHandler.getCalls() DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new try call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) catch DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new try call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) catch instanceof ProxyFactoryBean decl ApplicationListener AddedGlobalInterface public public decl_stmt org.springframework.aop.framework.AddedGlobalInterface = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() == - decl_stmt org.springframework.http.client.support.ProxyFactoryBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() call ProxyFactoryBean.getAdvisors() decl_stmt org.springframework.context.ApplicationListener < = < call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) = call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() call AddedGlobalInterface.globalsAdded() == - try = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) catch Person Person DefaultListableBeanFactory Advice public public throws decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() decl_stmt Advice = new call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person Person DefaultListableBeanFactory public public throws decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person Person DefaultListableBeanFactory ProxyFactoryBean ProxyFactoryBean public public throws decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.http.client.support.ProxyFactoryBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.http.client.support.ProxyFactoryBean = decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person DefaultListableBeanFactory public public throws decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) DefaultListableBeanFactory ITestBean ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() try call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) catch try call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) catch DefaultListableBeanFactory ITestBean ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() try call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) catch try call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) call org.springframework.scheduling.annotation.ITestBean.setAge(int) catch DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) DefaultListableBeanFactory Advised public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.aop.framework.Advised = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.aop.framework.Advised.isFrozen() call org.springframework.aop.framework.Advised.isFrozen() call org.springframework.aop.framework.Advised.isFrozen() call org.springframework.aop.framework.Advised.isFrozen() call org.springframework.aop.framework.Advised.isFrozen() ProxyFactoryBean ITestBean public public throws decl_stmt org.springframework.http.client.support.ProxyFactoryBean = new call ProxyFactoryBean.setTarget() call ProxyFactoryBean.setTarget() call ProxyFactoryBean.setTarget() call ProxyFactoryBean.setTarget() call ProxyFactoryBean.setTarget() new call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() call ProxyFactoryBean.addAdvice() new call org.springframework.http.client.support.ProxyFactoryBean.setBeanFactory(BeanFactory) call org.springframework.http.client.support.ProxyFactoryBean.setBeanFactory(BeanFactory) call org.springframework.http.client.support.ProxyFactoryBean.setBeanFactory(BeanFactory) call org.springframework.http.client.support.ProxyFactoryBean.setBeanFactory(BeanFactory) call org.springframework.http.client.support.ProxyFactoryBean.setBeanFactory(BeanFactory) new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() call org.springframework.http.client.support.ProxyFactoryBean.getObject() public static public static public public throws return public public < return == public public < return public public throws if return new - return public public return public public return public < public < return new < public public return public public