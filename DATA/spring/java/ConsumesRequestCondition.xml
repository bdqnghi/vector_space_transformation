org.springframework.web.servlet.mvc.condition java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.Iterator import java.util.LinkedHashSet import java.util.List import java.util.Set import javax.servlet.http.HttpServletRequest import org.springframework.http.InvalidMediaTypeException import org.springframework.http.MediaType import org.springframework.util.StringUtils import org.springframework.web.HttpMediaTypeNotSupportedException import org.springframework.web.bind.annotation.RequestMapping import org.springframework.web.cors.CorsUtils import org.springframework.web.servlet.mvc.condition.HeadersRequestCondition.HeaderExpression import class org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition super super extends ConsumesRequestCondition decl List HeaderExpression decl Set private static < private static < decl_stmt java.util.Set < = new < if != for : decl_stmt HeaderExpression = new if for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new if != for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new return public < public < return new < decl Set public < public < decl_stmt java.util.Set < = new < for : if ! call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return public public return protected < protected < return protected protected return public public return ! : ConsumeMediaTypeExpression decl Set public public if return if return decl_stmt java.util.Set < = new < for < = call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() decl_stmt ConsumeMediaTypeExpression = if ! call ConsumeMediaTypeExpression.match() call ConsumeMediaTypeExpression.match() call ConsumeMediaTypeExpression.match() call ConsumeMediaTypeExpression.match() call ConsumeMediaTypeExpression.match() return call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() : new public public if && return else if return else if return - else return MediaType protected protected throws try decl_stmt org.springframework.http.MediaType = : return catch throw new + + +