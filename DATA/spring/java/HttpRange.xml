org.springframework.http java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.Iterator import java.util.List import org.springframework.util.Assert import org.springframework.util.ObjectUtils import org.springframework.util.StringUtils import class org.springframework.http.HttpRange String public static public static return new public static public static return new public static public static return new decl String decl List public static < public static < if ! return if ! throw new + + = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt java.lang.String = decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return Long long int long private static private static decl_stmt int = if > decl_stmt long = if < - decl_stmt java.lang.Long = + return new else return new else if == decl_stmt long = return new else throw new + + StringBuilder HttpRange public static public static < decl_stmt java.lang.StringBuilder = new for < = decl_stmt org.springframework.http.HttpRange = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() private private if < throw new + if != && < throw new + + + public public return public public if != && < return else return - ByteRange public public if == return if ! instanceof return decl_stmt ByteRange = return == && public public return * + StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if != call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public if < return - else return public public return - SuffixByteRange public public if == return if ! instanceof return decl_stmt SuffixByteRange = return == public public return public public return +