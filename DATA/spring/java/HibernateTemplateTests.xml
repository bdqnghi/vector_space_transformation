org.springframework.orm.hibernate3 java.lang.reflect.Proxy import java.sql.Connection import java.sql.SQLException import java.util.ArrayList import java.util.Collections import java.util.Iterator import java.util.List import org.hibernate.Criteria import org.hibernate.Filter import org.hibernate.FlushMode import org.hibernate.HibernateException import org.hibernate.Interceptor import org.hibernate.JDBCException import org.hibernate.LockMode import org.hibernate.NonUniqueResultException import org.hibernate.ObjectDeletedException import org.hibernate.ObjectNotFoundException import org.hibernate.PersistentObjectException import org.hibernate.PropertyValueException import org.hibernate.Query import org.hibernate.QueryException import org.hibernate.ReplicationMode import org.hibernate.SessionFactory import org.hibernate.StaleObjectStateException import org.hibernate.StaleStateException import org.hibernate.TransientObjectException import org.hibernate.UnresolvableObjectException import org.hibernate.WrongClassException import org.hibernate.classic.Session import org.hibernate.exception.ConstraintViolationException import org.hibernate.exception.DataException import org.hibernate.exception.GenericJDBCException import org.hibernate.exception.JDBCConnectionException import org.hibernate.exception.LockAcquisitionException import org.hibernate.exception.SQLGrammarException import org.junit.After import org.junit.Before import org.junit.Test import org.mockito.InOrder import org.springframework.dao.CannotAcquireLockException import org.springframework.dao.DataAccessResourceFailureException import org.springframework.dao.DataIntegrityViolationException import org.springframework.dao.IncorrectResultSizeDataAccessException import org.springframework.dao.InvalidDataAccessApiUsageException import org.springframework.dao.InvalidDataAccessResourceUsageException import org.springframework.tests.sample.beans.TestBean import org.springframework.transaction.support.TransactionSynchronizationManager import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class annotation annotation org.springframework.orm.hibernate3.HibernateTemplateTests SessionFactory HibernateTemplate Session public public = = = new call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() public public List List public public throws call org.springframework.orm.hibernate4.HibernateTemplate.isAllowCreate() call org.springframework.orm.hibernate4.HibernateTemplate.isAllowCreate() call org.springframework.orm.hibernate4.HibernateTemplate.isAllowCreate() call org.springframework.orm.hibernate4.HibernateTemplate.isAllowCreate() call org.springframework.orm.hibernate4.HibernateTemplate.isAllowCreate() call HibernateTemplate.getFlushMode() call HibernateTemplate.getFlushMode() call HibernateTemplate.getFlushMode() call HibernateTemplate.getFlushMode() call HibernateTemplate.getFlushMode() == decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == public public throws return List List public public throws call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == public public throws return List List public public throws call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == public public throws return InOrder List List public public throws call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() public public throws return HibernateTemplate public public call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() new decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTemplate.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTemplate.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTemplate.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTemplate.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws return catch public public throws return List List public public call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == public public throws return List List public public throws call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call HibernateTemplate.setFlushModeName() call HibernateTemplate.setFlushModeName() call HibernateTemplate.setFlushModeName() call HibernateTemplate.setFlushModeName() call HibernateTemplate.setFlushModeName() new try decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == finally public public throws return InOrder List List public public call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() new try decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == finally decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() public public throws return InOrder List List public public call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) call org.springframework.orm.hibernate4.HibernateTemplate.setFilterNames(String) new new try decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == finally decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() public public throws return Filter InOrder List Filter public public decl_stmt sun.text.normalizer.Filter = call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.enableFilter() call Session.enableFilter() call Session.enableFilter() call Session.enableFilter() call Session.enableFilter() call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() new try decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt sun.text.normalizer.Filter = call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) == finally decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() Filter List Filter public public decl_stmt sun.text.normalizer.Filter = call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.enableFilter() call Session.enableFilter() call Session.enableFilter() call Session.enableFilter() call Session.enableFilter() call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() call HibernateTemplate.setFilterName() new try decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt sun.text.normalizer.Filter = call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) call org.springframework.orm.hibernate4.HibernateTemplate.enableFilter(String) == finally List List Session Connection public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session = call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) new try decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == finally public public throws return List Connection List Session Interceptor public public throws decl_stmt Interceptor = decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session = call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAlwaysUseNewSession(boolean) call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() new try decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == finally public public throws return List List Interceptor public public throws decl_stmt Interceptor = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() call HibernateTemplate.setEntityInterceptor() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new < public public throws return == public public throws return Query Query Criteria public public throws decl_stmt javax.management.Query = decl_stmt javax.management.Query = decl_stmt Criteria = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws return public public throws return Query Query Criteria public public throws decl_stmt javax.management.Query = decl_stmt javax.management.Query = decl_stmt Criteria = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws return public public throws return Query Query Criteria public public throws decl_stmt javax.management.Query = decl_stmt javax.management.Query = decl_stmt Criteria = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws return public public throws return Query Query Criteria public public throws decl_stmt javax.management.Query = decl_stmt javax.management.Query = decl_stmt Criteria = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setFetchSize() call Query.setFetchSize() call Query.setFetchSize() call Query.setFetchSize() call Query.setFetchSize() call Query.setMaxResults() call Query.setMaxResults() call Query.setMaxResults() call Query.setMaxResults() call Query.setMaxResults() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setFetchSize() call Query.setFetchSize() call Query.setFetchSize() call Query.setFetchSize() call Query.setFetchSize() call Query.setMaxResults() call Query.setMaxResults() call Query.setMaxResults() call Query.setMaxResults() call Query.setMaxResults() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Criteria.setFetchSize() call Criteria.setFetchSize() call Criteria.setFetchSize() call Criteria.setFetchSize() call Criteria.setFetchSize() call Criteria.setMaxResults() call Criteria.setMaxResults() call Criteria.setMaxResults() call Criteria.setMaxResults() call Criteria.setMaxResults() call org.springframework.orm.hibernate4.HibernateTemplate.setFetchSize(int) call org.springframework.orm.hibernate4.HibernateTemplate.setFetchSize(int) call org.springframework.orm.hibernate4.HibernateTemplate.setFetchSize(int) call org.springframework.orm.hibernate4.HibernateTemplate.setFetchSize(int) call org.springframework.orm.hibernate4.HibernateTemplate.setFetchSize(int) call org.springframework.orm.hibernate4.HibernateTemplate.setMaxResults(int) call org.springframework.orm.hibernate4.HibernateTemplate.setMaxResults(int) call org.springframework.orm.hibernate4.HibernateTemplate.setMaxResults(int) call org.springframework.orm.hibernate4.HibernateTemplate.setMaxResults(int) call org.springframework.orm.hibernate4.HibernateTemplate.setMaxResults(int) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws return public public throws return TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.get() call Session.get() call Session.get() call Session.get() call Session.get() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) == TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.get() call Session.get() call Session.get() call Session.get() call Session.get() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) == TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.get() call Session.get() call Session.get() call Session.get() call Session.get() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) == TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.get() call Session.get() call Session.get() call Session.get() call Session.get() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.get(String,Serializable,LockMode) == TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.load() call Session.load() call Session.load() call Session.load() call Session.load() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) == ObjectNotFoundException public public throws decl_stmt ObjectNotFoundException = new call Session.load() call Session.load() call Session.load() call Session.load() call Session.load() try call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) catch TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.load() call Session.load() call Session.load() call Session.load() call Session.load() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) == TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.load() call Session.load() call Session.load() call Session.load() call Session.load() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) == TestBean Object public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.load() call Session.load() call Session.load() call Session.load() call Session.load() decl_stmt java.lang.Object = call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) == TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) call org.springframework.orm.hibernate4.HibernateTemplate.load(String,Serializable) List List Criteria public public throws decl_stmt Criteria = decl_stmt java.util.List = new call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.list() call Criteria.list() call Criteria.list() call Criteria.list() call Criteria.list() decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) == List List Criteria public public throws decl_stmt Criteria = decl_stmt java.util.List = new call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.list() call Criteria.list() call Criteria.list() call Criteria.list() call Criteria.list() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) == List List Criteria public public throws decl_stmt Criteria = decl_stmt java.util.List = new call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Session.createCriteria() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setResultTransformer() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheable() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call Criteria.setCacheRegion() call Criteria.list() call Criteria.list() call Criteria.list() call Criteria.list() call Criteria.list() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) call org.springframework.orm.hibernate4.HibernateTemplate.loadAll(Class) == TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.orm.hibernate4.HibernateTemplate.refresh(Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.refresh(Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.refresh(Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.refresh(Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.refresh(Object,LockMode) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.contains() call Session.contains() call Session.contains() call Session.contains() call Session.contains() call org.springframework.orm.hibernate4.HibernateTemplate.contains(Object) call org.springframework.orm.hibernate4.HibernateTemplate.contains(Object) call org.springframework.orm.hibernate4.HibernateTemplate.contains(Object) call org.springframework.orm.hibernate4.HibernateTemplate.contains(Object) call org.springframework.orm.hibernate4.HibernateTemplate.contains(Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.orm.hibernate4.HibernateTemplate.evict(Object) call org.springframework.orm.hibernate4.HibernateTemplate.evict(Object) call org.springframework.orm.hibernate4.HibernateTemplate.evict(Object) call org.springframework.orm.hibernate4.HibernateTemplate.evict(Object) call org.springframework.orm.hibernate4.HibernateTemplate.evict(Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) call org.springframework.orm.hibernate4.HibernateTemplate.lock(String,Object,LockMode) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.save() call Session.save() call Session.save() call Session.save() call Session.save() call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.save() call Session.save() call Session.save() call Session.save() call Session.save() call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) call org.springframework.orm.hibernate4.HibernateTemplate.save(Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.update(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() try call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) catch TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) call org.springframework.orm.hibernate4.HibernateTemplate.saveOrUpdate(Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) call org.springframework.orm.hibernate4.HibernateTemplate.replicate(Object,ReplicationMode) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.persist(String,Object) TestBean TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.merge() call Session.merge() call Session.merge() call Session.merge() call Session.merge() call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) TestBean TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.merge() call Session.merge() call Session.merge() call Session.merge() call Session.merge() call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) call org.springframework.orm.hibernate4.HibernateTemplate.merge(String,T) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) call org.springframework.orm.hibernate4.HibernateTemplate.delete(String,Object) TestBean List TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() decl_stmt java.util.List = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call org.springframework.orm.hibernate4.HibernateTemplate.deleteAll(Collection) call org.springframework.orm.hibernate4.HibernateTemplate.deleteAll(Collection) call org.springframework.orm.hibernate4.HibernateTemplate.deleteAll(Collection) call org.springframework.orm.hibernate4.HibernateTemplate.deleteAll(Collection) call org.springframework.orm.hibernate4.HibernateTemplate.deleteAll(Collection) public public throws call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.flush() call org.springframework.orm.hibernate4.HibernateTemplate.flush() call org.springframework.orm.hibernate4.HibernateTemplate.flush() call org.springframework.orm.hibernate4.HibernateTemplate.flush() call org.springframework.orm.hibernate4.HibernateTemplate.flush() public public throws call org.springframework.orm.hibernate4.HibernateTemplate.clear() call org.springframework.orm.hibernate4.HibernateTemplate.clear() call org.springframework.orm.hibernate4.HibernateTemplate.clear() call org.springframework.orm.hibernate4.HibernateTemplate.clear() call org.springframework.orm.hibernate4.HibernateTemplate.clear() Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) new == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() call HibernateTemplate.findByNamedParam() new new == Query List TestBean List public public throws decl_stmt javax.management.Query = decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setProperties() call Query.setProperties() call Query.setProperties() call Query.setProperties() call Query.setProperties() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByValueBean() call HibernateTemplate.findByValueBean() call HibernateTemplate.findByValueBean() call HibernateTemplate.findByValueBean() call HibernateTemplate.findByValueBean() == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() new == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() call HibernateTemplate.findByNamedQueryAndNamedParam() new new == Query List TestBean List public public throws decl_stmt javax.management.Query = decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setProperties() call Query.setProperties() call Query.setProperties() call Query.setProperties() call Query.setProperties() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() decl_stmt java.util.List = call HibernateTemplate.findByNamedQueryAndValueBean() call HibernateTemplate.findByNamedQueryAndValueBean() call HibernateTemplate.findByNamedQueryAndValueBean() call HibernateTemplate.findByNamedQueryAndValueBean() call HibernateTemplate.findByNamedQueryAndValueBean() == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) decl_stmt java.util.List = call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) decl_stmt java.util.List = call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() == Query List List public public throws decl_stmt javax.management.Query = decl_stmt java.util.List = new call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Session.getNamedQuery() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheable() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.setCacheRegion() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setCacheQueries(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) call org.springframework.orm.hibernate4.HibernateTemplate.setQueryCacheRegion(String) decl_stmt java.util.List = call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() call HibernateTemplate.findByNamedQuery() == Query Iterator Iterator public public throws decl_stmt javax.management.Query = decl_stmt java.util.Iterator = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.iterate() call Query.iterate() call Query.iterate() call Query.iterate() call Query.iterate() decl_stmt java.util.Iterator = call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() == Query Iterator Iterator public public throws decl_stmt javax.management.Query = decl_stmt java.util.Iterator = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.iterate() call Query.iterate() call Query.iterate() call Query.iterate() call Query.iterate() decl_stmt java.util.Iterator = call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() == Query Iterator Iterator public public throws decl_stmt javax.management.Query = decl_stmt java.util.Iterator = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.iterate() call Query.iterate() call Query.iterate() call Query.iterate() call Query.iterate() decl_stmt java.util.Iterator = call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() call HibernateTemplate.iterate() new == Query int public public throws decl_stmt javax.management.Query = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() decl_stmt int = call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() == Query int public public throws decl_stmt javax.management.Query = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() decl_stmt int = call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() == Query int public public throws decl_stmt javax.management.Query = call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.setParameter() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() call Query.executeUpdate() decl_stmt int = call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() call HibernateTemplate.bulkUpdate() new == DataException SQLGrammarException LockAcquisitionException UnresolvableObjectException ObjectDeletedException WrongClassException HibernateException JDBCConnectionException ObjectNotFoundException StaleStateException ConstraintViolationException SQLException QueryException PropertyValueException NonUniqueResultException JDBCException StaleObjectStateException public public throws decl_stmt java.sql.SQLException = new decl_stmt JDBCConnectionException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - decl_stmt SQLGrammarException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - decl_stmt LockAcquisitionException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - decl_stmt ConstraintViolationException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - decl_stmt DataException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - decl_stmt JDBCException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - decl_stmt PropertyValueException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw new catch try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw new catch decl_stmt ObjectDeletedException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch decl_stmt QueryException final final = new call QueryException.setQueryString() call QueryException.setQueryString() call QueryException.setQueryString() call QueryException.setQueryString() call QueryException.setQueryString() try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch decl_stmt UnresolvableObjectException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch decl_stmt ObjectNotFoundException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch decl_stmt WrongClassException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch decl_stmt NonUniqueResultException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch - decl_stmt StaleObjectStateException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch decl_stmt StaleStateException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch decl_stmt HibernateException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw new public public throws throw new public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw public public throws throw GenericJDBCException SQLException public public throws decl_stmt java.sql.SQLException = new decl_stmt GenericJDBCException final final = new try call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new < public public throws throw catch != - public public throws throw