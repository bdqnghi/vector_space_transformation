org.springframework.orm.jpa.persistenceunit java.io.IOException import java.lang.annotation.Annotation import java.net.URL import java.util.HashMap import java.util.HashSet import java.util.LinkedHashSet import java.util.LinkedList import java.util.List import java.util.Map import java.util.Set import javax.persistence.Embeddable import javax.persistence.Entity import javax.persistence.MappedSuperclass import javax.persistence.PersistenceException import javax.persistence.SharedCacheMode import javax.persistence.ValidationMode import javax.persistence.spi.PersistenceUnitInfo import javax.sql.DataSource import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.InitializingBean import org.springframework.context.ResourceLoaderAware import org.springframework.context.weaving.LoadTimeWeaverAware import org.springframework.core.io.Resource import org.springframework.core.io.ResourceLoader import org.springframework.core.io.support.PathMatchingResourcePatternResolver import org.springframework.core.io.support.ResourcePatternResolver import org.springframework.core.io.support.ResourcePatternUtils import org.springframework.core.type.classreading.CachingMetadataReaderFactory import org.springframework.core.type.classreading.MetadataReader import org.springframework.core.type.classreading.MetadataReaderFactory import org.springframework.core.type.filter.AnnotationTypeFilter import org.springframework.core.type.filter.TypeFilter import org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver import org.springframework.instrument.classloading.LoadTimeWeaver import org.springframework.jdbc.datasource.lookup.DataSourceLookup import org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup import org.springframework.jdbc.datasource.lookup.MapDataSourceLookup import org.springframework.util.ClassUtils import org.springframework.util.ObjectUtils import org.springframework.util.ResourceUtils import class org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager super super implements SharedCacheMode String DataSourceLookup decl PersistenceUnitPostProcessor LoadTimeWeaver String String String Log decl String String String String decl Set ValidationMode decl Set DataSource String String DataSource ResourcePatternResolver decl String decl Map decl String public public = new public public = public public = public public = public public = public public = public public = public public = public public < = new public public = != : new public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public if == && = new StringBuilder decl List String public public decl_stmt java.util.List < = for : if == if == if == if != if != if != else decl_stmt java.lang.String = if ! && ! decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) throw new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() boolean boolean String decl SpringPersistenceUnitInfo PersistenceUnitReader decl List private < private < decl_stmt java.util.List < = new < decl_stmt java.lang.String = decl_stmt boolean = != || != decl_stmt boolean = decl_stmt org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader = new decl_stmt org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo = call org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader.readPersistenceUnitInfos(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader.readPersistenceUnitInfos(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader.readPersistenceUnitInfos(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader.readPersistenceUnitInfos(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader.readPersistenceUnitInfos(String) for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = if if if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + + else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return URL String String MetadataReader MetadataReaderFactory SpringPersistenceUnitInfo decl Resource private private decl_stmt org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo = new call SpringPersistenceUnitInfo.setPersistenceUnitName() call SpringPersistenceUnitInfo.setPersistenceUnitName() call SpringPersistenceUnitInfo.setPersistenceUnitName() call SpringPersistenceUnitInfo.setPersistenceUnitName() call SpringPersistenceUnitInfo.setPersistenceUnitName() call SpringPersistenceUnitInfo.setExcludeUnlistedClasses() call SpringPersistenceUnitInfo.setExcludeUnlistedClasses() call SpringPersistenceUnitInfo.setExcludeUnlistedClasses() call SpringPersistenceUnitInfo.setExcludeUnlistedClasses() call SpringPersistenceUnitInfo.setExcludeUnlistedClasses() if != for : try decl_stmt java.lang.String = + + decl_stmt org.springframework.core.io.Resource = decl_stmt org.springframework.core.type.classreading.MetadataReaderFactory = new for : if decl_stmt org.springframework.core.type.classreading.MetadataReader = call org.springframework.core.type.classreading.MetadataReaderFactory.getMetadataReader(Resource) call org.springframework.core.type.classreading.MetadataReaderFactory.getMetadataReader(Resource) call org.springframework.core.type.classreading.MetadataReaderFactory.getMetadataReader(Resource) call org.springframework.core.type.classreading.MetadataReaderFactory.getMetadataReader(Resource) call org.springframework.core.type.classreading.MetadataReaderFactory.getMetadataReader(Resource) decl_stmt java.lang.String = call org.springframework.core.type.classreading.MetadataReader.getClassMetadata() call org.springframework.core.type.classreading.MetadataReader.getClassMetadata() call org.springframework.core.type.classreading.MetadataReader.getClassMetadata() call org.springframework.core.type.classreading.MetadataReader.getClassMetadata() call org.springframework.core.type.classreading.MetadataReader.getClassMetadata() if call SpringPersistenceUnitInfo.addManagedClassName() call SpringPersistenceUnitInfo.addManagedClassName() call SpringPersistenceUnitInfo.addManagedClassName() call SpringPersistenceUnitInfo.addManagedClassName() call SpringPersistenceUnitInfo.addManagedClassName() if call SpringPersistenceUnitInfo.getPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.getPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.getPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.getPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.getPersistenceUnitRootUrl() == decl_stmt java.net.URL = if call SpringPersistenceUnitInfo.setPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.setPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.setPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.setPersistenceUnitRootUrl() call SpringPersistenceUnitInfo.setPersistenceUnitRootUrl() else if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call SpringPersistenceUnitInfo.addManagedPackage() call SpringPersistenceUnitInfo.addManagedPackage() call SpringPersistenceUnitInfo.addManagedPackage() call SpringPersistenceUnitInfo.addManagedPackage() call SpringPersistenceUnitInfo.addManagedPackage() call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() catch throw new if != for : call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() else if call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() call SpringPersistenceUnitInfo.addMappingFileName() return private private throws for : if return return Resource private private if == return try decl_stmt org.springframework.core.io.Resource = return call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() catch throw new Resource Resource private private decl_stmt org.springframework.core.io.Resource = + if call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() try decl_stmt org.springframework.core.io.Resource = call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) if ! call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() return catch return return PersistenceUnitInfo protected final protected final decl_stmt PersistenceUnitInfo = return decl PersistenceUnitPostProcessor protected protected decl_stmt org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor = if != for : protected protected return PersistenceUnitInfo public public if throw new + if throw new + + if > return decl_stmt PersistenceUnitInfo = return PersistenceUnitInfo public public decl_stmt PersistenceUnitInfo = if == if ! throw new + + else throw new + + return