org.springframework.messaging.simp.broker static static org.junit.Assert.* import static static org.mockito.Mockito.* import java.security.Principal import java.util.Collections import java.util.List import java.util.concurrent.ScheduledFuture import org.junit.Before import org.junit.Test import org.mockito.ArgumentCaptor import org.mockito.Captor import org.mockito.Mock import org.mockito.MockitoAnnotations import org.springframework.messaging.Message import org.springframework.messaging.MessageChannel import org.springframework.messaging.MessageHeaders import org.springframework.messaging.SubscribableChannel import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.simp.TestPrincipal import org.springframework.messaging.support.MessageBuilder import org.springframework.scheduling.TaskScheduler import class annotation org.springframework.messaging.simp.broker.SimpleBrokerMessageHandlerTests MessageChannel TaskScheduler SubscribableChannel SubscribableChannel decl ArgumentCaptor SimpleBrokerMessageHandler public public = new > public public SimpMessageHeaderAccessor decl Message decl Message String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) new decl_stmt org.springframework.messaging.Message < = new call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.Message < = call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() SimpMessageHeaderAccessor decl Message String decl Message public public decl_stmt java.lang.String = decl_stmt org.springframework.messaging.Message < = new decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call SimpMessageHeaderAccessor.getHeader() call SimpMessageHeaderAccessor.getHeader() call SimpMessageHeaderAccessor.getHeader() call SimpMessageHeaderAccessor.getHeader() call SimpMessageHeaderAccessor.getHeader() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getUser(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getUser(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getUser(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getUser(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getUser(Map) new call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() public public throws new = public = public throws new ScheduledFuture public public throws decl_stmt ScheduledFuture = new public public throws new decl Message decl List decl ArgumentCaptor MessageHeaders TestPrincipal Runnable String public public throws new decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt java.lang.Runnable = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl_stmt java.lang.String = decl_stmt org.springframework.messaging.simp.TestPrincipal = new decl_stmt org.springframework.messaging.Message < = new call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() decl_stmt java.util.List < < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.springframework.messaging.MessageHeaders = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) decl Message decl List decl ArgumentCaptor MessageHeaders TestPrincipal Runnable String public public throws new decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt java.lang.Runnable = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl_stmt java.lang.String = decl_stmt org.springframework.messaging.simp.TestPrincipal = new decl_stmt org.springframework.messaging.Message < = new call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() decl_stmt java.util.List < < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.springframework.messaging.MessageHeaders = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) decl Message decl List decl ArgumentCaptor TestPrincipal Runnable String public public throws new decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt java.lang.Runnable = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl_stmt java.lang.String = decl_stmt org.springframework.messaging.simp.TestPrincipal = new decl_stmt org.springframework.messaging.Message < = new call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() decl_stmt java.util.List < < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() SimpMessageHeaderAccessor private < private < decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() SimpMessageHeaderAccessor private < private < decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() SimpMessageHeaderAccessor private < private < decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() SimpMessageHeaderAccessor private private for < : decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = if call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) if call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() if call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() return return