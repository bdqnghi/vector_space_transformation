org.springframework.messaging.handler.invocation java.lang.reflect.Method import java.util.ArrayList import java.util.Arrays import java.util.Comparator import java.util.HashMap import java.util.LinkedHashMap import java.util.LinkedHashSet import java.util.List import java.util.Map import java.util.Set import org.hamcrest.Matchers import org.junit.Before import org.junit.Test import org.springframework.context.support.StaticApplicationContext import org.springframework.core.MethodIntrospector import org.springframework.messaging.Message import org.springframework.messaging.converter.SimpleMessageConverter import org.springframework.messaging.handler.DestinationPatternsMessageCondition import org.springframework.messaging.handler.HandlerMethod import org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver import org.springframework.messaging.support.MessageBuilder import org.springframework.util.AntPathMatcher import org.springframework.util.PathMatcher import org.springframework.util.ReflectionUtils.MethodFilter import static static org.junit.Assert.* import class org.springframework.messaging.handler.invocation.MethodMessageHandlerTests String TestMethodMessageHandler TestController decl List public public decl_stmt java.util.List < = = new new = new = public = public new decl Map public public decl_stmt java.util.Map < = call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() Method public public throws decl_stmt com.sun.jdi.Method = Method public public throws decl_stmt com.sun.jdi.Method = = public public public public private < private < return new public public = public public = public public throw new public public = public public = public public = public public public public public public public public decl List protected < extends extends protected < extends extends decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() return decl List protected < extends extends protected < extends extends decl_stmt java.util.List < = new < call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() return protected protected < return String protected protected < decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) return + return decl Set protected < protected < decl_stmt java.util.Set < = new < if ! call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return protected protected < return String protected protected < decl_stmt java.lang.String = if || return return DestinationPatternsMessageCondition DestinationPatternsMessageCondition protected < protected < final final final < return new < public public decl_stmt org.springframework.messaging.handler.DestinationPatternsMessageCondition = new decl_stmt org.springframework.messaging.handler.DestinationPatternsMessageCondition = new return call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) DestinationPatternsMessageCondition DestinationPatternsMessageCondition public public decl_stmt org.springframework.messaging.handler.DestinationPatternsMessageCondition = new decl_stmt org.springframework.messaging.handler.DestinationPatternsMessageCondition = new return call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) call org.springframework.messaging.handler.DestinationPatternsMessageCondition.compareTo(DestinationPatternsMessageCondition,Message) protected protected < return new decl Map private static < < extends extends private static < < extends extends < decl_stmt java.util.Map < < extends extends = new < < extends extends for : for < extends extends : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public return