org.springframework.context.annotation java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import org.junit.Test import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.annotation.Autowired import org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.context.annotation.LazyAutowiredAnnotationBeanPostProcessorTests TestBeanHolder TestBean AnnotationConfigApplicationContext RootBeanDefinition RootBeanDefinition private private < extends extends decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call RootBeanDefinition.setLazyInit() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() decl_stmt org.springframework.context.annotation.TestBeanHolder = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() decl_stmt org.springframework.tests.sample.beans.TestBean = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() call TestBeanHolder.getTestBean() public public public public public public public public public public public public public public public public RootBeanDefinition AutowiredAnnotationBeanPostProcessor DefaultListableBeanFactory FieldResourceInjectionBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) new decl_stmt org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt FieldResourceInjectionBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() try call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() call FieldResourceInjectionBean.getTestBean() catch RootBeanDefinition AutowiredAnnotationBeanPostProcessor DefaultListableBeanFactory OptionalFieldResourceInjectionBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) new decl_stmt org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt OptionalFieldResourceInjectionBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() try call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() call OptionalFieldResourceInjectionBean.getTestBean() catch public public return public public return public public return public public if != throw new = public public return public public if != throw new = public public return public public if != throw new = public public return public public return public public return public public return