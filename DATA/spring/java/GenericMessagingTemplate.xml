org.springframework.messaging.core java.util.concurrent.CountDownLatch import java.util.concurrent.TimeUnit import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.messaging.Message import org.springframework.messaging.MessageChannel import org.springframework.messaging.MessageDeliveryException import org.springframework.messaging.MessageHeaders import org.springframework.messaging.PollableChannel import org.springframework.messaging.support.MessageBuilder import org.springframework.messaging.support.MessageHeaderAccessor import org.springframework.util.Assert import class org.springframework.messaging.core.GenericMessagingTemplate super super extends super implements long boolean long public public = public public return public public = public public return public public = public public throws new boolean MessageHeaderAccessor long protected final protected final < decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = if != && call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() decl_stmt long = decl_stmt boolean = >= : if ! throw new + + + decl Message long protected final < protected final < instanceof decl_stmt long = decl_stmt org.springframework.messaging.Message < = >= : if == && + + + return decl Message TemporaryReplyChannel Object Object protected final < protected final < < decl_stmt java.lang.Object = decl_stmt java.lang.Object = decl_stmt TemporaryReplyChannel = new = try catch call TemporaryReplyChannel.setSendFailed() call TemporaryReplyChannel.setSendFailed() call TemporaryReplyChannel.setSendFailed() call TemporaryReplyChannel.setSendFailed() call TemporaryReplyChannel.setSendFailed() throw decl_stmt org.springframework.messaging.Message < = if != = return public public = public < public < return - public < public < try if < = else if = else = catch return public public < return - String boolean public public < = decl_stmt boolean = decl_stmt java.lang.String = if = else if = else if = + if != if + + if throw new return