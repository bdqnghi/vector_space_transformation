org.springframework.web.method.annotation java.lang.reflect.Method import java.util.Collections import org.junit.Before import org.junit.Test import org.springframework.core.LocalVariableTableParameterNameDiscoverer import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.ui.Model import org.springframework.ui.ModelMap import org.springframework.validation.BindingResult import org.springframework.web.HttpSessionRequiredException import org.springframework.web.bind.WebDataBinder import org.springframework.web.bind.annotation.ModelAttribute import org.springframework.web.bind.annotation.SessionAttributes import org.springframework.web.bind.support.DefaultSessionAttributeStore import org.springframework.web.bind.support.SessionAttributeStore import org.springframework.web.bind.support.WebDataBinderFactory import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.method.HandlerMethod import org.springframework.web.method.support.HandlerMethodArgumentResolverComposite import org.springframework.web.method.support.InvocableHandlerMethod import org.springframework.web.method.support.ModelAndViewContainer import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertNull import static static org.junit.Assert.assertSame import static static org.junit.Assert.assertTrue import static static org.junit.Assert.fail import static static org.mockito.BDDMockito.given import static static org.mockito.BDDMockito.mock import class org.springframework.web.method.annotation.ModelFactoryTests TestController NativeWebRequest SessionAttributesHandler SessionAttributeStore ModelAndViewContainer public public throws = new new = new = new = new = new HandlerMethod ModelFactory public public throws decl_stmt org.springframework.web.method.annotation.ModelFactory = decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) HandlerMethod ModelFactory public public throws decl_stmt org.springframework.web.method.annotation.ModelFactory = decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) HandlerMethod ModelFactory public public throws decl_stmt org.springframework.web.method.annotation.ModelFactory = decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) HandlerMethod ModelFactory public public throws decl_stmt org.springframework.web.method.annotation.ModelFactory = decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) HandlerMethod ModelFactory public public throws decl_stmt org.springframework.web.method.annotation.ModelFactory = decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) ModelFactory Foo HandlerMethod public public throws decl_stmt org.springframework.beans.Foo = new decl_stmt org.springframework.web.method.annotation.ModelFactory = decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) HandlerMethod ModelFactory public public throws decl_stmt org.springframework.web.method.annotation.ModelFactory = decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) HandlerMethod ModelFactory public public throws decl_stmt org.springframework.web.method.annotation.ModelFactory = new decl_stmt org.springframework.web.method.HandlerMethod = try call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) catch call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) ModelAndViewContainer WebDataBinder ModelFactory String WebDataBinderFactory Object String public public throws decl_stmt java.lang.String = decl_stmt java.lang.Object = new decl_stmt org.springframework.web.method.support.ModelAndViewContainer = new call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) decl_stmt org.springframework.web.bind.WebDataBinder = new decl_stmt org.springframework.web.bind.support.WebDataBinderFactory = call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() decl_stmt org.springframework.web.method.annotation.ModelFactory = new call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() decl_stmt java.lang.String = + call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() ModelAndViewContainer WebDataBinder String ModelFactory String WebDataBinderFactory public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.springframework.web.method.support.ModelAndViewContainer = new call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) decl_stmt org.springframework.web.bind.WebDataBinder = new decl_stmt org.springframework.web.bind.support.WebDataBinderFactory = call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() decl_stmt org.springframework.web.method.annotation.ModelFactory = new call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() ModelAndViewContainer WebDataBinder String ModelFactory String WebDataBinderFactory public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.springframework.web.method.support.ModelAndViewContainer = new call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) decl_stmt org.springframework.web.bind.WebDataBinder = new decl_stmt org.springframework.web.bind.support.WebDataBinderFactory = call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call org.springframework.web.method.support.ModelAndViewContainer.getSessionStatus() call org.springframework.web.method.support.ModelAndViewContainer.getSessionStatus() call org.springframework.web.method.support.ModelAndViewContainer.getSessionStatus() call org.springframework.web.method.support.ModelAndViewContainer.getSessionStatus() call org.springframework.web.method.support.ModelAndViewContainer.getSessionStatus() decl_stmt org.springframework.web.method.annotation.ModelFactory = new call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() ModelAndViewContainer WebDataBinder String String ModelFactory String WebDataBinderFactory String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.springframework.web.method.support.ModelAndViewContainer = new call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) call org.springframework.web.method.support.ModelAndViewContainer.addAttribute(String,Object) decl_stmt java.lang.String = decl_stmt java.lang.String = call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModel(ModelMap) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModel(ModelMap) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModel(ModelMap) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModel(ModelMap) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModel(ModelMap) new call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModelScenario(boolean) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModelScenario(boolean) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModelScenario(boolean) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModelScenario(boolean) call org.springframework.web.method.support.ModelAndViewContainer.setRedirectModelScenario(boolean) decl_stmt org.springframework.web.bind.WebDataBinder = new decl_stmt org.springframework.web.bind.support.WebDataBinderFactory = call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() call WebDataBinderFactory.createBinder() decl_stmt org.springframework.web.method.annotation.ModelFactory = new call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.annotation.ModelFactory.updateModel(NativeWebRequest,ModelAndViewContainer) call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() HandlerMethodArgumentResolverComposite InvocableHandlerMethod private private < throws decl_stmt org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite = new call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) new decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setParameterNameDiscoverer(ParameterNameDiscoverer) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setParameterNameDiscoverer(ParameterNameDiscoverer) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setParameterNameDiscoverer(ParameterNameDiscoverer) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setParameterNameDiscoverer(ParameterNameDiscoverer) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setParameterNameDiscoverer(ParameterNameDiscoverer) new return new Method private private < throws decl_stmt com.sun.jdi.Method = return new public public public public return public public return public public return = = public = = public return new public public public public