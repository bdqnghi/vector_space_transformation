org.springframework.cache.config java.util.concurrent.atomic.AtomicLong import org.junit.After import org.junit.Test import org.springframework.cache.Cache import org.springframework.cache.CacheManager import org.springframework.cache.CacheTestUtils import org.springframework.cache.annotation.CacheConfig import org.springframework.cache.annotation.Cacheable import org.springframework.cache.annotation.CachingConfigurerSupport import org.springframework.cache.annotation.EnableCaching import org.springframework.context.ApplicationContext import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.Import import static static org.springframework.cache.CacheTestUtils.* import class org.springframework.cache.config.EnableCachingIntegrationTests ConfigurableApplicationContext public public if != FooService public public = new decl_stmt org.springframework.cache.config.FooService = FooService public public = new decl_stmt org.springframework.cache.config.FooService = Cache Object Object private private decl_stmt org.springframework.cache.Cache = decl_stmt java.lang.Object = new decl_stmt java.lang.Object = Cache Object FooService public public = new decl_stmt org.springframework.cache.Cache = decl_stmt org.springframework.cache.config.FooService = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() decl_stmt java.lang.Object = new call org.springframework.cache.config.FooService.getWithCondition(Object) call org.springframework.cache.config.FooService.getWithCondition(Object) call org.springframework.cache.config.FooService.getWithCondition(Object) call org.springframework.cache.config.FooService.getWithCondition(Object) call org.springframework.cache.config.FooService.getWithCondition(Object) private private return public public return public public return new public public return new public public return = public = public return public public return new public public return