org.springframework.http.converter.xml javax.xml.transform.Result import javax.xml.transform.stream.StreamSource import org.junit.Test import org.springframework.beans.TypeMismatchException import org.springframework.http.MediaType import org.springframework.http.MockHttpInputMessage import org.springframework.http.MockHttpOutputMessage import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.http.converter.HttpMessageNotWritableException import org.springframework.oxm.Marshaller import org.springframework.oxm.MarshallingFailureException import org.springframework.oxm.Unmarshaller import org.springframework.oxm.UnmarshallingFailureException import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.http.converter.xml.MarshallingHttpMessageConverterTests Unmarshaller MarshallingHttpMessageConverter public public throws decl_stmt org.springframework.oxm.Unmarshaller = call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) call org.springframework.oxm.Unmarshaller.supports(Class) decl_stmt org.springframework.http.converter.xml.MarshallingHttpMessageConverter = new call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canRead(Class,MediaType) Marshaller MarshallingHttpMessageConverter public public throws decl_stmt org.springframework.oxm.Marshaller = call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() decl_stmt org.springframework.http.converter.xml.MarshallingHttpMessageConverter = new call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setMarshaller(Marshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setMarshaller(Marshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setMarshaller(Marshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setMarshaller(Marshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setMarshaller(Marshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.canWrite(Class,MediaType) String Unmarshaller MockHttpInputMessage String MarshallingHttpMessageConverter public public throws decl_stmt java.lang.String = decl_stmt org.springframework.http.MockHttpInputMessage = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt org.springframework.oxm.Unmarshaller = call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() decl_stmt org.springframework.http.converter.xml.MarshallingHttpMessageConverter = new call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) decl_stmt java.lang.String = call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() Marshaller Unmarshaller MockHttpInputMessage MarshallingHttpMessageConverter = public = public throws decl_stmt org.springframework.http.MockHttpInputMessage = new new decl_stmt org.springframework.oxm.Marshaller = decl_stmt org.springframework.oxm.Unmarshaller = call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() decl_stmt org.springframework.http.converter.xml.MarshallingHttpMessageConverter = new call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() Unmarshaller MarshallingHttpMessageConverter MockHttpInputMessage UnmarshallingFailureException public public throws decl_stmt org.springframework.http.MockHttpInputMessage = new new decl_stmt UnmarshallingFailureException = new decl_stmt org.springframework.oxm.Unmarshaller = call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() decl_stmt org.springframework.http.converter.xml.MarshallingHttpMessageConverter = new call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) call org.springframework.http.converter.xml.MarshallingHttpMessageConverter.setUnmarshaller(Unmarshaller) try call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() call MarshallingHttpMessageConverter.read() catch == String MockHttpOutputMessage MarshallingHttpMessageConverter Marshaller public public throws decl_stmt java.lang.String = decl_stmt org.springframework.http.MockHttpOutputMessage = new decl_stmt org.springframework.oxm.Marshaller = decl_stmt org.springframework.http.converter.xml.MarshallingHttpMessageConverter = new call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() new call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() String MockHttpOutputMessage MarshallingHttpMessageConverter MarshallingFailureException Marshaller public public throws decl_stmt java.lang.String = decl_stmt org.springframework.http.MockHttpOutputMessage = new decl_stmt MarshallingFailureException = new decl_stmt org.springframework.oxm.Marshaller = try decl_stmt org.springframework.http.converter.xml.MarshallingHttpMessageConverter = new call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() call MarshallingHttpMessageConverter.write() catch == = public = public throws new