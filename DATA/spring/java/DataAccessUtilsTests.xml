org.springframework.dao.support java.util.ArrayList import java.util.Collection import java.util.Date import java.util.HashMap import java.util.HashSet import java.util.Map import org.junit.Test import org.springframework.dao.DataAccessException import org.springframework.dao.IncorrectResultSizeDataAccessException import org.springframework.dao.InvalidDataAccessApiUsageException import org.springframework.dao.TypeMismatchDataAccessException import static static org.junit.Assert.* import class org.springframework.dao.support.DataAccessUtilsTests decl Collection public public decl_stmt java.util.Collection < = new < try catch try catch try catch try catch decl Collection public public decl_stmt java.util.Collection < = new < call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() try catch try catch try catch try catch try catch decl Collection public public decl_stmt java.util.Collection < = new < call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() Integer decl Collection public public decl_stmt java.lang.Integer = decl_stmt java.util.Collection < = new < call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() decl Collection public public decl_stmt java.util.Collection < = new < call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() new call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() new try catch decl Collection public public decl_stmt java.util.Collection < = new < call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() decl Collection public public decl_stmt java.util.Collection < = new < call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() try catch try catch Date decl Collection public public decl_stmt java.util.Date = new decl_stmt java.util.Collection < = new < call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call java.util.Date.toString() call java.util.Date.toString() call java.util.Date.toString() call java.util.Date.toString() call java.util.Date.toString() try catch try catch MapPersistenceExceptionTranslator RuntimeException public public decl_stmt MapPersistenceExceptionTranslator = new decl_stmt RuntimeException = new MapPersistenceExceptionTranslator InvalidDataAccessApiUsageException RuntimeException public public decl_stmt MapPersistenceExceptionTranslator = new decl_stmt RuntimeException = new decl_stmt InvalidDataAccessApiUsageException = new call MapPersistenceExceptionTranslator.addTranslation() call MapPersistenceExceptionTranslator.addTranslation() call MapPersistenceExceptionTranslator.addTranslation() call MapPersistenceExceptionTranslator.addTranslation() call MapPersistenceExceptionTranslator.addTranslation() public public public public return