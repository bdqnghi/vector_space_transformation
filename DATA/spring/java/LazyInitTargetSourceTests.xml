org.springframework.aop.target java.util.Set import org.junit.Test import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.core.io.Resource import org.springframework.tests.sample.beans.ITestBean import static static org.junit.Assert.* import static static org.springframework.tests.TestResourceUtils.* import class org.springframework.aop.target.LazyInitTargetSourceTests Resource decl Class Resource Resource DefaultListableBeanFactory ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() DefaultListableBeanFactory ITestBean public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() DefaultListableBeanFactory decl Set decl Set public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() decl_stmt java.util.Set < = < call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() decl_stmt java.util.Set < = < call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() protected protected