org.springframework.http.client java.io.IOException import java.net.URI import java.util.Iterator import java.util.List import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.http.HttpRequest import org.springframework.util.StreamUtils import class org.springframework.http.client.InterceptingClientHttpRequest super super extends URI decl List ClientHttpRequestFactory HttpMethod public public return public public return InterceptingRequestExecution protected final protected final throws decl_stmt InterceptingRequestExecution = new return call InterceptingRequestExecution.execute() call InterceptingRequestExecution.execute() call InterceptingRequestExecution.execute() call InterceptingRequestExecution.execute() call InterceptingRequestExecution.execute() ClientHttpRequest ClientHttpRequestInterceptor public public throws if decl_stmt org.springframework.http.client.ClientHttpRequestInterceptor = return call ClientHttpRequestInterceptor.intercept() call ClientHttpRequestInterceptor.intercept() call ClientHttpRequestInterceptor.intercept() call ClientHttpRequestInterceptor.intercept() call ClientHttpRequestInterceptor.intercept() else decl_stmt org.springframework.http.client.ClientHttpRequest = call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() if > call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() call ClientHttpRequest.getBody() return call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute()