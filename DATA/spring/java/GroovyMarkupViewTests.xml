org.springframework.web.servlet.view.groovy java.io.IOException import java.io.Reader import java.util.Arrays import java.util.HashMap import java.util.Locale import java.util.Map import javax.servlet.ServletContext import groovy.text.Template import groovy.text.TemplateEngine import groovy.text.markup.MarkupTemplateEngine import groovy.text.markup.TemplateConfiguration import org.codehaus.groovy.control.CompilationFailedException import org.hamcrest.Matchers import org.junit.Before import org.junit.Test import org.springframework.beans.DirectFieldAccessor import org.springframework.context.ApplicationContextException import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.i18n.LocaleContextHolder import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockServletContext import org.springframework.web.context.WebApplicationContext import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.web.servlet.view.groovy.GroovyMarkupViewTests String WebApplicationContext ServletContext public public = = new GroovyMarkupView public public throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = new new < call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() try call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() catch TemplateEngine DirectFieldAccessor GroovyMarkupView public public throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = new call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) new call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() decl_stmt org.springframework.beans.DirectFieldAccessor = new decl_stmt TemplateEngine = call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call TemplateEngine.getClass() call TemplateEngine.getClass() call TemplateEngine.getClass() call TemplateEngine.getClass() call TemplateEngine.getClass() TemplateEngine DirectFieldAccessor GroovyMarkupView public public throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = new call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.setTemplateEngine(MarkupTemplateEngine) new call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() decl_stmt org.springframework.beans.DirectFieldAccessor = new decl_stmt TemplateEngine = call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call TemplateEngine.getClass() call TemplateEngine.getClass() call TemplateEngine.getClass() call TemplateEngine.getClass() call TemplateEngine.getClass() GroovyMarkupView public public throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() GroovyMarkupView public public throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() GroovyMarkupView public public throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() GroovyMarkupView public public throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() call GroovyMarkupView.checkResource() decl Map MockHttpServletResponse public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletResponse = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() decl Map MockHttpServletResponse public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletResponse = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() = new call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() decl Map MockHttpServletResponse public public throws decl_stmt java.util.Map < = new <> decl_stmt org.springframework.mock.web.MockHttpServletResponse = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() MockHttpServletRequest MockHttpServletResponse GroovyMarkupView private private < throws decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setPreferredLocales(List) call org.springframework.mock.web.MockHttpServletRequest.setPreferredLocales(List) call org.springframework.mock.web.MockHttpServletRequest.setPreferredLocales(List) call org.springframework.mock.web.MockHttpServletRequest.setPreferredLocales(List) call org.springframework.mock.web.MockHttpServletRequest.setPreferredLocales(List) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.renderMergedTemplateModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.renderMergedTemplateModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.renderMergedTemplateModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.renderMergedTemplateModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.groovy.GroovyMarkupView.renderMergedTemplateModel(Map,HttpServletRequest,HttpServletResponse) return AnnotationConfigApplicationContext GroovyMarkupView private private throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupView = new call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setApplicationContext() call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() call GroovyMarkupView.setUrl() call GroovyMarkupView.afterPropertiesSet() call GroovyMarkupView.afterPropertiesSet() call GroovyMarkupView.afterPropertiesSet() call GroovyMarkupView.afterPropertiesSet() call GroovyMarkupView.afterPropertiesSet() return public public throws return GroovyMarkupConfigurer public public decl_stmt org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer = new call org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.setResourceLoaderPath(String) call org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.setResourceLoaderPath(String) call org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.setResourceLoaderPath(String) call org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.setResourceLoaderPath(String) call org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.setResourceLoaderPath(String) return