org.springframework.remoting.jaxws java.net.MalformedURLException import java.net.URL import javax.xml.namespace.QName import javax.xml.ws.BindingProvider import javax.xml.ws.Service import javax.xml.ws.WebServiceClient import javax.xml.ws.WebServiceRef import javax.xml.ws.soap.AddressingFeature import org.junit.Test import org.springframework.beans.factory.BeanCreationException import org.springframework.beans.factory.support.GenericBeanDefinition import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.annotation.AnnotationConfigUtils import org.springframework.context.support.GenericApplicationContext import static static org.junit.Assert.* import class org.springframework.remoting.jaxws.JaxWsSupportTests public public throws public public throws new public public throws public public throws GenericApplicationContext ServiceAccessor GenericBeanDefinition OrderService GenericBeanDefinition GenericBeanDefinition String GenericBeanDefinition private private throws decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() if != call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new try call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt org.springframework.remoting.jaxws.OrderService = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() instanceof decl_stmt java.lang.String = call OrderService.getOrder() call OrderService.getOrder() call OrderService.getOrder() call OrderService.getOrder() call OrderService.getOrder() try call OrderService.getOrder() call OrderService.getOrder() call OrderService.getOrder() call OrderService.getOrder() call OrderService.getOrder() catch decl_stmt ServiceAccessor = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() = call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() try call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() call ServiceAccessor.orderService() catch catch if && instanceof else throw finally call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() = = public = = public =