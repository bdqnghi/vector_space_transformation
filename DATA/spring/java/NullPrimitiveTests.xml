org.springframework.aop.framework org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.aop.AopInvocationException import static static org.junit.Assert.* import class org.springframework.aop.framework.NullPrimitiveTests ExpectedException Foo SimpleFoo ProxyFactory public public class class implements implements public public return decl_stmt SimpleFoo = new decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() new public public throws return decl_stmt org.springframework.beans.Foo = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call org.springframework.beans.Foo.getValue() call org.springframework.beans.Foo.getValue() call org.springframework.beans.Foo.getValue() call org.springframework.beans.Foo.getValue() call org.springframework.beans.Foo.getValue() public public return public public throws return public public return Bar Bar ProxyFactory public public decl_stmt org.springframework.context.conversionservice.Bar = new decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() new public public throws return decl_stmt org.springframework.context.conversionservice.Bar = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call Bar.getValue() call Bar.getValue() call Bar.getValue() call Bar.getValue() call Bar.getValue() public public throws return