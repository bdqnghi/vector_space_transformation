org.springframework.web.socket.server.support java.util.Arrays import java.util.HashMap import java.util.List import java.util.Map import org.junit.Before import org.junit.Test import org.springframework.web.socket.AbstractHttpRequestTests import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.server.HandshakeInterceptor import static static org.mockito.BDDMockito.* import class org.springframework.web.socket.server.support.HandshakeInterceptorChainTests super super extends WebSocketHandler HandshakeInterceptor HandshakeInterceptor HandshakeInterceptor decl List decl Map public public = = = = = = new < HandshakeInterceptorChain public public throws call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) decl_stmt org.springframework.web.socket.server.support.HandshakeInterceptorChain = new call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) HandshakeInterceptorChain public public throws call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) call org.springframework.web.socket.server.HandshakeInterceptor.beforeHandshake(ServerHttpRequest,ServerHttpResponse,WebSocketHandler,Map) decl_stmt org.springframework.web.socket.server.support.HandshakeInterceptorChain = new call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) call org.springframework.web.socket.server.support.HandshakeInterceptorChain.applyBeforeHandshake(ServerHttpRequest,ServerHttpResponse,Map) HandshakeInterceptorChain public public decl_stmt org.springframework.web.socket.server.support.HandshakeInterceptorChain = new call HandshakeInterceptorChain.applyAfterHandshake() call HandshakeInterceptorChain.applyAfterHandshake() call HandshakeInterceptorChain.applyAfterHandshake() call HandshakeInterceptorChain.applyAfterHandshake() call HandshakeInterceptorChain.applyAfterHandshake()