org.springframework.web.servlet.resource java.io.FileOutputStream import java.io.IOException import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import java.util.zip.GZIPOutputStream import org.junit.Before import org.junit.BeforeClass import org.junit.Test import org.springframework.cache.Cache import org.springframework.cache.concurrent.ConcurrentMapCache import org.springframework.core.io.ClassPathResource import org.springframework.core.io.FileSystemResource import org.springframework.core.io.Resource import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.util.FileCopyUtils import static static org.junit.Assert.* import class org.springframework.web.servlet.resource.GzipResourceResolverTests Cache decl List ResourceResolverChain Resource Resource Resource Resource Resource GZIPOutputStream public static public static throws decl_stmt org.springframework.core.io.Resource = new decl_stmt org.springframework.core.io.Resource = new call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) decl_stmt org.springframework.core.io.Resource = call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) decl_stmt org.springframework.core.io.Resource = new call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) decl_stmt org.springframework.core.io.Resource = call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) call org.springframework.core.io.Resource.createRelative(String) if call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() decl_stmt java.util.zip.GZIPOutputStream = new new call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() if call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() decl_stmt java.util.zip.GZIPOutputStream = new new call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() decl List decl Map VersionResourceResolver public public = new decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new decl_stmt org.springframework.web.servlet.resource.VersionResourceResolver = new call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new = new = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new Resource Resource MockHttpServletRequest String String public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt org.springframework.core.io.Resource = new + decl_stmt org.springframework.core.io.Resource = call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() new + call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() + + + instanceof Resource Resource MockHttpServletRequest String String public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt org.springframework.core.io.Resource = new + decl_stmt org.springframework.core.io.Resource = call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() new + call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() + + + instanceof Resource Resource MockHttpServletRequest Resource String String public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt org.springframework.core.io.Resource = new + decl_stmt org.springframework.core.io.Resource = new + decl_stmt org.springframework.core.io.Resource = call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() new + call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() + + + instanceof = new = call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() new + call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() + + + instanceof Resource Resource String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt org.springframework.core.io.Resource = new + decl_stmt org.springframework.core.io.Resource = call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.web.servlet.resource.ResourceResolverChain.resolveResource(HttpServletRequest,String,List) call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() call org.springframework.core.io.Resource.getDescription() new + call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() call org.springframework.core.io.Resource.getFilename() + + + instanceof