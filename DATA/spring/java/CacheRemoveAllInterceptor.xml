org.springframework.cache.jcache.interceptor javax.cache.annotation.CacheRemoveAll import org.springframework.cache.Cache import org.springframework.cache.interceptor.CacheErrorHandler import org.springframework.cache.interceptor.CacheOperationInvocationContext import org.springframework.cache.interceptor.CacheOperationInvoker import class annotation org.springframework.cache.jcache.interceptor.CacheRemoveAllInterceptor super super extends CacheRemoveAllOperation Throwable boolean Object protected protected < decl_stmt org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation = decl_stmt boolean = call CacheRemoveAllOperation.isEarlyRemove() call CacheRemoveAllOperation.isEarlyRemove() call CacheRemoveAllOperation.isEarlyRemove() call CacheRemoveAllOperation.isEarlyRemove() call CacheRemoveAllOperation.isEarlyRemove() if try decl_stmt java.lang.Object = if ! return catch decl_stmt java.lang.Throwable = if ! && call org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation.getExceptionTypeFilter() call org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation.getExceptionTypeFilter() call org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation.getExceptionTypeFilter() call org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation.getExceptionTypeFilter() call org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation.getExceptionTypeFilter() call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() throw Cache protected protected < decl_stmt org.springframework.cache.Cache = if + call org.springframework.cache.Cache.getName() call org.springframework.cache.Cache.getName() call org.springframework.cache.Cache.getName() call org.springframework.cache.Cache.getName() call org.springframework.cache.Cache.getName() + +