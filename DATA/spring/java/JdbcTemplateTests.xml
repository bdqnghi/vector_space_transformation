org.springframework.jdbc.core java.sql.BatchUpdateException import java.sql.CallableStatement import java.sql.Connection import java.sql.DatabaseMetaData import java.sql.PreparedStatement import java.sql.ResultSet import java.sql.SQLException import java.sql.SQLWarning import java.sql.Statement import java.sql.Types import java.util.ArrayList import java.util.Arrays import java.util.LinkedList import java.util.List import java.util.Map import javax.sql.DataSource import org.junit.Before import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.dao.DataAccessException import org.springframework.dao.InvalidDataAccessApiUsageException import org.springframework.jdbc.BadSqlGrammarException import org.springframework.jdbc.CannotGetJdbcConnectionException import org.springframework.jdbc.SQLWarningException import org.springframework.jdbc.UncategorizedSQLException import org.springframework.jdbc.core.support.AbstractInterruptibleBatchPreparedStatementSetter import org.springframework.jdbc.datasource.SingleConnectionDataSource import org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator import org.springframework.jdbc.support.SQLStateSQLExceptionTranslator import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter import org.springframework.util.LinkedCaseInsensitiveMap import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import static static org.springframework.tests.Matchers.* import class org.springframework.jdbc.core.JdbcTemplateTests ExpectedException PreparedStatement JdbcTemplate ResultSet CallableStatement Connection DataSource Statement public public throws = = = = = = new = public public throws == ! int int Dispatcher String public public throws decl_stmt java.lang.String final final = decl_stmt int = decl_stmt sun.rmi.server.Dispatcher = new decl_stmt int = == int SQLException Dispatcher String public public throws decl_stmt java.lang.String final final = decl_stmt int final final = decl_stmt java.sql.SQLException = new decl_stmt sun.rmi.server.Dispatcher = new try finally public public throws new public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() public public throws new public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() public public throws new public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() Integer public public throws decl_stmt java.lang.Integer final final = new public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() new public public throws public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() new public public throws public public throws public public throws new public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() Integer public public throws decl_stmt java.lang.Integer final final = new public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() new public public call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() new decl String decl List decl String StringHandler JdbcTemplate String private private throws decl_stmt java.lang.String = decl_stmt java.lang.String = class class implements implements decl_stmt java.util.List private < = new < public public throws public public return new decl_stmt StringHandler = new decl_stmt org.springframework.jdbc.core.JdbcTemplate = new call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() if != call org.springframework.jdbc.core.JdbcTemplate.setFetchSize(int) call org.springframework.jdbc.core.JdbcTemplate.setFetchSize(int) call org.springframework.jdbc.core.JdbcTemplate.setFetchSize(int) call org.springframework.jdbc.core.JdbcTemplate.setFetchSize(int) call org.springframework.jdbc.core.JdbcTemplate.setFetchSize(int) if != call org.springframework.jdbc.core.JdbcTemplate.setMaxRows(int) call org.springframework.jdbc.core.JdbcTemplate.setMaxRows(int) call org.springframework.jdbc.core.JdbcTemplate.setMaxRows(int) call org.springframework.jdbc.core.JdbcTemplate.setMaxRows(int) call org.springframework.jdbc.core.JdbcTemplate.setMaxRows(int) if != call org.springframework.jdbc.core.JdbcTemplate.setQueryTimeout(int) call org.springframework.jdbc.core.JdbcTemplate.setQueryTimeout(int) call org.springframework.jdbc.core.JdbcTemplate.setQueryTimeout(int) call org.springframework.jdbc.core.JdbcTemplate.setQueryTimeout(int) call org.springframework.jdbc.core.JdbcTemplate.setQueryTimeout(int) decl_stmt java.lang.String = call StringHandler.getStrings() call StringHandler.getStrings() call StringHandler.getStrings() call StringHandler.getStrings() call StringHandler.getStrings() == for = < ++ + + if != if != if != if != public public throws public public return new RowCountCallbackHandler SingleConnectionDataSource String public public throws decl_stmt java.lang.String = new decl_stmt org.springframework.jdbc.datasource.SingleConnectionDataSource = new = new decl_stmt org.springframework.jdbc.core.RowCountCallbackHandler = new String public public throws new decl_stmt java.lang.String = new < public public return public public return PreparedStatement String public public throws decl_stmt java.lang.String = new < public public throws decl_stmt java.sql.PreparedStatement = call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.close() call PreparedStatement.close() call PreparedStatement.close() call PreparedStatement.close() call PreparedStatement.close() new return PreparedStatement public public throws decl_stmt java.sql.PreparedStatement = call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setFetchSize() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.setMaxRows() call PreparedStatement.close() call PreparedStatement.close() call PreparedStatement.close() call PreparedStatement.close() call PreparedStatement.close() new return RowCountCallbackHandler String public public throws decl_stmt java.lang.String = decl_stmt org.springframework.jdbc.core.RowCountCallbackHandler = new RuntimeException String public public throws decl_stmt java.lang.String final final = decl_stmt RuntimeException final final = new try new public public throw finally public public throw int int String public public throws decl_stmt java.lang.String final final = decl_stmt int = decl_stmt int = == int int String public public throws decl_stmt java.lang.String final final = decl_stmt int = decl_stmt int = new new new == new SQLException String public public throws decl_stmt java.sql.SQLException = new decl_stmt java.lang.String final final = try finally int int String public public throws decl_stmt java.lang.String final final = decl_stmt int = decl_stmt int = == decl int JdbcTemplate decl String public public throws decl_stmt java.lang.String final final final = new decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == JdbcTemplate decl String public public throws decl_stmt java.lang.String final final final = new new decl_stmt org.springframework.jdbc.core.JdbcTemplate = new try call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() catch decl int JdbcTemplate decl String public public throws decl_stmt java.lang.String final final final = decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == JdbcTemplate decl String public public throws decl_stmt java.lang.String final final final = decl_stmt org.springframework.jdbc.core.JdbcTemplate = new try call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() finally decl int decl int JdbcTemplate String decl int BatchPreparedStatementSetter public public throws decl_stmt java.lang.String final final = decl_stmt int final final final = new decl_stmt int final final final = new decl_stmt org.springframework.jdbc.core.BatchPreparedStatementSetter = new public public throws public public return decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == public public throws public public return decl int decl int JdbcTemplate String decl int BatchPreparedStatementSetter public public throws decl_stmt java.lang.String final final = decl_stmt int final final final = new decl_stmt int final final final = new decl_stmt org.springframework.jdbc.core.BatchPreparedStatementSetter = new public public throws if < public public return public public return >= decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == public public throws if < public public return public public return >= decl int decl int JdbcTemplate String decl int BatchPreparedStatementSetter public public throws decl_stmt java.lang.String final final = decl_stmt int final final final = new decl_stmt int final final final = new decl_stmt org.springframework.jdbc.core.BatchPreparedStatementSetter = new protected protected throws if < return else return decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == protected protected throws if < return else return decl int decl int JdbcTemplate String decl int BatchPreparedStatementSetter public public throws decl_stmt java.lang.String final final = decl_stmt int final final final = new decl_stmt int final final final = new decl_stmt org.springframework.jdbc.core.BatchPreparedStatementSetter = new protected protected throws if < return else return decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == protected protected throws if < return else return BatchPreparedStatementSetter decl int decl int decl int String public public throws decl_stmt java.lang.String final final = decl_stmt int final final final = new decl_stmt int final final final = new decl_stmt org.springframework.jdbc.core.BatchPreparedStatementSetter = new public public throws public public return decl_stmt int = == public public throws public public return BatchPreparedStatementSetter SQLException decl int String public public throws decl_stmt java.lang.String final final = decl_stmt int final final final = new decl_stmt java.sql.SQLException = new decl_stmt org.springframework.jdbc.core.BatchPreparedStatementSetter = new public public throws public public return try finally public public throws public public return decl int decl int decl List JdbcTemplate String public public throws decl_stmt java.lang.String final final = decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt int final final final = new decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == decl int decl int decl int decl List String public public throws decl_stmt java.lang.String final final = decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt int final final final = new decl_stmt int final final final = new = new decl_stmt int = == decl int decl int decl int decl List JdbcTemplate String decl ParameterizedPreparedStatementSetter public public throws decl_stmt java.lang.String final final = decl_stmt java.util.List final final final < = decl_stmt int final final final = new decl_stmt int final final final = new decl_stmt org.springframework.jdbc.core.ParameterizedPreparedStatementSetter < = new < public public throws decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt int = call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() call JdbcTemplate.batchUpdate() == call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() public public throws RowCountCallbackHandler SQLException JdbcTemplate public public throws decl_stmt java.sql.SQLException = new = decl_stmt org.springframework.jdbc.core.JdbcTemplate = new decl_stmt org.springframework.jdbc.core.RowCountCallbackHandler = new call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() RowCountCallbackHandler SQLException public public throws decl_stmt java.sql.SQLException = new = = new decl_stmt org.springframework.jdbc.core.RowCountCallbackHandler = new public public throws public public throws RowCountCallbackHandler SQLException private private throws decl_stmt java.sql.SQLException = new = = new if new else decl_stmt org.springframework.jdbc.core.RowCountCallbackHandler = new int PreparedStatementSetter int String String public public throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt int = decl_stmt org.springframework.jdbc.core.PreparedStatementSetter = new public public throws decl_stmt int = new == public public throws PreparedStatementSetter SQLException String String public public throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.sql.SQLException = new decl_stmt org.springframework.jdbc.core.PreparedStatementSetter = new public public throws try new finally public public throws RowCountCallbackHandler SQLException public public throws decl_stmt java.sql.SQLException = new decl_stmt org.springframework.jdbc.core.RowCountCallbackHandler = new SQLWarning JdbcTemplate String public public throws decl_stmt java.lang.String = decl_stmt java.sql.SQLWarning = new decl_stmt org.springframework.jdbc.core.JdbcTemplate = new call org.springframework.jdbc.core.JdbcTemplate.setIgnoreWarnings(boolean) call org.springframework.jdbc.core.JdbcTemplate.setIgnoreWarnings(boolean) call org.springframework.jdbc.core.JdbcTemplate.setIgnoreWarnings(boolean) call org.springframework.jdbc.core.JdbcTemplate.setIgnoreWarnings(boolean) call org.springframework.jdbc.core.JdbcTemplate.setIgnoreWarnings(boolean) try call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() new public public throws finally public public throws SQLWarning String public public throws decl_stmt java.lang.String = decl_stmt java.sql.SQLWarning = new new public public throws public public throws SQLException String public public throws decl_stmt java.sql.SQLException final final = new decl_stmt java.lang.String final final = try new public public throws throw finally public public throws throw SQLException JdbcTemplate String public public throws decl_stmt java.sql.SQLException final final = new decl_stmt java.lang.String final final = decl_stmt org.springframework.jdbc.core.JdbcTemplate = new call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDatabaseProductName() call JdbcTemplate.setDatabaseProductName() call JdbcTemplate.setDatabaseProductName() call JdbcTemplate.setDatabaseProductName() call JdbcTemplate.setDatabaseProductName() call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() try call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() new public public throws throw finally public public throws throw SQLException JdbcTemplate String public public throws decl_stmt java.sql.SQLException final final = new decl_stmt java.lang.String final final = decl_stmt org.springframework.jdbc.core.JdbcTemplate = new call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setDataSource() call JdbcTemplate.setExceptionTranslator() call JdbcTemplate.setExceptionTranslator() call JdbcTemplate.setExceptionTranslator() call JdbcTemplate.setExceptionTranslator() call JdbcTemplate.setExceptionTranslator() new call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() call JdbcTemplate.afterPropertiesSet() try call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() call JdbcTemplate.query() new public public throws throw finally public public throws throw ResultSet CallableStatement Statement PreparedStatement CallableStatement public public throws decl_stmt sun.tools.tree.Statement final final = call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) decl_stmt java.sql.PreparedStatement final final = call java.sql.PreparedStatement.executeQuery() call java.sql.PreparedStatement.executeQuery() call java.sql.PreparedStatement.executeQuery() call java.sql.PreparedStatement.executeQuery() call java.sql.PreparedStatement.executeQuery() decl_stmt java.sql.ResultSet final final = call java.sql.ResultSet.next() call java.sql.ResultSet.next() call java.sql.ResultSet.next() call java.sql.ResultSet.next() call java.sql.ResultSet.next() decl_stmt java.sql.CallableStatement final final = decl_stmt java.sql.CallableStatement final final = call CallableStatement.execute() call CallableStatement.execute() call CallableStatement.execute() call CallableStatement.execute() call CallableStatement.execute() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() - call CallableStatement.getResultSet() call CallableStatement.getResultSet() call CallableStatement.getResultSet() call CallableStatement.getResultSet() call CallableStatement.getResultSet() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() call CallableStatement.getUpdateCount() - new public public return public public return public public return public public return public public throws return public public == return public public == return public public == return public public return new < public public return new public public return new < public public return new public public return new < public public return public public return public public return public public return public public throws return public public == return public public == return public public == return public public return public public return public public return public public return public public return ResultSet public public throws decl_stmt java.sql.ResultSet = try new < public public throw new catch try new public public throws return new < public public throw new catch public public throw new public public throws return public public throw new decl List public public throws - decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new public public throw new try new public public throws return finally public public throw new public public throws return decl List decl Map public public throws - ! decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt java.util.Map < = new public public throws return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() public public throws return DatabaseMetaData private private throws decl_stmt java.sql.DatabaseMetaData = call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.getDatabaseProductName() call java.sql.DatabaseMetaData.supportsBatchUpdates() call java.sql.DatabaseMetaData.supportsBatchUpdates() call java.sql.DatabaseMetaData.supportsBatchUpdates() call java.sql.DatabaseMetaData.supportsBatchUpdates() call java.sql.DatabaseMetaData.supportsBatchUpdates() protected protected throws return PreparedStatement public public throws decl_stmt java.sql.PreparedStatement = call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call sun.rmi.transport.Connection.prepareStatement(String) call java.sql.PreparedStatement.setInt(int,int) call java.sql.PreparedStatement.setInt(int,int) call java.sql.PreparedStatement.setInt(int,int) call java.sql.PreparedStatement.setInt(int,int) call java.sql.PreparedStatement.setInt(int,int) return public public return