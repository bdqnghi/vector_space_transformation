org.springframework.web.servlet.mvc.method.annotation static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import java.lang.reflect.Method import java.nio.charset.Charset import java.util.Arrays import java.util.Collections import java.util.List import javax.validation.Valid import javax.validation.constraints.NotNull import org.junit.Before import org.junit.Test import org.springframework.core.MethodParameter import org.springframework.core.io.ByteArrayResource import org.springframework.core.io.Resource import org.springframework.http.HttpInputMessage import org.springframework.http.HttpOutputMessage import org.springframework.http.HttpRangeResource import org.springframework.http.MediaType import org.springframework.http.converter.HttpMessageConverter import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean import org.springframework.web.HttpMediaTypeNotAcceptableException import org.springframework.web.HttpMediaTypeNotSupportedException import org.springframework.web.bind.MethodArgumentNotValidException import org.springframework.web.bind.WebDataBinder import org.springframework.web.bind.annotation.RequestBody import org.springframework.web.bind.annotation.ResponseBody import org.springframework.web.bind.support.WebDataBinderFactory import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.HandlerMapping import class org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorMockTests MethodParameter MethodParameter decl HttpMessageConverter decl HttpMessageConverter ModelAndViewContainer MethodParameter MethodParameter MockHttpServletResponse MethodParameter NativeWebRequest MethodParameter MethodParameter MockHttpServletRequest RequestResponseBodyMethodProcessor MethodParameter Method public public throws = call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() = call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() = new decl_stmt com.sun.jdi.Method = = new = new = new - = new - = new - = new - = new = new = new = new call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) = new = new public public call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() call RequestResponseBodyMethodProcessor.supportsParameter() public public call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) String MediaType Object public public throws decl_stmt org.springframework.http.MediaType = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() decl_stmt java.lang.Object = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) new call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() public public throws try new catch public public throws new decl HttpMessageConverter MediaType private private throws decl_stmt org.springframework.http.MediaType = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) decl_stmt org.springframework.http.converter.HttpMessageConverter < = call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() = new < > call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) new MediaType = public = public throws decl_stmt org.springframework.http.MediaType = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) = public = public throws call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) = public = public throws call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) = public = public throws call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) new call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call decl HttpMessageConverter.read() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) new public public throws call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) new call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) new public public throws call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) new call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) new public public throws call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) new call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call decl HttpMessageConverter.canRead() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) new String MediaType public public throws decl_stmt org.springframework.http.MediaType = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) decl_stmt java.lang.String = call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() String public public throws decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() MediaType = public = public throws decl_stmt org.springframework.http.MediaType = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) MediaType = public = public throws decl_stmt org.springframework.http.MediaType = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) Resource public public throws decl_stmt org.springframework.core.io.Resource = new call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() Resource public public throws decl_stmt org.springframework.core.io.Resource = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() Resource public public throws decl_stmt org.springframework.core.io.Resource = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() String MediaType decl List public public throws decl_stmt java.lang.String = decl_stmt org.springframework.http.MediaType = decl_stmt java.util.List < = call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.getSupportedMediaTypes() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call decl HttpMessageConverter.canWrite() call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() public public return public public return public public return public public public public = = public public return LocalValidatorFactoryBean WebDataBinder public public throws decl_stmt org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() decl_stmt org.springframework.web.bind.WebDataBinder = new call WebDataBinder.setValidator() call WebDataBinder.setValidator() call WebDataBinder.setValidator() call WebDataBinder.setValidator() call WebDataBinder.setValidator() return public public return