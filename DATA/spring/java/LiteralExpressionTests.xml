org.springframework.expression.spel org.junit.Test import org.springframework.expression.EvaluationContext import org.springframework.expression.EvaluationException import org.springframework.expression.common.LiteralExpression import org.springframework.expression.spel.support.StandardEvaluationContext import static static org.junit.Assert.* import class org.springframework.expression.spel.LiteralExpressionTests LiteralExpression EvaluationContext public public throws decl_stmt org.springframework.expression.common.LiteralExpression = new call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() decl_stmt org.springframework.expression.EvaluationContext = new call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() new call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() new call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() new call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() call org.springframework.expression.common.LiteralExpression.getValue() new call org.springframework.expression.common.LiteralExpression.getExpressionString() call org.springframework.expression.common.LiteralExpression.getExpressionString() call org.springframework.expression.common.LiteralExpression.getExpressionString() call org.springframework.expression.common.LiteralExpression.getExpressionString() call org.springframework.expression.common.LiteralExpression.getExpressionString() call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) new call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) new call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) call org.springframework.expression.common.LiteralExpression.isWritable(EvaluationContext) new new LiteralExpression public public try decl_stmt org.springframework.expression.common.LiteralExpression = new call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) new catch try decl_stmt org.springframework.expression.common.LiteralExpression = new call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) new catch try decl_stmt org.springframework.expression.common.LiteralExpression = new call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) call org.springframework.expression.common.LiteralExpression.setValue(Object,Object) new new catch LiteralExpression public public throws decl_stmt org.springframework.expression.common.LiteralExpression = new call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() new call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() new call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() call org.springframework.expression.common.LiteralExpression.getValueType() new new call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) new call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) new call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) call org.springframework.expression.common.LiteralExpression.getValueTypeDescriptor(Object) new new private private if ! instanceof + + + + if ! + + + +