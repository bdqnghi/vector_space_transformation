org.springframework.beans.factory.annotation java.lang.annotation.Annotation import java.util.Set import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanClassLoaderAware import org.springframework.beans.factory.config.BeanFactoryPostProcessor import org.springframework.beans.factory.config.ConfigurableListableBeanFactory import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.core.Ordered import org.springframework.util.ClassUtils import class org.springframework.beans.factory.annotation.CustomAutowireConfigurer super super implements ClassLoader int decl Set public public = public public return public public = public public < = String decl Class DefaultListableBeanFactory QualifierAnnotationAutowireCandidateResolver public public throws if != if ! instanceof throw new decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = if ! call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() instanceof call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) new decl_stmt org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getAutowireCandidateResolver() for : decl_stmt java.lang.Class < extends extends = if instanceof = < extends extends else if instanceof decl_stmt java.lang.String = = < extends extends else throw new + + if ! throw new + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() + call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class)