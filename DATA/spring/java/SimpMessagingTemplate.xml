org.springframework.messaging.simp java.util.Map import org.springframework.messaging.Message import org.springframework.messaging.MessageChannel import org.springframework.messaging.MessageDeliveryException import org.springframework.messaging.MessageHeaders import org.springframework.messaging.MessagingException import org.springframework.messaging.core.AbstractMessageSendingTemplate import org.springframework.messaging.core.MessagePostProcessor import org.springframework.messaging.support.MessageBuilder import org.springframework.messaging.support.MessageHeaderAccessor import org.springframework.messaging.support.MessageHeaderInitializer import org.springframework.messaging.support.NativeMessageHeaderAccessor import org.springframework.util.Assert import org.springframework.util.StringUtils import class org.springframework.messaging.simp.SimpMessagingTemplate super super extends super implements long MessageHeaderInitializer MessageChannel String public public return public public = : + public public return public public = public public return public public = public public return String public public < decl_stmt java.lang.String = if != return SimpMessageHeaderAccessor protected protected < decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = if != if call SimpMessageHeaderAccessor.isMutable() call SimpMessageHeaderAccessor.isMutable() call SimpMessageHeaderAccessor.isMutable() call SimpMessageHeaderAccessor.isMutable() call SimpMessageHeaderAccessor.isMutable() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call SimpMessageHeaderAccessor.setImmutable() call SimpMessageHeaderAccessor.setImmutable() call SimpMessageHeaderAccessor.setImmutable() call SimpMessageHeaderAccessor.setImmutable() call SimpMessageHeaderAccessor.setImmutable() return else = else = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setMessageTypeIfNotSet(SimpMessageType) = call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() String boolean long private private < decl_stmt java.lang.String = decl_stmt long = decl_stmt boolean = >= : if ! throw new + + + private private if != public public throws public public < throws public public throws public public < throws = + + SimpMessageHeaderAccessor SimpMessageHeaderAccessor Object protected < protected < < if == decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() if return if instanceof decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = if != return decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = for : decl_stmt java.lang.Object = call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() call SimpMessageHeaderAccessor.setNativeHeader() != call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() : return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders()