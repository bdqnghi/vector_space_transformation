org.springframework.messaging.simp.annotation.support org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.MethodParameter import org.springframework.messaging.Message import org.springframework.messaging.MessageHeaders import org.springframework.messaging.core.MessageSendingOperations import org.springframework.messaging.handler.annotation.SendTo import org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.simp.SimpMessagingTemplate import org.springframework.messaging.simp.annotation.SendToUser import org.springframework.messaging.simp.annotation.SubscribeMapping import org.springframework.messaging.support.MessageHeaderInitializer import org.springframework.util.Assert import class org.springframework.messaging.simp.annotation.support.SubscriptionMethodReturnValueHandler super super implements MessageHeaderInitializer Log decl MessageSendingOperations public public = public public return public public return && ! && ! MessageHeaders String String String MessageHeaders public public < throws if == return decl_stmt org.springframework.messaging.MessageHeaders = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if == throw new + + + if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + decl_stmt org.springframework.messaging.MessageHeaders = SimpMessageHeaderAccessor private private decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = if != call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSubscriptionId(String) call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders()