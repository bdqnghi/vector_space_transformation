org.springframework.jdbc.support.lob java.io.ByteArrayInputStream import java.io.InputStream import java.io.InputStreamReader import java.io.Reader import java.io.StringReader import java.io.UnsupportedEncodingException import java.sql.Blob import java.sql.Clob import java.sql.PreparedStatement import java.sql.ResultSet import java.sql.SQLException import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import class org.springframework.jdbc.support.lob.DefaultLobHandler super super extends boolean Log boolean boolean public public = public public = public public = Blob public public throws call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() if decl_stmt java.sql.Blob = return call java.sql.Blob.getBytes(long,int) call java.sql.Blob.getBytes(long,int) call java.sql.Blob.getBytes(long,int) call java.sql.Blob.getBytes(long,int) call java.sql.Blob.getBytes(long,int) int call Blob.length() call Blob.length() call Blob.length() call Blob.length() call Blob.length() else return Blob public public throws call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() if decl_stmt java.sql.Blob = return call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) else return Clob public public throws call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() if decl_stmt java.sql.Clob = return call Clob.getSubString() call Clob.getSubString() call Clob.getSubString() call Clob.getSubString() call Clob.getSubString() int call java.sql.Clob.length() call java.sql.Clob.length() call java.sql.Clob.length() call java.sql.Clob.length() call java.sql.Clob.length() else return Clob public public throws call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() if decl_stmt java.sql.Clob = return call java.sql.Clob.getAsciiStream() call java.sql.Clob.getAsciiStream() call java.sql.Clob.getAsciiStream() call java.sql.Clob.getAsciiStream() call java.sql.Clob.getAsciiStream() else return Clob public public throws call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() if decl_stmt java.sql.Clob = return call java.sql.Clob.getCharacterStream(long,long) call java.sql.Clob.getCharacterStream(long,long) call java.sql.Clob.getCharacterStream(long,long) call java.sql.Clob.getCharacterStream(long,long) call java.sql.Clob.getCharacterStream(long,long) else return public public return new : new public public throws if if != new else else if if != new else else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() != + : public public throws if if != if >= else else else if if != new else else if >= else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() != + : public public throws if if != new else else if if != new else else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() != + : Reader public public throws if if != try decl_stmt java.io.Reader = new if >= else catch throw new + else else if if != new else else if >= else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() != + : public public throws if if != if >= else else else if if != new else else if >= else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() != + : public public