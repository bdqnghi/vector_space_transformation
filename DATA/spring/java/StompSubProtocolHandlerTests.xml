org.springframework.web.socket.messaging java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.HashSet import java.util.List import java.util.concurrent.atomic.AtomicReference import org.junit.Before import org.junit.Test import org.mockito.ArgumentCaptor import org.mockito.Mockito import org.springframework.context.ApplicationEvent import org.springframework.context.ApplicationEventPublisher import org.springframework.context.PayloadApplicationEvent import org.springframework.messaging.Message import org.springframework.messaging.MessageChannel import org.springframework.messaging.simp.SimpAttributes import org.springframework.messaging.simp.SimpAttributesContextHolder import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.simp.TestPrincipal import org.springframework.messaging.simp.stomp.StompCommand import org.springframework.messaging.simp.stomp.StompEncoder import org.springframework.messaging.simp.stomp.StompHeaderAccessor import org.springframework.messaging.simp.user.DestinationUserNameProvider import org.springframework.messaging.support.ChannelInterceptorAdapter import org.springframework.messaging.support.ExecutorSubscribableChannel import org.springframework.messaging.support.ImmutableMessageChannelInterceptor import org.springframework.messaging.support.MessageBuilder import org.springframework.messaging.support.MessageHeaderAccessor import org.springframework.util.MimeTypeUtils import org.springframework.web.socket.BinaryMessage import org.springframework.web.socket.CloseStatus import org.springframework.web.socket.TextMessage import org.springframework.web.socket.WebSocketMessage import org.springframework.web.socket.handler.TestWebSocketSession import org.springframework.web.socket.sockjs.transport.SockJsSession import static static org.hamcrest.Matchers.is import static static org.junit.Assert.assertArrayEquals import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertFalse import static static org.junit.Assert.assertNotNull import static static org.junit.Assert.assertThat import static static org.junit.Assert.assertTrue import static static org.mockito.Matchers.any import static static org.mockito.Mockito.mock import static static org.mockito.Mockito.reset import static static org.mockito.Mockito.times import static static org.mockito.Mockito.verify import static static org.mockito.Mockito.verifyNoMoreInteractions import static static org.mockito.Mockito.verifyZeroInteractions import static static org.mockito.Mockito.when import class org.springframework.web.socket.messaging.StompSubProtocolHandlerTests decl ArgumentCaptor TestWebSocketSession decl byte MessageChannel StompSubProtocolHandler public public = new = = = new new StompHeaderAccessor decl Message decl WebSocketMessage public public decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.WebSocketMessage < = + + + call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() StompHeaderAccessor decl Message decl WebSocketMessage public public new decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.WebSocketMessage < = + + + call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() decl Message decl Message TextMessage StompHeaderAccessor SimpMessageHeaderAccessor public public decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() new decl_stmt org.springframework.messaging.Message < = call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.TextMessage = + + + + + call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() decl Message decl Message TextMessage StompHeaderAccessor SimpMessageHeaderAccessor public public decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setAcceptVersion(String) decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() decl_stmt org.springframework.messaging.Message < = call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.TextMessage = + + + + + call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() decl Message TextMessage SimpMessageHeaderAccessor public public decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setUser(Principal) new decl_stmt org.springframework.messaging.Message < = call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() decl Message StompHeaderAccessor SockJsSession public public throws decl_stmt org.springframework.web.socket.sockjs.transport.SockJsSession = decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() = = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setHeartbeat(long,long) = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() StompHeaderAccessor decl Message decl WebSocketMessage public public decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call StompHeaderAccessor.setNativeHeader() call StompHeaderAccessor.setNativeHeader() call StompHeaderAccessor.setNativeHeader() call StompHeaderAccessor.setNativeHeader() call StompHeaderAccessor.setNativeHeader() decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.WebSocketMessage < = call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() call decl WebSocketMessage.getPayload() StompHeaderAccessor decl Message decl byte decl WebSocketMessage public public decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setMessageId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setSubscriptionId(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) decl_stmt byte = new decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.WebSocketMessage < = instanceof = = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() = instanceof TextMessage StompHeaderAccessor decl Message public public decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.messaging.Message < = call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() new call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getLogin() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getLogin() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getLogin() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getLogin() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getLogin() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getPasscode(Map) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getPasscode(Map) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getPasscode(Map) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getPasscode(Map) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getPasscode(Map) new call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getHeartbeat() new <> call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getAcceptVersion() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getAcceptVersion() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getAcceptVersion() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getAcceptVersion() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getAcceptVersion() decl AtomicReference TextMessage StompSubProtocolHandler ExecutorSubscribableChannel public public decl_stmt java.util.concurrent.atomic.AtomicReference < = new <> decl_stmt org.springframework.messaging.support.ExecutorSubscribableChannel = new call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) new public < public < < call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() return call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) new decl_stmt org.springframework.web.socket.messaging.StompSubProtocolHandler = new call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) decl_stmt org.springframework.web.socket.TextMessage = call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() public < public < < return decl AtomicReference TextMessage StompSubProtocolHandler ExecutorSubscribableChannel public public decl_stmt java.util.concurrent.atomic.AtomicReference < = new <> decl_stmt org.springframework.messaging.support.ExecutorSubscribableChannel = new call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) call org.springframework.messaging.support.ExecutorSubscribableChannel.addInterceptor(ChannelInterceptor) new public < public < < call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() return decl_stmt org.springframework.web.socket.messaging.StompSubProtocolHandler = new call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.afterSessionStarted(WebSocketSession,MessageChannel) decl_stmt org.springframework.web.socket.TextMessage = call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call org.springframework.web.socket.messaging.StompSubProtocolHandler.handleMessageFromClient(WebSocketSession,WebSocketMessage,MessageChannel) call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() public < public < < return TextMessage TextMessage public public decl_stmt org.springframework.web.socket.TextMessage = new decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() TestPublisher decl Message TextMessage StompHeaderAccessor public public decl_stmt TestPublisher = new decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.TextMessage = new new = = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() = = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() = new new = = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() = new new + call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() call TestPublisher.events() ApplicationEventPublisher decl Message StompHeaderAccessor TextMessage decl Message StompHeaderAccessor public public decl_stmt org.springframework.context.ApplicationEventPublisher = decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.TextMessage = new new decl_stmt org.springframework.messaging.Message < = = = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() = + + + call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() = decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call StompHeaderAccessor.getSessionId() call StompHeaderAccessor.getSessionId() call StompHeaderAccessor.getSessionId() call StompHeaderAccessor.getSessionId() call StompHeaderAccessor.getSessionId() call StompHeaderAccessor.getUser() call StompHeaderAccessor.getUser() call StompHeaderAccessor.getUser() call StompHeaderAccessor.getUser() call StompHeaderAccessor.getUser() Runnable MessageChannel StompHeaderAccessor SimpAttributes TextMessage decl Message public public decl_stmt java.lang.Runnable = decl_stmt org.springframework.messaging.simp.SimpAttributes = new call org.springframework.messaging.simp.SimpAttributes.setAttribute(String,Object) call org.springframework.messaging.simp.SimpAttributes.setAttribute(String,Object) call org.springframework.messaging.simp.SimpAttributes.setAttribute(String,Object) call org.springframework.messaging.simp.SimpAttributes.setAttribute(String,Object) call org.springframework.messaging.simp.SimpAttributes.setAttribute(String,Object) call SimpAttributes.registerDestructionCallback() call SimpAttributes.registerDestructionCallback() call SimpAttributes.registerDestructionCallback() call SimpAttributes.registerDestructionCallback() call SimpAttributes.registerDestructionCallback() decl_stmt org.springframework.messaging.MessageChannel = new public public < decl_stmt org.springframework.messaging.simp.SimpAttributes = call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) return public public < return decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.Message < = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.web.socket.TextMessage = new new < > , call org.springframework.web.socket.handler.TestWebSocketSession.getSentMessages() call org.springframework.web.socket.handler.TestWebSocketSession.getSentMessages() call org.springframework.web.socket.handler.TestWebSocketSession.getSentMessages() call org.springframework.web.socket.handler.TestWebSocketSession.getSentMessages() call org.springframework.web.socket.handler.TestWebSocketSession.getSentMessages() < > , SimpAttributes public public < decl_stmt org.springframework.messaging.simp.SimpAttributes = call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) call org.springframework.messaging.simp.SimpAttributes.getAttribute(String) return public public < return public public return public public public public new <