org.springframework.jms.connection javax.jms.Connection import javax.jms.ConnectionFactory import javax.jms.JMSException import javax.jms.QueueConnection import javax.jms.QueueConnectionFactory import javax.jms.QueueSession import javax.jms.Session import javax.jms.TopicConnection import javax.jms.TopicConnectionFactory import javax.jms.TopicSession import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.transaction.support.ResourceHolderSynchronization import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.util.Assert import class org.springframework.jms.connection.ConnectionFactoryUtils Log public static public static if == return if && instanceof && try catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() try catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() Session public static public static decl_stmt sun.security.pkcs11.Session = while instanceof = return JmsResourceHolder public static public static if == || == return decl_stmt org.springframework.jms.connection.JmsResourceHolder = return != && call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) public static public static final final final final final final throws return new public public return public public return != : public public throws return public public throws return public public return public public return public public return != : public public throws return public public throws return public public return public static public static final final final final final final throws return new public public return public public return != : public public throws return public public throws return public public return public public return public public return != : public public throws return public public throws return public public return public static public static final final final final final final throws return new public public return public public return != : public public throws return public public throws return public public return public public return public public return != : public public throws return public public throws return public public return public static public static throws return JmsResourceHolder JmsResourceHolder Session boolean Connection public static public static throws decl_stmt org.springframework.jms.connection.JmsResourceHolder = if != decl_stmt sun.security.pkcs11.Session = if != if decl_stmt sun.rmi.transport.Connection = if != call Connection.start() call Connection.start() call Connection.start() call Connection.start() call Connection.start() return if call org.springframework.jms.connection.JmsResourceHolder.isFrozen() call org.springframework.jms.connection.JmsResourceHolder.isFrozen() call org.springframework.jms.connection.JmsResourceHolder.isFrozen() call org.springframework.jms.connection.JmsResourceHolder.isFrozen() call org.springframework.jms.connection.JmsResourceHolder.isFrozen() return if ! return decl_stmt org.springframework.jms.connection.JmsResourceHolder = if == = new decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session = try decl_stmt boolean = != if ! = call org.springframework.jms.connection.JmsResourceHolder.addConnection(Connection) call org.springframework.jms.connection.JmsResourceHolder.addConnection(Connection) call org.springframework.jms.connection.JmsResourceHolder.addConnection(Connection) call org.springframework.jms.connection.JmsResourceHolder.addConnection(Connection) call org.springframework.jms.connection.JmsResourceHolder.addConnection(Connection) = call org.springframework.jms.connection.JmsResourceHolder.addSession(Session) call org.springframework.jms.connection.JmsResourceHolder.addSession(Session) call org.springframework.jms.connection.JmsResourceHolder.addSession(Session) call org.springframework.jms.connection.JmsResourceHolder.addSession(Session) call org.springframework.jms.connection.JmsResourceHolder.addSession(Session) if call Connection.start() call Connection.start() call Connection.start() call Connection.start() call Connection.start() catch if != try call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() catch if != try call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() catch throw if != new call JmsResourceHolder.setSynchronizedWithTransaction() call JmsResourceHolder.setSynchronizedWithTransaction() call JmsResourceHolder.setSynchronizedWithTransaction() call JmsResourceHolder.setSynchronizedWithTransaction() call JmsResourceHolder.setSynchronizedWithTransaction() return protected protected return ! protected protected try catch throw new protected protected