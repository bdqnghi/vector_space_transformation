org.springframework.transaction.interceptor java.lang.reflect.Method import java.lang.reflect.Proxy import java.util.Map import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.junit.Before import org.junit.Test import org.springframework.aop.support.AopUtils import org.springframework.aop.support.StaticMethodMatcherPointcut import org.springframework.aop.target.HotSwappableTargetSource import org.springframework.beans.FatalBeanException import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.core.io.ClassPathResource import org.springframework.tests.sample.beans.DerivedTestBean import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import org.springframework.tests.transaction.CallCountingTransactionManager import org.springframework.transaction.PlatformTransactionManager import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionException import org.springframework.transaction.TransactionStatus import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.transaction.interceptor.BeanFactoryTransactionTests DefaultListableBeanFactory public public = new new new ITestBean public public throws decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() instanceof ITestBean public public throws decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() call ITestBean.getClass() instanceof ITestBean public public throws decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) instanceof ITestBean public public throws decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() call DefaultListableBeanFactory.containsSingleton() String CallCountingTransactionManager ImplementsNoInterfaces public public throws decl_stmt org.springframework.transaction.interceptor.ImplementsNoInterfaces = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) instanceof decl_stmt java.lang.String = decl_stmt org.springframework.tests.transaction.CallCountingTransactionManager = new = call ImplementsNoInterfaces.setName() call ImplementsNoInterfaces.setName() call ImplementsNoInterfaces.setName() call ImplementsNoInterfaces.setName() call ImplementsNoInterfaces.setName() call org.springframework.transaction.interceptor.ImplementsNoInterfaces.getName() call org.springframework.transaction.interceptor.ImplementsNoInterfaces.getName() call org.springframework.transaction.interceptor.ImplementsNoInterfaces.getName() call org.springframework.transaction.interceptor.ImplementsNoInterfaces.getName() call org.springframework.transaction.interceptor.ImplementsNoInterfaces.getName() InvocationCounterPointcut ITestBean InvocationCounterInterceptor InvocationCounterInterceptor public public throws decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) instanceof instanceof decl_stmt InvocationCounterPointcut = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt InvocationCounterInterceptor = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt InvocationCounterInterceptor = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) = = = < && <= int PlatformTransactionManager boolean TransactionStatus private private final final decl_stmt org.springframework.transaction.PlatformTransactionManager = = + == decl_stmt org.springframework.transaction.TransactionStatus final final = = new decl_stmt boolean private public public throws if throw new = if ! && throw new + return public public throws == public public throws throw new = decl_stmt int = == public public throws if throw new = if ! && throw new + return public public throws == public public throws throw new decl Map public public decl_stmt java.util.Map < = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(Class) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(Class) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(Class) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(Class) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(Class) DefaultListableBeanFactory public public try decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) catch TestBean TestBean CallCountingTransactionManager HotSwappableTargetSource int public public throws decl_stmt org.springframework.tests.transaction.CallCountingTransactionManager = new = decl_stmt org.springframework.tests.sample.beans.TestBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() decl_stmt int = call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) decl_stmt org.springframework.aop.target.HotSwappableTargetSource = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.aop.target.HotSwappableTargetSource.swap(Object) call org.springframework.aop.target.HotSwappableTargetSource.swap(Object) call org.springframework.aop.target.HotSwappableTargetSource.swap(Object) call org.springframework.aop.target.HotSwappableTargetSource.swap(Object) call org.springframework.aop.target.HotSwappableTargetSource.swap(Object) call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() public public < ++ return public public throws ++ return