org.springframework.orm.jpa java.sql.SQLException import java.util.ArrayList import java.util.List import javax.persistence.EntityManager import javax.persistence.EntityManagerFactory import javax.persistence.EntityTransaction import javax.persistence.RollbackException import javax.sql.DataSource import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.transaction.InvalidIsolationLevelException import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionStatus import org.springframework.transaction.TransactionSystemException import org.springframework.transaction.support.TransactionCallback import org.springframework.transaction.support.TransactionCallbackWithoutResult import org.springframework.transaction.support.TransactionSynchronizationAdapter import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.transaction.support.TransactionTemplate import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class annotation org.springframework.orm.jpa.JpaTransactionManagerTests EntityManager JpaTransactionManager TransactionTemplate EntityManagerFactory EntityTransaction public public throws = = = = new = new call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() public public throws decl List Object public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! ! public public return decl List Object public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() new decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! try decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return catch instanceof ! ! public public return decl List public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public throw new catch ! ! public public throw new decl List public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public throw new catch ! ! public public throw new decl List public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! ! public public return decl List public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! ! public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return public public return decl List public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public throw new catch ! ! public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public throw new public public throw new decl List public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() call EntityTransaction.getRollbackOnly() new decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return catch instanceof ! ! public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return public public return decl List Object public public call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! ! public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return public public return decl List Object public public call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! new try decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return finally ! ! public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return public public return TransactionTemplate decl List Object public public call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! ! TransactionTemplate public public decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return public public return TransactionTemplate decl List Object public public call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! ! TransactionTemplate public public decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return public public return EntityManager EntityTransaction public public call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt EntityManager = decl_stmt EntityTransaction = call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public new public public call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return return ! ! public public new public public call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return return public public call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return public public return decl List Object public public call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! return ! ! public public ! ! return public public call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! return ! ! public public ! ! return decl List Object public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! new try decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! finally public public return public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() call EntityTransaction.isActive() ! ! new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! finally public public return decl List Object public public decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! new try decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! return ! finally public public ! return public public call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! return ! finally public public ! return Object DataSource decl List public public throws decl_stmt javax.sql.DataSource = call org.springframework.orm.jpa.JpaTransactionManager.setDataSource(DataSource) call org.springframework.orm.jpa.JpaTransactionManager.setDataSource(DataSource) call org.springframework.orm.jpa.JpaTransactionManager.setDataSource(DataSource) call org.springframework.orm.jpa.JpaTransactionManager.setDataSource(DataSource) call org.springframework.orm.jpa.JpaTransactionManager.setDataSource(DataSource) call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() decl_stmt java.util.List final final final < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == ! ! public public return public public call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected catch protected protected public public call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! public public