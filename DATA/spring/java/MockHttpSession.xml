org.springframework.mock.web.test java.io.Serializable import java.util.Collections import java.util.Enumeration import java.util.HashMap import java.util.Iterator import java.util.LinkedHashMap import java.util.LinkedHashSet import java.util.Map import javax.servlet.ServletContext import javax.servlet.http.HttpSession import javax.servlet.http.HttpSessionBindingEvent import javax.servlet.http.HttpSessionBindingListener import org.springframework.util.Assert import class annotation org.springframework.mock.web.test.MockHttpSession super super implements boolean long int String boolean ServletContext decl Map int String long public public return public public return public public = ++ return public public = = public public return public public return public public = public public return public public throw new public public return public public return public < public < return new < public public return new public public if != if instanceof new else public public Object public public decl_stmt java.lang.Object = if instanceof new public public decl Map String Object public public for < < = decl_stmt java.util.Map < = decl_stmt java.lang.String = call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() decl_stmt java.lang.Object = call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() if instanceof new public public = public public return private private if throw new public public = public public return decl Map decl HashMap String Object public public decl_stmt HashMap < = new < for < < = decl_stmt java.util.Map < = decl_stmt java.lang.String = call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() decl_stmt java.lang.Object = call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() if instanceof call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() else if instanceof new return public public instanceof <