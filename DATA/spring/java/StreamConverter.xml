org.springframework.core.convert.support java.util.Collection import java.util.HashSet import java.util.List import java.util.Set import java.util.stream.Collectors import java.util.stream.Stream import org.springframework.core.convert.ConversionService import org.springframework.core.convert.TypeDescriptor import org.springframework.core.convert.converter.ConditionalGenericConverter import org.springframework.lang.UsesJava8 import class annotation org.springframework.core.convert.support.StreamConverter super super implements ConversionService TypeDescriptor decl Set public < public < return public public if return if return return TypeDescriptor public public decl_stmt org.springframework.core.convert.TypeDescriptor = return TypeDescriptor public public decl_stmt org.springframework.core.convert.TypeDescriptor = return public public if return < if return throw new decl List TypeDescriptor private private < decl_stmt java.util.List < = > decl_stmt org.springframework.core.convert.TypeDescriptor = return decl List TypeDescriptor private private decl_stmt org.springframework.core.convert.TypeDescriptor = decl_stmt java.util.List < = < return call decl List.stream() call decl List.stream() call decl List.stream() call decl List.stream() call decl List.stream() decl Set private static < private static < decl_stmt java.util.Set < = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new return