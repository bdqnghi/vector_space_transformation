org.springframework.context.support java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.Comparator import java.util.HashSet import java.util.LinkedList import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.config.BeanFactoryPostProcessor import org.springframework.beans.factory.config.BeanPostProcessor import org.springframework.beans.factory.config.ConfigurableListableBeanFactory import org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.ApplicationListener import org.springframework.context.event.ApplicationEventMulticaster import org.springframework.core.OrderComparator import org.springframework.core.Ordered import org.springframework.core.PriorityOrdered import class org.springframework.context.support.PostProcessorRegistrationDelegate decl List boolean decl List decl List BeanDefinitionRegistryPostProcessor decl Set decl String BeanDefinitionRegistryPostProcessor decl List BeanDefinitionRegistry decl List decl List decl List public static public static < decl_stmt java.util.Set < = new < if instanceof decl_stmt org.springframework.beans.factory.support.BeanDefinitionRegistry = decl_stmt java.util.List < = new < decl_stmt java.util.List < = new < for : if instanceof decl_stmt org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor = call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.lang.String = decl_stmt java.util.List < = new < for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() = decl_stmt java.util.List < = new < for : if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() && call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() decl_stmt boolean = while = = for : if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() decl_stmt org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() call BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry() = else decl_stmt java.lang.String = decl_stmt java.util.List < = new < decl_stmt java.util.List < = new < decl_stmt java.util.List < = new < for : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() else if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl List BeanPostProcessor decl List decl List decl String decl List int decl List decl List public static public static decl_stmt java.lang.String = decl_stmt int = + + new decl_stmt java.util.List < = new < decl_stmt java.util.List < = new < decl_stmt java.util.List < = new < decl_stmt java.util.List < = new < for : if decl_stmt org.springframework.beans.factory.config.BeanPostProcessor = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.List < = new < for : decl_stmt org.springframework.beans.factory.config.BeanPostProcessor = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.List < = new < for : decl_stmt org.springframework.beans.factory.config.BeanPostProcessor = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl Comparator private static private static < decl_stmt java.util.Comparator < = if instanceof = if == = private static private static < extends extends for : private static private static < extends extends for : private static private static < for : public public return public public if != && ! instanceof && ! && < if + + + + + return BeanDefinition private private if != && decl_stmt org.springframework.beans.factory.config.BeanDefinition = return == call org.springframework.beans.factory.config.BeanDefinition.getRole() call org.springframework.beans.factory.config.BeanDefinition.getRole() call org.springframework.beans.factory.config.BeanDefinition.getRole() call org.springframework.beans.factory.config.BeanDefinition.getRole() call org.springframework.beans.factory.config.BeanDefinition.getRole() return public public < if public public return Boolean public public if instanceof decl_stmt java.lang.Boolean = if < else if == if && ! + + + + + return ApplicationEventMulticaster public public if instanceof decl_stmt org.springframework.context.event.ApplicationEventMulticaster = call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListener(ApplicationListener) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListener(ApplicationListener) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListener(ApplicationListener) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListener(ApplicationListener) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListener(ApplicationListener) < call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListenerBean(String) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListenerBean(String) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListenerBean(String) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListenerBean(String) call org.springframework.context.event.ApplicationEventMulticaster.removeApplicationListenerBean(String) public public return instanceof