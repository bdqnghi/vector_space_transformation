org.springframework.context.annotation.jsr330 java.lang.annotation.ElementType import java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.lang.annotation.Target import javax.inject.Named import javax.inject.Singleton import org.junit.After import static static org.junit.Assert.* import org.junit.Before import org.junit.Test import org.springframework.aop.support.AopUtils import org.springframework.beans.factory.annotation.AnnotatedBeanDefinition import org.springframework.beans.factory.config.BeanDefinition import org.springframework.context.ApplicationContext import org.springframework.context.annotation.ClassPathBeanDefinitionScanner import org.springframework.context.annotation.ScopeMetadata import org.springframework.context.annotation.ScopeMetadataResolver import org.springframework.context.annotation.ScopedProxyMode import org.springframework.mock.web.MockHttpServletRequest import org.springframework.mock.web.MockHttpSession import org.springframework.web.context.request.RequestContextHolder import org.springframework.web.context.request.ServletRequestAttributes import org.springframework.web.context.support.GenericWebApplicationContext import class org.springframework.context.annotation.jsr330.ClassPathBeanDefinitionScannerJsr330ScopeIntegrationTests ServletRequestAttributes String ServletRequestAttributes ServletRequestAttributes String ServletRequestAttributes MockHttpServletRequest MockHttpServletRequest public public = new new = new new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) new = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) new = new public public throws ScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() ScopedTestBean ScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() call ApplicationContext.isSingleton() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ApplicationContext.isPrototype() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() ScopedTestBean ScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() ScopedTestBean ScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() ScopedTestBean ScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() IScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.context.annotation.scope.IScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() instanceof call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() IScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.context.annotation.scope.IScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() instanceof call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() ScopedTestBean ScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.setName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() decl_stmt ScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() call ScopedTestBean.getName() IScopedTestBean IScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.context.annotation.scope.IScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() instanceof call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) decl_stmt org.springframework.context.annotation.scope.IScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() IScopedTestBean IScopedTestBean ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.context.annotation.scope.IScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() instanceof instanceof call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) decl_stmt org.springframework.context.annotation.scope.IScopedTestBean = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.setName(String) call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() call org.springframework.context.annotation.scope.IScopedTestBean.getName() AnnotatedBeanDefinition ClassPathBeanDefinitionScanner GenericWebApplicationContext ScopeMetadata private private final final decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new decl_stmt org.springframework.context.annotation.ClassPathBeanDefinitionScanner = new call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setIncludeAnnotationConfig(boolean) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setIncludeAnnotationConfig(boolean) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setIncludeAnnotationConfig(boolean) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setIncludeAnnotationConfig(boolean) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setIncludeAnnotationConfig(boolean) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.setScopeMetadataResolver(ScopeMetadataResolver) new public public decl_stmt org.springframework.context.annotation.ScopeMetadata = new if instanceof decl_stmt org.springframework.beans.factory.annotation.AnnotatedBeanDefinition = for : call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() if call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) break else if call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) - - call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) break else if call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) return call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(String) call GenericWebApplicationContext.registerAlias() call GenericWebApplicationContext.registerAlias() call GenericWebApplicationContext.registerAlias() call GenericWebApplicationContext.registerAlias() call GenericWebApplicationContext.registerAlias() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return AnnotatedBeanDefinition ScopeMetadata public public decl_stmt org.springframework.context.annotation.ScopeMetadata = new if instanceof decl_stmt org.springframework.beans.factory.annotation.AnnotatedBeanDefinition = for : call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() if call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) break else if call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call AnnotatedBeanDefinition.getMetadata() call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) - - call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) call org.springframework.context.annotation.ScopeMetadata.setScopedProxyMode(ScopedProxyMode) break else if call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) call org.springframework.context.annotation.ScopeMetadata.setScopeName(String) return public public return public public =