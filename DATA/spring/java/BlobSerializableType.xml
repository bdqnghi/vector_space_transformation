org.springframework.orm.hibernate3.support java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.IOException import java.io.InputStream import java.io.ObjectInputStream import java.io.ObjectOutputStream import java.io.Serializable import java.sql.PreparedStatement import java.sql.ResultSet import java.sql.SQLException import java.sql.Types import javax.transaction.TransactionManager import org.hibernate.HibernateException import org.springframework.jdbc.support.lob.LobCreator import org.springframework.jdbc.support.lob.LobHandler import class annotation org.springframework.orm.hibernate3.support.BlobSerializableType super super extends int public public return new public < public < return public public return ByteArrayOutputStream ByteArrayInputStream ObjectInputStream ObjectOutputStream public public throws try decl_stmt java.io.ByteArrayOutputStream = new decl_stmt ObjectOutputStream = new try call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() finally call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() decl_stmt ByteArrayInputStream = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt ObjectInputStream = new try return call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() finally call ObjectInputStream.close() call ObjectInputStream.close() call ObjectInputStream.close() call ObjectInputStream.close() call ObjectInputStream.close() catch throw new catch throw new InputStream ObjectInputStream protected protected throws decl_stmt java.io.InputStream = if != decl_stmt ObjectInputStream = new try return call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() catch throw new finally call ObjectInputStream.close() call ObjectInputStream.close() call ObjectInputStream.close() call ObjectInputStream.close() call ObjectInputStream.close() else return ByteArrayOutputStream ObjectOutputStream protected protected throws if != decl_stmt java.io.ByteArrayOutputStream = new decl_stmt ObjectOutputStream = new try call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.flush() call ObjectOutputStream.flush() call ObjectOutputStream.flush() call ObjectOutputStream.flush() call ObjectOutputStream.flush() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() finally call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() else