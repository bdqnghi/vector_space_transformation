org.springframework.cache.jcache.config java.io.IOException import java.util.Arrays import java.util.Map import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.cache.Cache import org.springframework.cache.CacheManager import org.springframework.cache.annotation.EnableCaching import org.springframework.cache.concurrent.ConcurrentMapCache import org.springframework.cache.interceptor.CacheOperationInvoker import org.springframework.cache.jcache.interceptor.AnnotatedJCacheableService import org.springframework.cache.jcache.interceptor.JCacheInterceptor import org.springframework.cache.jcache.interceptor.JCacheOperationSource import org.springframework.cache.support.SimpleCacheManager import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import static static org.junit.Assert.* import class org.springframework.cache.jcache.config.JCacheCustomInterceptorTests decl JCacheableService ConfigurableApplicationContext Cache public public = new = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() public public call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() JCacheInterceptor decl Map public public decl_stmt java.util.Map < = call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() decl_stmt org.springframework.cache.jcache.interceptor.JCacheInterceptor = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call JCacheInterceptor.getClass() call JCacheInterceptor.getClass() call JCacheInterceptor.getClass() call JCacheInterceptor.getClass() call JCacheInterceptor.getClass() Object public public decl_stmt java.lang.Object = call decl JCacheableService.cacheWithException() call decl JCacheableService.cacheWithException() call decl JCacheableService.cacheWithException() call decl JCacheableService.cacheWithException() call decl JCacheableService.cacheWithException() public public try call decl JCacheableService.cacheWithCheckedException() call decl JCacheableService.cacheWithCheckedException() call decl JCacheableService.cacheWithCheckedException() call decl JCacheableService.cacheWithCheckedException() call decl JCacheableService.cacheWithCheckedException() catch catch + SimpleCacheManager public public decl_stmt org.springframework.cache.support.SimpleCacheManager = new call SimpleCacheManager.setCaches() call SimpleCacheManager.setCaches() call SimpleCacheManager.setCaches() call SimpleCacheManager.setCaches() call SimpleCacheManager.setCaches() return public < public < return new public public return new public public return new JCacheInterceptor public public decl_stmt org.springframework.cache.jcache.interceptor.JCacheInterceptor = new call JCacheInterceptor.setCacheOperationSource() call JCacheInterceptor.setCacheOperationSource() call JCacheInterceptor.setCacheOperationSource() call JCacheInterceptor.setCacheOperationSource() call JCacheInterceptor.setCacheOperationSource() return Throwable protected protected try return catch decl_stmt java.lang.Throwable = if call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() == return else throw new new