org.springframework.web.servlet.mvc.method.annotation java.lang.reflect.Method import java.util.Arrays import java.util.EnumSet import java.util.List import org.junit.Before import org.junit.Test import org.mockito.Mockito import org.springframework.beans.ConversionNotSupportedException import org.springframework.beans.TypeMismatchException import org.springframework.core.MethodParameter import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.http.HttpStatus import org.springframework.http.MediaType import org.springframework.http.ResponseEntity import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.http.converter.HttpMessageNotWritableException import org.springframework.http.server.ServletServerHttpRequest import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.validation.BindException import org.springframework.web.HttpMediaTypeNotAcceptableException import org.springframework.web.HttpMediaTypeNotSupportedException import org.springframework.web.HttpRequestMethodNotSupportedException import org.springframework.web.bind.MethodArgumentNotValidException import org.springframework.web.bind.MissingPathVariableException import org.springframework.web.bind.MissingServletRequestParameterException import org.springframework.web.bind.ServletRequestBindingException import org.springframework.web.bind.annotation.ControllerAdvice import org.springframework.web.bind.annotation.ExceptionHandler import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.context.request.WebRequest import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.multipart.support.MissingServletRequestPartException import org.springframework.web.servlet.NoHandlerFoundException import org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException import org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver import static static org.junit.Assert.* import class org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandlerTests ResponseEntityExceptionHandler MockHttpServletRequest DefaultHandlerExceptionResolver WebRequest MockHttpServletResponse public public = new = new = new = new = new String Method decl List ExceptionHandler decl Class public public throws decl_stmt java.lang.Class < = decl_stmt com.sun.jdi.Method = call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() decl_stmt ExceptionHandler = call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) decl_stmt java.util.List < < = call ExceptionHandler.value() call ExceptionHandler.value() call ExceptionHandler.value() call ExceptionHandler.value() call ExceptionHandler.value() for : if && == decl_stmt java.lang.String = + call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() Exception public public decl_stmt Exception = new decl List Exception decl ResponseEntity public public decl_stmt java.util.List < = decl_stmt Exception = new decl_stmt org.springframework.http.ResponseEntity < = call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() decl List Exception decl ResponseEntity public public decl_stmt java.util.List < = decl_stmt Exception = new decl_stmt org.springframework.http.ResponseEntity < = call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() Exception public public decl_stmt Exception = new MethodParameter Method Exception public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.core.MethodParameter = new decl_stmt Exception = new Exception public public decl_stmt Exception = new Exception public public decl_stmt Exception = new Exception public public decl_stmt Exception = new new Exception public public decl_stmt Exception = new Exception public public decl_stmt Exception = new Exception public public decl_stmt Exception = new Exception public public decl_stmt Exception = Exception public public decl_stmt Exception = new Exception public public decl_stmt Exception = new new ServletServerHttpRequest Exception public public decl_stmt org.springframework.http.server.ServletServerHttpRequest = new new decl_stmt Exception = new call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() StaticWebApplicationContext ServletRequestBindingException ExceptionHandlerExceptionResolver public public throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver = new call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.setApplicationContext(ApplicationContext) call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.setApplicationContext(ApplicationContext) call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.setApplicationContext(ApplicationContext) call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.setApplicationContext(ApplicationContext) call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.setApplicationContext(ApplicationContext) call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet() call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet() call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet() call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet() call org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet() decl_stmt ServletRequestBindingException = new call ExceptionHandlerExceptionResolver.resolveException() call ExceptionHandlerExceptionResolver.resolveException() call ExceptionHandlerExceptionResolver.resolveException() call ExceptionHandlerExceptionResolver.resolveException() call ExceptionHandlerExceptionResolver.resolveException() decl ResponseEntity private < private < decl_stmt org.springframework.http.ResponseEntity < = if call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() return protected < protected < return