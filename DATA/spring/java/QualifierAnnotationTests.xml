org.springframework.beans.factory.xml java.lang.annotation.ElementType import java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.lang.annotation.Target import java.util.Properties import org.junit.Test import org.springframework.beans.factory.BeanCreationException import org.springframework.beans.factory.FactoryBean import org.springframework.beans.factory.annotation.Autowired import org.springframework.beans.factory.annotation.Qualifier import org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver import org.springframework.beans.factory.support.AutowireCandidateQualifier import org.springframework.beans.factory.support.BeanDefinitionReader import org.springframework.beans.factory.support.GenericBeanDefinition import org.springframework.context.support.StaticApplicationContext import static static java.lang.String.format import static static org.junit.Assert.* import static static org.springframework.util.ClassUtils.* import class org.springframework.beans.factory.xml.QualifierAnnotationTests String String String String StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch Person QualifiedByValueTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByValueTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByValueTestBean.getLarry() call QualifiedByValueTestBean.getLarry() call QualifiedByValueTestBean.getLarry() call QualifiedByValueTestBean.getLarry() call QualifiedByValueTestBean.getLarry() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() StaticApplicationContext Person GenericBeanDefinition StaticApplicationContext BeanDefinitionReader QualifiedByParentValueTestBean GenericBeanDefinition public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.getPropertyValues() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() call GenericBeanDefinition.addQualifier() new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByParentValueTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByParentValueTestBean.getLarry() call QualifiedByParentValueTestBean.getLarry() call QualifiedByParentValueTestBean.getLarry() call QualifiedByParentValueTestBean.getLarry() call QualifiedByParentValueTestBean.getLarry() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person QualifiedByBeanNameTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByBeanNameTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByBeanNameTestBean.getLarry() call QualifiedByBeanNameTestBean.getLarry() call QualifiedByBeanNameTestBean.getLarry() call QualifiedByBeanNameTestBean.getLarry() call QualifiedByBeanNameTestBean.getLarry() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() != && call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() call QualifiedByBeanNameTestBean.myProps() Person QualifiedByFieldNameTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByFieldNameTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByFieldNameTestBean.getLarry() call QualifiedByFieldNameTestBean.getLarry() call QualifiedByFieldNameTestBean.getLarry() call QualifiedByFieldNameTestBean.getLarry() call QualifiedByFieldNameTestBean.getLarry() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person QualifiedByParameterNameTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByParameterNameTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByParameterNameTestBean.getLarry() call QualifiedByParameterNameTestBean.getLarry() call QualifiedByParameterNameTestBean.getLarry() call QualifiedByParameterNameTestBean.getLarry() call QualifiedByParameterNameTestBean.getLarry() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person QualifiedByAliasTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByAliasTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByAliasTestBean.getStooge() call QualifiedByAliasTestBean.getStooge() call QualifiedByAliasTestBean.getStooge() call QualifiedByAliasTestBean.getStooge() call QualifiedByAliasTestBean.getStooge() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person QualifiedByAnnotationTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByAnnotationTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByAnnotationTestBean.getLarry() call QualifiedByAnnotationTestBean.getLarry() call QualifiedByAnnotationTestBean.getLarry() call QualifiedByAnnotationTestBean.getLarry() call QualifiedByAnnotationTestBean.getLarry() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person QualifiedByCustomValueTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByCustomValueTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByCustomValueTestBean.getCurly() call QualifiedByCustomValueTestBean.getCurly() call QualifiedByCustomValueTestBean.getCurly() call QualifiedByCustomValueTestBean.getCurly() call QualifiedByCustomValueTestBean.getCurly() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() Person QualifiedByAnnotationValueTestBean StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt QualifiedByAnnotationValueTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call QualifiedByAnnotationValueTestBean.getLarry() call QualifiedByAnnotationValueTestBean.getLarry() call QualifiedByAnnotationValueTestBean.getLarry() call QualifiedByAnnotationValueTestBean.getLarry() call QualifiedByAnnotationValueTestBean.getLarry() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch MultiQualifierClient QualifierAnnotationAutowireCandidateResolver StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) decl_stmt org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver = call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.addQualifierType(Class) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt MultiQualifierClient = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() StaticApplicationContext BeanDefinitionReader public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.support.BeanDefinitionReader = new call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) call org.springframework.beans.factory.support.BeanDefinitionReader.loadBeanDefinitions(String) public public return public public return public public return public public return public public return public public = public public return public public return public public return public public return public public return public public return public public return public public return public public = public public return new public < public < return public public return