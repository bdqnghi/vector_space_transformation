org.springframework.remoting.rmi java.lang.reflect.AccessibleObject import java.lang.reflect.Constructor import java.lang.reflect.Method import java.rmi.ConnectException import java.rmi.ConnectIOException import java.rmi.MarshalException import java.rmi.NoSuchObjectException import java.rmi.Remote import java.rmi.RemoteException import java.rmi.StubNotFoundException import java.rmi.UnknownHostException import java.rmi.UnmarshalException import org.aopalliance.intercept.MethodInvocation import org.junit.Test import org.springframework.remoting.RemoteAccessException import org.springframework.remoting.RemoteConnectFailureException import org.springframework.remoting.RemoteProxyFailureException import org.springframework.remoting.support.RemoteInvocation import static static org.junit.Assert.* import class org.springframework.remoting.rmi.RmiSupportTests CountingRmiProxyFactoryBean IRemoteBean public public throws decl_stmt CountingRmiProxyFactoryBean = new call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.isSingleton() call CountingRmiProxyFactoryBean.isSingleton() call CountingRmiProxyFactoryBean.isSingleton() call CountingRmiProxyFactoryBean.isSingleton() call CountingRmiProxyFactoryBean.isSingleton() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof decl_stmt IRemoteBean = call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() public public throws public public throws public public throws public public throws public public throws public public throws public public throws public public throws CountingRmiProxyFactoryBean IRemoteBean private private < throws decl_stmt CountingRmiProxyFactoryBean = new call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof decl_stmt IRemoteBean = call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() try call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() + catch if else throw public public throws public public throws public public throws public public throws public public throws CountingRmiProxyFactoryBean IRemoteBean private private < throws decl_stmt CountingRmiProxyFactoryBean = new call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof decl_stmt IRemoteBean = call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() try call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() call IRemoteBean.setName() + catch if else throw CountingRmiProxyFactoryBean IBusinessBean public public throws decl_stmt CountingRmiProxyFactoryBean = new call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.remoting.rmi.IBusinessBean = call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() CountingRmiProxyFactoryBean IWrongBusinessBean public public throws decl_stmt CountingRmiProxyFactoryBean = new call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof decl_stmt IWrongBusinessBean = call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof try call IWrongBusinessBean.setOtherName() call IWrongBusinessBean.setOtherName() call IWrongBusinessBean.setOtherName() call IWrongBusinessBean.setOtherName() call IWrongBusinessBean.setOtherName() catch instanceof public public throws public public throws public public throws public public throws public public throws public public throws CountingRmiProxyFactoryBean IBusinessBean private private < < throws decl_stmt CountingRmiProxyFactoryBean = new call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.remoting.rmi.IBusinessBean = call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof try call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() + catch if else throw public public throws public public throws public public throws public public throws public public throws public public throws CountingRmiProxyFactoryBean IBusinessBean private private < < throws decl_stmt CountingRmiProxyFactoryBean = new call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceInterface() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setServiceUrl() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.setRefreshStubOnConnectFailure() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.afterPropertiesSet() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof decl_stmt org.springframework.remoting.rmi.IBusinessBean = call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() call CountingRmiProxyFactoryBean.getObject() instanceof try call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() call IBusinessBean.setName() + catch if else throw if else RmiClientInterceptor public public throws decl_stmt org.springframework.remoting.rmi.RmiClientInterceptor = new call RmiClientInterceptor.setServiceInterface() call RmiClientInterceptor.setServiceInterface() call RmiClientInterceptor.setServiceInterface() call RmiClientInterceptor.setServiceInterface() call RmiClientInterceptor.setServiceInterface() try call RmiClientInterceptor.afterPropertiesSet() call RmiClientInterceptor.afterPropertiesSet() call RmiClientInterceptor.afterPropertiesSet() call RmiClientInterceptor.afterPropertiesSet() call RmiClientInterceptor.afterPropertiesSet() catch RemoteInvocation Method MethodInvocation RemoteBean public public throws decl_stmt RemoteBean final final = new decl_stmt com.sun.jdi.Method final final = call RemoteBean.getClass() call RemoteBean.getClass() call RemoteBean.getClass() call RemoteBean.getClass() call RemoteBean.getClass() decl_stmt org.aopalliance.intercept.MethodInvocation = new public public return public public return new public public throws throw new public public return public public return decl_stmt org.springframework.remoting.support.RemoteInvocation = new call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getParameterTypes() call org.springframework.remoting.support.RemoteInvocation.getParameterTypes() call org.springframework.remoting.support.RemoteInvocation.getParameterTypes() call org.springframework.remoting.support.RemoteInvocation.getParameterTypes() call org.springframework.remoting.support.RemoteInvocation.getParameterTypes() = new call org.springframework.remoting.support.RemoteInvocation.setArguments(Object) call org.springframework.remoting.support.RemoteInvocation.setArguments(Object) call org.springframework.remoting.support.RemoteInvocation.setArguments(Object) call org.springframework.remoting.support.RemoteInvocation.setArguments(Object) call org.springframework.remoting.support.RemoteInvocation.setArguments(Object) new call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.getArguments() call org.springframework.remoting.support.RemoteInvocation.setMethodName(String) call org.springframework.remoting.support.RemoteInvocation.setMethodName(String) call org.springframework.remoting.support.RemoteInvocation.setMethodName(String) call org.springframework.remoting.support.RemoteInvocation.setMethodName(String) call org.springframework.remoting.support.RemoteInvocation.setMethodName(String) call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.getMethodName() call org.springframework.remoting.support.RemoteInvocation.setParameterTypes() call org.springframework.remoting.support.RemoteInvocation.setParameterTypes() call org.springframework.remoting.support.RemoteInvocation.setParameterTypes() call org.springframework.remoting.support.RemoteInvocation.setParameterTypes() call org.springframework.remoting.support.RemoteInvocation.setParameterTypes() new < public public return public public return new public public throws throw new public public return public public return