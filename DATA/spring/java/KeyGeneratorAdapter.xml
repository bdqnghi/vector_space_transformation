org.springframework.cache.jcache.interceptor java.lang.annotation.Annotation import java.lang.reflect.Method import java.util.ArrayList import java.util.List import javax.cache.annotation.CacheInvocationParameter import javax.cache.annotation.CacheKeyGenerator import javax.cache.annotation.CacheKeyInvocationContext import org.springframework.cache.interceptor.KeyGenerator import org.springframework.util.Assert import org.springframework.util.CollectionUtils import class org.springframework.cache.jcache.interceptor.KeyGeneratorAdapter super super implements KeyGenerator JCacheOperationSource CacheKeyGenerator public public return != : decl JCacheOperation decl CacheKeyInvocationContext public public decl_stmt org.springframework.cache.jcache.interceptor.JCacheOperation < = if ! throw new + decl_stmt CacheKeyInvocationContext < = if != return else return Object decl List private static private static < decl_stmt java.util.List < = new < for : decl_stmt java.lang.Object = if == - && call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() < else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call KeyGenerator.generate() call KeyGenerator.generate() call KeyGenerator.generate() call KeyGenerator.generate() call KeyGenerator.generate() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl AbstractJCacheKeyOperation private < private < < decl_stmt org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation < = < return new <