org.springframework.context.annotation java.util.LinkedHashSet import java.util.Set import org.springframework.beans.factory.annotation.AnnotatedBeanDefinition import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.config.BeanDefinitionHolder import org.springframework.beans.factory.support.AbstractBeanDefinition import org.springframework.beans.factory.support.BeanDefinitionDefaults import org.springframework.beans.factory.support.BeanDefinitionReaderUtils import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.beans.factory.support.BeanNameGenerator import org.springframework.core.env.Environment import org.springframework.core.env.EnvironmentCapable import org.springframework.core.env.StandardEnvironment import org.springframework.core.io.ResourceLoader import org.springframework.util.Assert import org.springframework.util.PatternMatchUtils import class org.springframework.context.annotation.ClassPathBeanDefinitionScanner super super extends BeanDefinitionDefaults BeanNameGenerator BeanDefinitionRegistry boolean ScopeMetadataResolver decl String public final public final return public public = != : new public public return public public = public public = != : new public public = != : new public public = new public public = int public public decl_stmt int = if return - BeanDefinitionHolder String decl Set ScopeMetadata decl Set protected < protected < decl_stmt java.util.Set < = new < for : decl_stmt java.util.Set < = for : decl_stmt org.springframework.context.annotation.ScopeMetadata = call ScopeMetadata.getScopeName() call ScopeMetadata.getScopeName() call ScopeMetadata.getScopeName() call ScopeMetadata.getScopeName() call ScopeMetadata.getScopeName() decl_stmt java.lang.String = if instanceof if instanceof if decl_stmt org.springframework.beans.factory.config.BeanDefinitionHolder = new = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return protected protected if != protected protected BeanDefinition BeanDefinition protected protected throws if ! return decl_stmt org.springframework.beans.factory.config.BeanDefinition = decl_stmt org.springframework.beans.factory.config.BeanDefinition = call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() if != = if return throw new + + + + + + call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() + protected protected return ! instanceof || || private static private static if instanceof return return new