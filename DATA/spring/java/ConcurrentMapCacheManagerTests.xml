org.springframework.cache.concurrent org.junit.Test import org.springframework.cache.Cache import org.springframework.cache.CacheManager import static static org.junit.Assert.* import class org.springframework.cache.concurrent.ConcurrentMapCacheManagerTests Cache CacheManager Cache Cache Cache Cache Cache public public decl_stmt org.springframework.cache.CacheManager = new decl_stmt org.springframework.cache.Cache = call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() instanceof decl_stmt org.springframework.cache.Cache = call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() decl_stmt org.springframework.cache.Cache = call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() instanceof decl_stmt org.springframework.cache.Cache = call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() decl_stmt org.springframework.cache.Cache = call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() instanceof decl_stmt org.springframework.cache.Cache = call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call CacheManager.getCache() call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.putIfAbsent(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) ConcurrentMapCacheManager Cache Cache Cache Cache Cache Cache Cache Cache Cache public public decl_stmt org.springframework.cache.concurrent.ConcurrentMapCacheManager = new decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) instanceof decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) instanceof decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) instanceof != decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) instanceof != decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) try call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) catch call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setAllowNullValues(boolean) decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) Cache Cache ConcurrentMapCacheManager public public decl_stmt org.springframework.cache.concurrent.ConcurrentMapCacheManager = new call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) instanceof call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setStoreByValue(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setStoreByValue(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setStoreByValue(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setStoreByValue(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.setStoreByValue(boolean) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCacheManager.isStoreByValue() decl_stmt org.springframework.cache.Cache = call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) call org.springframework.cache.concurrent.ConcurrentMapCacheManager.getCache(String) instanceof != call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class) call org.springframework.cache.Cache.get(Object,Class)