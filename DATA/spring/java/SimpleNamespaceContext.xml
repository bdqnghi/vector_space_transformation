org.springframework.util.xml java.util.Collections import java.util.HashMap import java.util.Iterator import java.util.LinkedHashSet import java.util.Map import java.util.Set import javax.xml.XMLConstants import javax.xml.namespace.NamespaceContext import org.springframework.util.Assert import class org.springframework.util.xml.SimpleNamespaceContext super super implements decl Map decl Map String public public if return else if return else if return else if return return decl Set public public decl_stmt java.util.Set < = return ! call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() : public < public < return decl Set private < private < if return else if return else if return else decl_stmt java.util.Set < = return != : > public public < for < : public public decl Set public public if = else decl_stmt java.util.Set < = if == = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl Set String public public if = else if != decl_stmt java.lang.String = if != decl_stmt java.util.Set < = if != call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() if call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() public public public < public < return