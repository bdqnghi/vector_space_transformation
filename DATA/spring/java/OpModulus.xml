org.springframework.expression.spel.ast java.math.BigDecimal import java.math.BigInteger import org.springframework.asm.MethodVisitor import org.springframework.expression.EvaluationException import org.springframework.expression.Operation import org.springframework.expression.TypedValue import org.springframework.expression.spel.CodeFlow import org.springframework.expression.spel.ExpressionState import org.springframework.util.NumberUtils import class org.springframework.expression.spel.ast.OpModulus super super extends BigInteger Object Number Number Object BigDecimal BigDecimal BigInteger public public throws decl_stmt java.lang.Object = decl_stmt java.lang.Object = if instanceof && instanceof decl_stmt java.lang.Number = decl_stmt java.lang.Number = if instanceof || instanceof decl_stmt java.math.BigDecimal = decl_stmt java.math.BigDecimal = return new call java.math.BigDecimal.remainder(BigDecimal,MathContext) call java.math.BigDecimal.remainder(BigDecimal,MathContext) call java.math.BigDecimal.remainder(BigDecimal,MathContext) call java.math.BigDecimal.remainder(BigDecimal,MathContext) call java.math.BigDecimal.remainder(BigDecimal,MathContext) else if instanceof || instanceof = return new call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() else if instanceof || instanceof = return new call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() else if instanceof || instanceof decl_stmt java.math.BigInteger = decl_stmt java.math.BigInteger = return new call java.math.BigInteger.remainder(BigInteger) call java.math.BigInteger.remainder(BigInteger) call java.math.BigInteger.remainder(BigInteger) call java.math.BigInteger.remainder(BigInteger) call java.math.BigInteger.remainder(BigInteger) else if instanceof || instanceof = return new call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() else if || = return new call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() else return new call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() return public public if ! return if > if ! return return != String String public public decl_stmt java.lang.String = if > decl_stmt java.lang.String = switch case break case break case break case break default: throw new + +