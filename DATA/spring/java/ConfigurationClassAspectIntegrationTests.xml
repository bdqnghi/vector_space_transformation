org.springframework.context.annotation.configuration org.aspectj.lang.JoinPoint import org.aspectj.lang.annotation.After import org.aspectj.lang.annotation.Aspect import org.aspectj.lang.annotation.Before import org.junit.Test import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.context.ApplicationContext import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.ConfigurationClassPostProcessor import org.springframework.context.annotation.EnableAspectJAutoProxy import org.springframework.context.support.GenericApplicationContext import org.springframework.core.io.ClassPathResource import org.springframework.tests.sample.beans.TestBean import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import class org.springframework.context.annotation.configuration.ConfigurationClassAspectIntegrationTests public public public public TestBean GenericApplicationContext DefaultListableBeanFactory private private < decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new new decl_stmt org.springframework.context.support.GenericApplicationContext = new call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() call GenericApplicationContext.addBeanFactoryPostProcessor() new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.absquatulate() call org.springframework.tests.sample.beans.TestBean.absquatulate() call org.springframework.tests.sample.beans.TestBean.absquatulate() call org.springframework.tests.sample.beans.TestBean.absquatulate() call org.springframework.tests.sample.beans.TestBean.absquatulate() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = new call ApplicationContext.getBeansOfType() call ApplicationContext.getBeansOfType() call ApplicationContext.getBeansOfType() call ApplicationContext.getBeansOfType() call ApplicationContext.getBeansOfType() public public return new public public public public return new public public return new public public return new public public public public return public public ++