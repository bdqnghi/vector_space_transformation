org.springframework.aop.framework.adapter java.io.Serializable import org.aopalliance.aop.Advice import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.aop.Advisor import org.springframework.aop.BeforeAdvice import org.springframework.aop.framework.Advised import org.springframework.context.support.ClassPathXmlApplicationContext import org.springframework.tests.sample.beans.ITestBean import static static org.junit.Assert.* import class org.springframework.aop.framework.adapter.AdvisorAdapterRegistrationTests public public ITestBean ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new + decl_stmt org.springframework.scheduling.annotation.ITestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() try call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() catch ITestBean ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new + decl_stmt org.springframework.scheduling.annotation.ITestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() try call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() catch Advisor Advised private private decl_stmt org.springframework.aop.framework.Advised = decl_stmt org.springframework.aop.Advisor = call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() return call org.springframework.aop.Advisor.getAdvice() call org.springframework.aop.Advisor.getAdvice() call org.springframework.aop.Advisor.getAdvice() call org.springframework.aop.Advisor.getAdvice() call org.springframework.aop.Advisor.getAdvice()