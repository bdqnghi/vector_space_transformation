org.springframework.context.annotation java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.util.Set import java.util.regex.Pattern import example.profilescan.DevComponent import example.profilescan.ProfileAnnotatedComponent import example.profilescan.ProfileMetaAnnotatedComponent import example.scannable.FooDao import example.scannable.FooService import example.scannable.FooServiceImpl import example.scannable.MessageBean import example.scannable.NamedComponent import example.scannable.NamedStubDao import example.scannable.ServiceInvocationCounter import example.scannable.StubFooDao import org.aspectj.lang.annotation.Aspect import org.junit.Test import org.springframework.beans.factory.config.BeanDefinition import org.springframework.core.env.ConfigurableEnvironment import org.springframework.core.env.StandardEnvironment import org.springframework.core.type.filter.AnnotationTypeFilter import org.springframework.core.type.filter.AssignableTypeFilter import org.springframework.core.type.filter.RegexPatternTypeFilter import org.springframework.stereotype.Component import org.springframework.stereotype.Controller import org.springframework.stereotype.Repository import org.springframework.stereotype.Service import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import class org.springframework.context.annotation.ClassPathScanningCandidateComponentProviderTests String String String decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) new + decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) new call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) new call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public throws decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() call ClassPathScanningCandidateComponentProvider.addIncludeFilter() new call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.addExcludeFilter(TypeFilter) new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl Set ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) decl Set ConfigurableEnvironment ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new decl_stmt org.springframework.core.env.ConfigurableEnvironment = new call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) decl Set ConfigurableEnvironment ClassPathScanningCandidateComponentProvider public public decl_stmt org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider = new decl_stmt org.springframework.core.env.ConfigurableEnvironment = new call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.core.env.ConfigurableEnvironment.setActiveProfiles(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.setEnvironment(Environment) decl_stmt java.util.Set < = call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) call org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(String) AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() String AnnotationConfigApplicationContext decl Class public public decl_stmt java.lang.Class < = decl_stmt java.lang.String = decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() String AnnotationConfigApplicationContext decl Class public public decl_stmt java.lang.Class < = decl_stmt java.lang.String = decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() ScannedGenericBeanDefinition private private < < for : decl_stmt org.springframework.context.annotation.ScannedGenericBeanDefinition = if call ScannedGenericBeanDefinition.getBeanClassName() call ScannedGenericBeanDefinition.getBeanClassName() call ScannedGenericBeanDefinition.getBeanClassName() call ScannedGenericBeanDefinition.getBeanClassName() call ScannedGenericBeanDefinition.getBeanClassName() return return