org.springframework.context.support java.io.FileNotFoundException import org.junit.Ignore import org.junit.Test import org.springframework.beans.MutablePropertyValues import org.springframework.beans.factory.BeanDefinitionStoreException import org.springframework.beans.factory.BeanInitializationException import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer import org.springframework.beans.factory.config.PropertyResourceConfigurer import org.springframework.beans.factory.config.RuntimeBeanReference import org.springframework.context.ApplicationContext import org.springframework.tests.sample.beans.TestBean import org.springframework.util.StringUtils import static static org.junit.Assert.* import class org.springframework.context.support.PropertyResourceConfigurerIntegrationTests String StaticApplicationContext MutablePropertyValues public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch instanceof decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) != - String StaticApplicationContext MutablePropertyValues public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch instanceof decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + + || + + StaticApplicationContext MutablePropertyValues public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch StaticApplicationContext MutablePropertyValues public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch StaticApplicationContext MutablePropertyValues public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch StaticApplicationContext MutablePropertyValues public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) try call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() catch public public