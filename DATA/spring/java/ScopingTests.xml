org.springframework.context.annotation.configuration java.lang.annotation.ElementType import java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.lang.annotation.Target import java.util.HashMap import java.util.Map import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.aop.scope.ScopedObject import org.springframework.beans.factory.ObjectFactory import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.Scope import org.springframework.context.annotation.ScopedProxyMode import org.springframework.context.support.GenericApplicationContext import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.context.annotation.configuration.ScopingTests CustomScope String String GenericApplicationContext public public throws = new = public public throws if != call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() AnnotationConfigApplicationContext DefaultListableBeanFactory private private < decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new if != call DefaultListableBeanFactory.registerScope() call DefaultListableBeanFactory.registerScope() call DefaultListableBeanFactory.registerScope() call DefaultListableBeanFactory.registerScope() call DefaultListableBeanFactory.registerScope() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() return public public throws public public throws Object Object Object Object Object Object Object String private private throws decl_stmt java.lang.String = decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() = decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() = decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() = decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() Object Object Object Object public public throws decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() = decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() Object String public public throws decl_stmt java.lang.String = decl_stmt java.lang.Object = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() + instanceof ITestBean TestBean ITestBean String String public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() instanceof decl_stmt java.lang.String = decl_stmt java.lang.String = + call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() decl_stmt org.springframework.scheduling.annotation.ITestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() = = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() TestBean TestBean ITestBean String String public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() instanceof decl_stmt java.lang.String = decl_stmt java.lang.String = + call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() = = = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() public public public public return = public = public return new TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) return Object public public < if = decl_stmt java.lang.Object = if == return public public return public public throw new public public return public public return