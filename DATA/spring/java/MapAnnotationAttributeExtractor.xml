org.springframework.core.annotation java.lang.annotation.Annotation import java.lang.reflect.AnnotatedElement import java.lang.reflect.Array import java.lang.reflect.Method import java.util.LinkedHashMap import java.util.List import java.util.Map import org.springframework.util.ClassUtils import static static org.springframework.core.annotation.AnnotationUtils.* import class org.springframework.core.annotation.MapAnnotationAttributeExtractor super super extends protected protected return protected protected return decl Map Object Object decl Class String decl List boolean decl Map decl Class decl Map Object Object decl Class private static < private static < < < extends extends decl_stmt java.util.Map < = new < decl_stmt java.util.Map < < = for : decl_stmt java.lang.String = decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != for : decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() break if == decl_stmt java.lang.Object = if != = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if == throw new decl_stmt java.lang.Class < = decl_stmt java.lang.Class < extends extends = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() if ! decl_stmt boolean = if call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() && call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() == decl_stmt java.lang.Object = call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = else if && decl_stmt java.lang.Class < extends extends = < extends extends decl_stmt java.util.Map < = < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = else if call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() && call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() && call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() && call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() decl_stmt java.lang.Class < extends extends = < extends extends call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() decl_stmt java.lang.Class < extends extends = < extends extends call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = if ! throw new + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() return