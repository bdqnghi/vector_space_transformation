org.springframework.jms.annotation java.lang.reflect.Method import java.util.Collections import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.atomic.AtomicInteger import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.aop.support.AopUtils import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.BeanInitializationException import org.springframework.beans.factory.ListableBeanFactory import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.SmartInitializingSingleton import org.springframework.beans.factory.config.BeanPostProcessor import org.springframework.beans.factory.config.ConfigurableBeanFactory import org.springframework.beans.factory.config.EmbeddedValueResolver import org.springframework.core.MethodIntrospector import org.springframework.core.Ordered import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.jms.config.JmsListenerConfigUtils import org.springframework.jms.config.JmsListenerContainerFactory import org.springframework.jms.config.JmsListenerEndpointRegistrar import org.springframework.jms.config.JmsListenerEndpointRegistry import org.springframework.jms.config.MethodJmsListenerEndpoint import org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory import org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory import org.springframework.messaging.handler.invocation.InvocableHandlerMethod import org.springframework.util.Assert import org.springframework.util.StringUtils import org.springframework.util.StringValueResolver import class org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor super super implements String JmsListenerEndpointRegistry BeanFactory AtomicInteger MessageHandlerMethodFactoryAdapter decl Set JmsListenerEndpointRegistrar Log StringValueResolver String public public return public public = public public = public public public public = if instanceof = new decl Map MessageHandlerMethodFactory public public if instanceof decl_stmt java.util.Map < = for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() if == if == != = if != decl_stmt org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory = if != public public throws return decl Class decl Set decl Map Method public public final final throws if ! decl_stmt java.lang.Class < = decl_stmt java.util.Map < < = new < < public < public < decl_stmt java.util.Set < = return ! call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() : if call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + else for < < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt com.sun.jdi.Method = for : if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() + + + + return decl Set public < public < decl_stmt java.util.Set < = return ! call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() : String MethodJmsListenerEndpoint decl JmsListenerContainerFactory Method protected protected decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.jms.config.MethodJmsListenerEndpoint = call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMostSpecificMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMostSpecificMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMostSpecificMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMostSpecificMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMostSpecificMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setEmbeddedValueResolver(StringValueResolver) call org.springframework.jms.config.MethodJmsListenerEndpoint.setEmbeddedValueResolver(StringValueResolver) call org.springframework.jms.config.MethodJmsListenerEndpoint.setEmbeddedValueResolver(StringValueResolver) call org.springframework.jms.config.MethodJmsListenerEndpoint.setEmbeddedValueResolver(StringValueResolver) call org.springframework.jms.config.MethodJmsListenerEndpoint.setEmbeddedValueResolver(StringValueResolver) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBeanFactory(BeanFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBeanFactory(BeanFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBeanFactory(BeanFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBeanFactory(BeanFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBeanFactory(BeanFactory) call MethodJmsListenerEndpoint.setId() call MethodJmsListenerEndpoint.setId() call MethodJmsListenerEndpoint.setId() call MethodJmsListenerEndpoint.setId() call MethodJmsListenerEndpoint.setId() call MethodJmsListenerEndpoint.setDestination() call MethodJmsListenerEndpoint.setDestination() call MethodJmsListenerEndpoint.setDestination() call MethodJmsListenerEndpoint.setDestination() call MethodJmsListenerEndpoint.setDestination() if call MethodJmsListenerEndpoint.setSelector() call MethodJmsListenerEndpoint.setSelector() call MethodJmsListenerEndpoint.setSelector() call MethodJmsListenerEndpoint.setSelector() call MethodJmsListenerEndpoint.setSelector() if call MethodJmsListenerEndpoint.setSubscription() call MethodJmsListenerEndpoint.setSubscription() call MethodJmsListenerEndpoint.setSubscription() call MethodJmsListenerEndpoint.setSubscription() call MethodJmsListenerEndpoint.setSubscription() if call MethodJmsListenerEndpoint.setConcurrency() call MethodJmsListenerEndpoint.setConcurrency() call MethodJmsListenerEndpoint.setConcurrency() call MethodJmsListenerEndpoint.setConcurrency() call MethodJmsListenerEndpoint.setConcurrency() decl_stmt org.springframework.jms.config.JmsListenerContainerFactory < = decl_stmt java.lang.String = if != try = catch throw new + + + + + + protected protected return new private private if return else return + private private return != : public public = public public return private private if == = return DefaultMessageHandlerMethodFactory private private decl_stmt org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory = new call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() return