org.springframework.util java.lang.reflect.Constructor import java.lang.reflect.Field import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.lang.reflect.Modifier import java.lang.reflect.UndeclaredThrowableException import java.sql.SQLException import java.util.ArrayList import java.util.Arrays import java.util.LinkedList import java.util.List import java.util.Map import class org.springframework.util.ReflectionUtils String MethodFilter decl Field decl Map MethodFilter decl Map decl Method FieldFilter public static public static < return decl Field decl Class public static public static < < != || != decl_stmt java.lang.Class < = while != && != decl_stmt com.sun.jdi.Field = for : if == || && == || return = call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() return public static public static try catch throw new + + + public static public static try return catch throw new + + + public static public static < return new < decl Method decl Class public static public static < < decl_stmt java.lang.Class < = while != decl_stmt com.sun.jdi.Method = call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() call decl Class.getMethods() call decl Class.getMethods() call decl Class.getMethods() call decl Class.getMethods() call decl Class.getMethods() : for : if && == || return = call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() return public static public static return new public static public static try return catch throw new public static public static throws return new public static public static throws try return catch catch if instanceof throw throw new public static public static if instanceof throw new + if instanceof throw new + if instanceof if instanceof throw throw new public static public static public static public static if instanceof throw if instanceof throw throw new public static public static throws if instanceof throw if instanceof throw throw new public static public static < for < : if return return int public static public static decl_stmt int = return && && public static public static if == || ! return if == || ! return return == && == public static public static return != && && == public static public static return != && && == public static public static if == return try return catch return int String public static public static decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt int = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - while >= && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) -- return > call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() && < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == return public static public static if ! || ! || && ! public static public static if ! || ! && ! public static public static < if ! || ! && ! decl Method public static public static < decl_stmt com.sun.jdi.Method = for : try catch throw new + + + public static public static < decl Method public static public static < decl_stmt com.sun.jdi.Method = for : if != && ! continue try catch throw new + + + if != else if for < : decl List public static public static < decl_stmt java.util.List final final final < = new < new public public call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() public public Method decl List boolean public static public static < decl_stmt java.util.List final final final < = new < new public public decl_stmt boolean = decl_stmt com.sun.jdi.Method = for : if && if != && = else = break if != call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() if ! && ! call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() Method boolean public public decl_stmt boolean = decl_stmt com.sun.jdi.Method = for : if && if != && = else = break if != if ! && ! int decl Method decl List decl Method private static private static < decl_stmt com.sun.jdi.Method = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt com.sun.jdi.Method = decl_stmt java.util.List < = if != = new + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int = for : = ++ else = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() == : return decl List private static < private static < < decl_stmt java.util.List < = for < : for : if ! if == = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public static public static < for : try catch throw new + + + public static public static < decl Field decl Class public static public static < decl_stmt java.lang.Class < = do decl_stmt com.sun.jdi.Field = for : if != && ! continue try catch throw new + + + = call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() call decl Class.getSuperclass() != && != decl Field private static private static < decl_stmt com.sun.jdi.Field = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() == : return Object public static public static final final final final if == throw new if == throw new if ! throw new + + + + new public public throws decl_stmt java.lang.Object = Object public public throws decl_stmt java.lang.Object = public static public static call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() public public return ! || public public return ! public public return ! && !=