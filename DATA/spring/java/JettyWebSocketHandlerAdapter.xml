org.springframework.web.socket.adapter.jetty java.nio.ByteBuffer import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.eclipse.jetty.websocket.api.Session import org.eclipse.jetty.websocket.api.annotations.OnWebSocketClose import org.eclipse.jetty.websocket.api.annotations.OnWebSocketConnect import org.eclipse.jetty.websocket.api.annotations.OnWebSocketError import org.eclipse.jetty.websocket.api.annotations.OnWebSocketFrame import org.eclipse.jetty.websocket.api.annotations.OnWebSocketMessage import org.eclipse.jetty.websocket.api.annotations.WebSocket import org.eclipse.jetty.websocket.api.extensions.Frame import org.eclipse.jetty.websocket.common.OpCode import org.springframework.util.Assert import org.springframework.web.socket.BinaryMessage import org.springframework.web.socket.CloseStatus import org.springframework.web.socket.PongMessage import org.springframework.web.socket.TextMessage import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator import class annotation org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter JettyWebSocketSession Log WebSocketHandler ByteBuffer public public try catch TextMessage public public decl_stmt org.springframework.web.socket.TextMessage = new try catch BinaryMessage public public decl_stmt org.springframework.web.socket.BinaryMessage = new try catch PongMessage ByteBuffer public public if == decl_stmt ByteBuffer = != : decl_stmt org.springframework.web.socket.PongMessage = new try catch CloseStatus public public decl_stmt org.springframework.web.socket.CloseStatus = new try catch if call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() + public public try catch