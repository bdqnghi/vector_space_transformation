org.springframework.web.servlet.handler java.io.IOException import javax.servlet.ServletException import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.hamcrest.Matchers import org.junit.Assert import org.junit.Before import org.junit.Test import org.mockito.Mockito import org.springframework.http.HttpStatus import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.web.HttpRequestHandler import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.servlet.HandlerExecutionChain import org.springframework.web.servlet.HandlerInterceptor import org.springframework.web.servlet.support.WebContentGenerator import class org.springframework.web.servlet.handler.HandlerMappingTests AbstractHandlerMapping MockHttpServletRequest StaticWebApplicationContext public public = new = new = new HandlerInterceptor HandlerExecutionChain MappedInterceptor MappedInterceptor HandlerInterceptor public public throws decl_stmt org.springframework.web.servlet.handler.MappedInterceptor = new new decl_stmt org.springframework.web.portlet.HandlerInterceptor = decl_stmt org.springframework.web.servlet.handler.MappedInterceptor = new new decl_stmt org.springframework.web.portlet.HandlerInterceptor = new decl_stmt org.springframework.web.portlet.HandlerExecutionChain = new call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() call MappedInterceptor.getInterceptor() protected protected throws return new public public throws