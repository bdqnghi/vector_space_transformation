org.springframework.context.annotation.configuration org.junit.Test import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.ConfigurationClassPostProcessor import org.springframework.context.annotation.DependsOn import org.springframework.context.annotation.Import import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import class org.springframework.context.annotation.configuration.ImportTests ConfigurationClassPostProcessor DefaultListableBeanFactory private private < decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new for < : call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.context.annotation.ConfigurationClassPostProcessor = new call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() return DefaultListableBeanFactory private private < decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() call org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() for < : call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) int DefaultListableBeanFactory ConfigurationClassPostProcessor int public public decl_stmt int = decl_stmt int = decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.context.annotation.ConfigurationClassPostProcessor = new call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() + int int public public decl_stmt int = decl_stmt int = + int int public public decl_stmt int = decl_stmt int = + int int public public decl_stmt int = decl_stmt int = + public public return new public public return new public public return new int int public public decl_stmt int = decl_stmt int = + public public return new public public return new public public return new int int public public decl_stmt int = decl_stmt int = + int int public public decl_stmt int = decl_stmt int = + ConfigurationClassPostProcessor DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.context.annotation.ConfigurationClassPostProcessor = new call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinitionCount() call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) public public return new public public return new int int public public decl_stmt int = decl_stmt int = + return public public return new public public return new public public return new public public return new public public return new public public return new public public return new public public return new public public return new public public return new int int public public decl_stmt int = decl_stmt int = + AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() call AnnotationConfigApplicationContext.getBeanNamesForType() int int public public decl_stmt int = decl_stmt int = +