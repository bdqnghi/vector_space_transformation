org.springframework.beans.annotation java.lang.annotation.Annotation import java.lang.reflect.Method import java.util.Arrays import java.util.HashSet import java.util.Set import org.springframework.beans.BeanWrapper import org.springframework.beans.PropertyAccessorFactory import org.springframework.util.ReflectionUtils import org.springframework.util.StringValueResolver import class org.springframework.beans.annotation.AnnotationBeanUtils public static public static decl Method String BeanWrapper Object decl Set public static public static decl_stmt java.util.Set < = new < decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.beans.BeanWrapper = for : decl_stmt java.lang.String = if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() && call BeanWrapper.isWritableProperty() call BeanWrapper.isWritableProperty() call BeanWrapper.isWritableProperty() call BeanWrapper.isWritableProperty() call BeanWrapper.isWritableProperty() decl_stmt java.lang.Object = if != && instanceof = call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue()