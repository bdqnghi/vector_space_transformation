org.springframework.web.servlet.mvc.method.annotation java.io.IOException import java.lang.reflect.Type import java.util.List import javax.servlet.http.HttpServletRequest import org.springframework.core.Conventions import org.springframework.core.MethodParameter import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.core.io.Resource import org.springframework.http.HttpHeaders import org.springframework.http.HttpRange import org.springframework.http.HttpRangeResource import org.springframework.http.HttpStatus import org.springframework.http.converter.HttpMessageConverter import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.http.converter.HttpMessageNotWritableException import org.springframework.http.server.ServletServerHttpRequest import org.springframework.http.server.ServletServerHttpResponse import org.springframework.validation.BindingResult import org.springframework.web.HttpMediaTypeNotAcceptableException import org.springframework.web.HttpMediaTypeNotSupportedException import org.springframework.web.accept.ContentNegotiationManager import org.springframework.web.bind.MethodArgumentNotValidException import org.springframework.web.bind.WebDataBinder import org.springframework.web.bind.annotation.RequestBody import org.springframework.web.bind.annotation.ResponseBody import org.springframework.web.bind.support.WebDataBinderFactory import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver import class org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor super super extends public public return public public return || WebDataBinder String Object public public throws decl_stmt java.lang.Object = decl_stmt java.lang.String = decl_stmt org.springframework.web.bind.WebDataBinder = if != if call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() && throw new call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() + call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() call WebDataBinder.getBindingResult() return HttpServletRequest ServletServerHttpRequest Object protected < protected < throws decl_stmt HttpServletRequest = decl_stmt org.springframework.http.server.ServletServerHttpRequest = new decl_stmt java.lang.Object = if == if throw new + return protected protected return ServletServerHttpResponse Resource decl List ServletServerHttpRequest public public throws decl_stmt org.springframework.http.server.ServletServerHttpRequest = decl_stmt org.springframework.http.server.ServletServerHttpResponse = if call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() && try decl_stmt java.util.List < = call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() decl_stmt org.springframework.core.io.Resource = = new call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) catch call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.flush() call org.springframework.http.server.ServletServerHttpResponse.flush() call org.springframework.http.server.ServletServerHttpResponse.flush() call org.springframework.http.server.ServletServerHttpResponse.flush() call org.springframework.http.server.ServletServerHttpResponse.flush() return