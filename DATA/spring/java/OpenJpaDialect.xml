org.springframework.orm.jpa.vendor java.sql.Connection import java.sql.SQLException import javax.persistence.EntityManager import javax.persistence.PersistenceException import org.apache.commons.logging.LogFactory import org.apache.openjpa.persistence.FetchPlan import org.apache.openjpa.persistence.OpenJPAEntityManager import org.apache.openjpa.persistence.OpenJPAPersistence import org.apache.openjpa.persistence.jdbc.IsolationLevel import org.apache.openjpa.persistence.jdbc.JDBCFetchPlan import org.springframework.jdbc.datasource.ConnectionHandle import org.springframework.jdbc.datasource.ConnectionHolder import org.springframework.jdbc.support.JdbcUtils import org.springframework.orm.jpa.DefaultJpaDialect import org.springframework.transaction.SavepointManager import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionException import class annotation org.springframework.orm.jpa.vendor.OpenJpaDialect super super extends FetchPlan IsolationLevel OpenJPAEntityManager public public throws decl_stmt OpenJPAEntityManager = if != decl_stmt FetchPlan = call OpenJPAEntityManager.getFetchPlan() call OpenJPAEntityManager.getFetchPlan() call OpenJPAEntityManager.getFetchPlan() call OpenJPAEntityManager.getFetchPlan() call OpenJPAEntityManager.getFetchPlan() if instanceof decl_stmt IsolationLevel = if ! call OpenJPAEntityManager.beginStore() call OpenJPAEntityManager.beginStore() call OpenJPAEntityManager.beginStore() call OpenJPAEntityManager.beginStore() call OpenJPAEntityManager.beginStore() return new public public throws return new protected protected return String public public throws ++ decl_stmt java.lang.String = + return public public throws public public throws try catch public public return public public