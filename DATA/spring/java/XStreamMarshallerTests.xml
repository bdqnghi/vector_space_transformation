org.springframework.oxm.xstream java.io.ByteArrayOutputStream import java.io.Reader import java.io.StringReader import java.io.StringWriter import java.io.Writer import java.util.Arrays import java.util.Collections import java.util.HashMap import java.util.Map import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import javax.xml.stream.XMLEventWriter import javax.xml.stream.XMLOutputFactory import javax.xml.stream.XMLStreamWriter import javax.xml.transform.Result import javax.xml.transform.dom.DOMResult import javax.xml.transform.sax.SAXResult import javax.xml.transform.stream.StreamResult import javax.xml.transform.stream.StreamSource import com.thoughtworks.xstream.converters.Converter import com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter import com.thoughtworks.xstream.io.HierarchicalStreamWriter import com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver import com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver import com.thoughtworks.xstream.io.json.JsonWriter import org.junit.Before import org.junit.Ignore import org.junit.Test import org.mockito.InOrder import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.Text import org.xml.sax.Attributes import org.xml.sax.ContentHandler import org.springframework.util.xml.StaxUtils import static static org.custommonkey.xmlunit.XMLAssert.* import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertNotNull import static static org.junit.Assert.assertTrue import static static org.mockito.BDDMockito.* import class org.springframework.oxm.xstream.XStreamMarshallerTests XStreamMarshaller Flight String decl Map public public throws = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) = new call Flight.setFlightNumber() call Flight.setFlightNumber() call Flight.setFlightNumber() call Flight.setFlightNumber() call Flight.setFlightNumber() DocumentBuilderFactory Text DocumentBuilder Element DOMResult Element Document Document public public throws decl_stmt DocumentBuilderFactory = decl_stmt DocumentBuilder = call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() decl_stmt javax.swing.text.Document = call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() decl_stmt DOMResult = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() decl_stmt javax.swing.text.Document = call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() decl_stmt Text = call Document.createTextNode() call Document.createTextNode() call Document.createTextNode() call Document.createTextNode() call Document.createTextNode() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() Element Element Element DocumentBuilderFactory Text DocumentBuilder Element Element DOMResult Document Element Document public public throws decl_stmt DocumentBuilderFactory = decl_stmt DocumentBuilder = call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() decl_stmt javax.swing.text.Document = call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() decl_stmt DOMResult = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() decl_stmt javax.swing.text.Document = call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() call Document.appendChild() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() decl_stmt Text = call Document.createTextNode() call Document.createTextNode() call Document.createTextNode() call Document.createTextNode() call Document.createTextNode() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() StringWriter StreamResult public public throws decl_stmt StringWriter = new decl_stmt StreamResult = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() String ByteArrayOutputStream StreamResult public public throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt StreamResult = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() decl_stmt java.lang.String = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() InOrder SAXResult ContentHandler public public throws decl_stmt java.net.ContentHandler = decl_stmt SAXResult = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() XMLStreamWriter XMLOutputFactory StringWriter Result public public throws decl_stmt XMLOutputFactory = decl_stmt StringWriter = new decl_stmt XMLStreamWriter = call XMLOutputFactory.createXMLStreamWriter() call XMLOutputFactory.createXMLStreamWriter() call XMLOutputFactory.createXMLStreamWriter() call XMLOutputFactory.createXMLStreamWriter() call XMLOutputFactory.createXMLStreamWriter() decl_stmt javax.naming.spi.Result = call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() XMLOutputFactory StringWriter Result XMLEventWriter public public throws decl_stmt XMLOutputFactory = decl_stmt StringWriter = new decl_stmt XMLEventWriter = call XMLOutputFactory.createXMLEventWriter() call XMLOutputFactory.createXMLEventWriter() call XMLOutputFactory.createXMLEventWriter() call XMLOutputFactory.createXMLEventWriter() call XMLOutputFactory.createXMLEventWriter() decl_stmt javax.naming.spi.Result = call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() Writer decl byte decl byte Reader public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setConverters(ConverterMatcher) call org.springframework.oxm.xstream.XStreamMarshaller.setConverters(ConverterMatcher) call org.springframework.oxm.xstream.XStreamMarshaller.setConverters(ConverterMatcher) call org.springframework.oxm.xstream.XStreamMarshaller.setConverters(ConverterMatcher) call org.springframework.oxm.xstream.XStreamMarshaller.setConverters(ConverterMatcher) new new decl_stmt byte = new decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() decl_stmt java.io.Reader = new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() decl_stmt byte = call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() new String Writer public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeForTypes(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeForTypes(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeForTypes(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeForTypes(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeForTypes(Class) new decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new decl_stmt java.lang.String = call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() String Writer public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new decl_stmt java.lang.String = call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() String Writer public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new decl_stmt java.lang.String = call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() String Writer public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setUseAttributeFor(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new decl_stmt java.lang.String = call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() Writer FlightSubclass decl Map public public throws decl_stmt java.util.Map < < = new < < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt FlightSubclass = new call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() Writer FlightSubclass decl Map public public throws decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt FlightSubclass = new call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call FlightSubclass.setFlightNumber() call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliasesByType(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() String Writer public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setFieldAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setFieldAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setFieldAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setFieldAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setFieldAliases(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new decl_stmt java.lang.String = call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() Writer Map public public throws decl_stmt java.util.Map = call org.springframework.oxm.xstream.XStreamMarshaller.setOmittedFields(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setOmittedFields(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setOmittedFields(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setOmittedFields(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setOmittedFields(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() Writer Flights Map String decl Map public public throws decl_stmt org.springframework.oxm.jibx.Flights = new call org.springframework.oxm.jibx.Flights.getFlights() call org.springframework.oxm.jibx.Flights.getFlights() call org.springframework.oxm.jibx.Flights.getFlights() call org.springframework.oxm.jibx.Flights.getFlights() call org.springframework.oxm.jibx.Flights.getFlights() call org.springframework.oxm.jibx.Flights.getStrings() call org.springframework.oxm.jibx.Flights.getStrings() call org.springframework.oxm.jibx.Flights.getStrings() call org.springframework.oxm.jibx.Flights.getStrings() call org.springframework.oxm.jibx.Flights.getStrings() decl_stmt java.util.Map < < = new < < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setAliases(Map) decl_stmt java.util.Map = call org.springframework.oxm.xstream.XStreamMarshaller.setImplicitCollections(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setImplicitCollections(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setImplicitCollections(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setImplicitCollections(Map) call org.springframework.oxm.xstream.XStreamMarshaller.setImplicitCollections(Map) decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new decl_stmt java.lang.String = call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() Flight Writer Object public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) new decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() decl_stmt java.lang.Object = call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() call XStreamMarshaller.unmarshal() new new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() instanceof decl_stmt org.springframework.oxm.xstream.Flight = call org.springframework.oxm.xstream.Flight.getFlightNumber() call org.springframework.oxm.xstream.Flight.getFlightNumber() call org.springframework.oxm.xstream.Flight.getFlightNumber() call org.springframework.oxm.xstream.Flight.getFlightNumber() call org.springframework.oxm.xstream.Flight.getFlightNumber() Writer public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) call org.springframework.oxm.xstream.XStreamMarshaller.setStreamDriver(HierarchicalStreamDriver) new public public return new new new new | decl_stmt Writer = new call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() new call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() call Writer.toString() public public return new new new new | String StringWriter Flight StreamResult public public throws call org.springframework.oxm.xstream.XStreamMarshaller.setAnnotatedClasses(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setAnnotatedClasses(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setAnnotatedClasses(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setAnnotatedClasses(Class) call org.springframework.oxm.xstream.XStreamMarshaller.setAnnotatedClasses(Class) decl_stmt StringWriter = new decl_stmt StreamResult = new decl_stmt org.springframework.oxm.xstream.Flight = new call Flight.setFlightNumber() call Flight.setFlightNumber() call Flight.setFlightNumber() call Flight.setFlightNumber() call Flight.setFlightNumber() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() call XStreamMarshaller.marshal() decl_stmt java.lang.String = call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString()