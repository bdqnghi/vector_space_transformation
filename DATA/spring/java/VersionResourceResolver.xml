org.springframework.web.servlet.resource java.io.File import java.io.IOException import java.io.InputStream import java.net.URI import java.net.URL import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.Comparator import java.util.LinkedHashMap import java.util.List import java.util.Map import javax.servlet.http.HttpServletRequest import org.springframework.core.io.AbstractResource import org.springframework.core.io.Resource import org.springframework.util.AntPathMatcher import org.springframework.util.StringUtils import class org.springframework.web.servlet.resource.VersionResourceResolver super super extends decl Map AntPathMatcher public public < public < public < return public public new return decl List decl List String public public decl_stmt java.util.List < = decl_stmt java.util.List < = new < decl_stmt java.lang.String = + for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if ! && ! call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + return new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new public public for : return Resource String String String VersionStrategy Resource protected protected < extends extends decl_stmt org.springframework.core.io.Resource = if != return decl_stmt org.springframework.web.servlet.resource.VersionStrategy = if == return decl_stmt java.lang.String = call VersionStrategy.extractVersion() call VersionStrategy.extractVersion() call VersionStrategy.extractVersion() call VersionStrategy.extractVersion() call VersionStrategy.extractVersion() if if + + return decl_stmt java.lang.String = call VersionStrategy.removeVersion() call VersionStrategy.removeVersion() call VersionStrategy.removeVersion() call VersionStrategy.removeVersion() call VersionStrategy.removeVersion() if + + decl_stmt org.springframework.core.io.Resource = if == return decl_stmt java.lang.String = call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if + + return new else if + + + + return Resource String VersionStrategy String protected protected < extends extends decl_stmt java.lang.String = if decl_stmt org.springframework.web.servlet.resource.VersionStrategy = if == return if + + decl_stmt org.springframework.core.io.Resource = decl_stmt java.lang.String = call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() call VersionStrategy.getResourceVersion() if + + + return call VersionStrategy.addVersion() call VersionStrategy.addVersion() call VersionStrategy.addVersion() call VersionStrategy.addVersion() call VersionStrategy.addVersion() return String decl List decl Comparator protected protected decl_stmt java.lang.String = decl_stmt java.util.List < = new < for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() decl_stmt java.util.Comparator < = return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() return public public return public public return public public return public public throws return public public throws return public public throws return public public return public public throws return public public throws return public public throws return public public return public public throws return public public return