org.springframework.scripting.groovy org.junit.Test import org.springframework.aop.Advisor import org.springframework.aop.aspectj.AspectJExpressionPointcut import org.springframework.aop.framework.ProxyFactory import org.springframework.aop.support.DefaultPointcutAdvisor import org.springframework.core.io.ClassPathResource import org.springframework.scripting.support.ResourceScriptSource import org.springframework.util.ClassUtils import static static org.junit.Assert.* import class org.springframework.scripting.groovy.GroovyAspectTests GroovyScriptFactory LogUserAdvice TestService public public throws decl_stmt org.springframework.aop.aspectj.TestService = call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) new new new AspectJExpressionPointcut TestService public public throws decl_stmt org.springframework.aop.aspectj.TestService = call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) new new decl_stmt org.springframework.aop.aspectj.AspectJExpressionPointcut = new call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() new AspectJExpressionPointcut TestService public public throws decl_stmt org.springframework.aop.aspectj.TestService = call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) new new decl_stmt org.springframework.aop.aspectj.AspectJExpressionPointcut = new call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() new AspectJExpressionPointcut TestService public public throws decl_stmt org.springframework.aop.aspectj.TestService = call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) call org.springframework.scripting.groovy.GroovyScriptFactory.getScriptedObject(ScriptSource,Class) new new decl_stmt org.springframework.aop.aspectj.AspectJExpressionPointcut = new call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() call AspectJExpressionPointcut.setExpression() new private private throws TestService ProxyFactory private private throws call org.springframework.scripting.groovy.LogUserAdvice.reset() call org.springframework.scripting.groovy.LogUserAdvice.reset() call org.springframework.scripting.groovy.LogUserAdvice.reset() call org.springframework.scripting.groovy.LogUserAdvice.reset() call org.springframework.scripting.groovy.LogUserAdvice.reset() decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() decl_stmt org.springframework.aop.aspectj.TestService = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() try call TestService.sayHello() call TestService.sayHello() call TestService.sayHello() call TestService.sayHello() call TestService.sayHello() catch call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows() call org.springframework.scripting.groovy.LogUserAdvice.getCountThrows()