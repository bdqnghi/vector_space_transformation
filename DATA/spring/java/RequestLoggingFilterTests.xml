org.springframework.web.filter java.io.IOException import javax.servlet.FilterChain import javax.servlet.ServletException import javax.servlet.ServletRequest import javax.servlet.ServletResponse import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.junit.Before import org.junit.Test import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.util.FileCopyUtils import static static org.junit.Assert.* import class org.springframework.web.filter.RequestLoggingFilterTests MyRequestLoggingFilter public public throws = new MockHttpServletRequest MockHttpServletResponse FilterChain public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest final final = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) decl_stmt FilterChain = new call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() MockHttpServletRequest MockHttpServletResponse FilterChain public public throws call MyRequestLoggingFilter.setIncludeQueryString() call MyRequestLoggingFilter.setIncludeQueryString() call MyRequestLoggingFilter.setIncludeQueryString() call MyRequestLoggingFilter.setIncludeQueryString() call MyRequestLoggingFilter.setIncludeQueryString() decl_stmt org.springframework.mock.web.MockHttpServletRequest final final = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) decl_stmt FilterChain = new call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.beforeRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() decl byte decl byte MockHttpServletRequest MockHttpServletResponse FilterChain public public throws call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() decl_stmt org.springframework.mock.web.MockHttpServletRequest final final = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt byte final final final = call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) decl_stmt FilterChain = new public public throws decl_stmt byte = call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() decl byte public public throws decl_stmt byte = String String MockHttpServletRequest MockHttpServletResponse FilterChain public public throws call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() decl_stmt org.springframework.mock.web.MockHttpServletRequest final final = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt java.lang.String final final = call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt FilterChain = new public public throws decl_stmt java.lang.String = call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() String public public throws decl_stmt java.lang.String = decl byte decl byte MockHttpServletRequest MockHttpServletResponse FilterChain public public throws call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setIncludePayload() call MyRequestLoggingFilter.setMaxPayloadLength() call MyRequestLoggingFilter.setMaxPayloadLength() call MyRequestLoggingFilter.setMaxPayloadLength() call MyRequestLoggingFilter.setMaxPayloadLength() call MyRequestLoggingFilter.setMaxPayloadLength() decl_stmt org.springframework.mock.web.MockHttpServletRequest final final = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt byte final final final = call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) call org.springframework.mock.web.MockHttpServletRequest.setContent(byte) decl_stmt FilterChain = new public public throws decl_stmt byte = call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.doFilter() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() call MyRequestLoggingFilter.afterRequestMessage() decl byte public public throws decl_stmt byte = protected protected = protected protected = public public throws