org.springframework.jdbc.core.metadata java.sql.DatabaseMetaData import java.sql.SQLException import javax.sql.DataSource import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.dao.DataAccessResourceFailureException import org.springframework.jdbc.support.DatabaseMetaDataCallback import org.springframework.jdbc.support.JdbcUtils import org.springframework.jdbc.support.MetaDataAccessException import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor import class org.springframework.jdbc.core.metadata.TableMetaDataProviderFactory Log public static public static return boolean String TableMetaDataProvider public static public static final final final final try return new public public throws decl_stmt java.lang.String = decl_stmt boolean = decl_stmt org.springframework.jdbc.core.metadata.TableMetaDataProvider if = new else if = new else if = new else if = new else = new if != call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) if call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) return catch throw new boolean String TableMetaDataProvider public public throws decl_stmt java.lang.String = decl_stmt boolean = decl_stmt org.springframework.jdbc.core.metadata.TableMetaDataProvider if = new else if = new else if = new else if = new else = new if != call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.setNativeJdbcExtractor(NativeJdbcExtractor) if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call TableMetaDataProvider.getClass() call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithMetaData(DatabaseMetaData) if call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) call org.springframework.jdbc.core.metadata.TableMetaDataProvider.initializeWithTableColumnMetaData(DatabaseMetaData,String,String,String) return