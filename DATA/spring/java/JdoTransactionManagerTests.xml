org.springframework.orm.jdo java.sql.Connection import java.sql.DatabaseMetaData import java.sql.SQLException import java.sql.Savepoint import java.util.ArrayList import java.util.List import javax.jdo.Constants import javax.jdo.JDOFatalDataStoreException import javax.jdo.PersistenceManager import javax.jdo.PersistenceManagerFactory import javax.jdo.Transaction import javax.sql.DataSource import javax.transaction.Status import javax.transaction.TransactionManager import javax.transaction.UserTransaction import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.jdbc.datasource.ConnectionHandle import org.springframework.jdbc.datasource.ConnectionHolder import org.springframework.jdbc.datasource.SimpleConnectionHandle import org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean import org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean import org.springframework.tests.transaction.MockJtaTransaction import org.springframework.transaction.PlatformTransactionManager import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionStatus import org.springframework.transaction.jta.JtaTransactionManager import org.springframework.transaction.support.TransactionCallback import org.springframework.transaction.support.TransactionCallbackWithoutResult import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.transaction.support.TransactionTemplate import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.orm.jdo.JdoTransactionManagerTests PersistenceManagerFactory Transaction PersistenceManager public public = = = public public TransactionTemplate StandardPersistenceManagerProxyBean List SpringPersistenceManagerProxyBean PersistenceManager PlatformTransactionManager Object TransactionAwarePersistenceManagerFactoryProxy PersistenceManagerFactory PersistenceManager public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManagerProxy() call PersistenceManagerFactory.getPersistenceManagerProxy() call PersistenceManagerFactory.getPersistenceManagerProxy() call PersistenceManagerFactory.getPersistenceManagerProxy() call PersistenceManagerFactory.getPersistenceManagerProxy() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy = new call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) decl_stmt PersistenceManagerFactory = call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() decl_stmt org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean = new call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() decl_stmt PersistenceManager = call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.close() call PersistenceManager.close() call PersistenceManager.close() call PersistenceManager.close() call PersistenceManager.close() decl_stmt org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean = new call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() decl_stmt PersistenceManager = call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() return == ! ! PersistenceManagerFactory SpringPersistenceManagerProxyBean PersistenceManager TransactionAwarePersistenceManagerFactoryProxy StandardPersistenceManagerProxyBean PersistenceManager public public decl_stmt org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy = new call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.setTargetPersistenceManagerFactory(PersistenceManagerFactory) decl_stmt PersistenceManagerFactory = call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy.getObject() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManager.toString() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() decl_stmt org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean = new call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() call org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean.afterPropertiesSet() decl_stmt PersistenceManager = call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call SpringPersistenceManagerProxyBean.getObject() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.getPersistenceManagerFactory() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.close() call PersistenceManager.close() call PersistenceManager.close() call PersistenceManager.close() call PersistenceManager.close() decl_stmt org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean = new call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() call StandardPersistenceManagerProxyBean.setPersistenceManagerFactory() decl_stmt PersistenceManager = call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean.getObject() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() call PersistenceManager.flush() return TransactionTemplate PlatformTransactionManager public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public throw new catch ! ! public public throw new TransactionTemplate PlatformTransactionManager public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public throw new catch ! ! public public throw new TransactionTemplate PlatformTransactionManager public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return ! public public return TransactionTemplate PlatformTransactionManager List Object public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == public public return new public public return public public return TransactionTemplate PlatformTransactionManager public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public throw new catch public public return new public public throw new public public throw new TransactionTemplate PlatformTransactionManager List public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.getRollbackOnly() call Transaction.getRollbackOnly() call Transaction.getRollbackOnly() call Transaction.getRollbackOnly() call Transaction.getRollbackOnly() new decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return catch public public return new public public return public public return TransactionTemplate PlatformTransactionManager List Object public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == public public return new public public return public public return TransactionTemplate PlatformTransactionManager List Object public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! new decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == ! public public return new public public return public public return Object UserTransaction JtaTransactionManager TransactionTemplate List public public throws decl_stmt UserTransaction = call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() decl_stmt org.springframework.transaction.jta.JtaTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! return ! == ! ! public public ! return JtaTransactionManager MockJtaTransaction UserTransaction TransactionTemplate List TransactionManager Object public public throws decl_stmt UserTransaction final final = decl_stmt TransactionManager final final = call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call UserTransaction.getStatus() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() decl_stmt org.springframework.transaction.jta.JtaTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! new decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public try decl_stmt org.springframework.tests.transaction.MockJtaTransaction = new call TransactionManager.suspend() call TransactionManager.suspend() call TransactionManager.suspend() call TransactionManager.suspend() call TransactionManager.suspend() catch return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == ! MockJtaTransaction public public try decl_stmt org.springframework.tests.transaction.MockJtaTransaction = new catch return new public public return public public return TransactionTemplate PlatformTransactionManager List Object public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! return == ! public public ! ! return TransactionTemplate PlatformTransactionManager public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected protected protected TransactionTemplate PlatformTransactionManager List Object public public call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! new decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == ! public public return JdoDialect TransactionTemplate List JdoTransactionManager Object ConnectionHandle DataSource Connection public public throws decl_stmt javax.sql.DataSource final final = decl_stmt org.springframework.orm.jdo.JdoDialect = decl_stmt sun.rmi.transport.Connection final final = decl_stmt org.springframework.jdbc.datasource.ConnectionHandle = new call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.support.TransactionTemplate = new call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) decl_stmt org.springframework.orm.jdo.JdoTransactionManager = new call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == ! ! public public return JdoDialect TransactionTemplate List JdoTransactionManager Object ConnectionHandle DataSource Connection public public throws decl_stmt javax.sql.DataSource final final = decl_stmt org.springframework.orm.jdo.JdoDialect = decl_stmt sun.rmi.transport.Connection final final = decl_stmt org.springframework.jdbc.datasource.ConnectionHandle = new call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.support.TransactionTemplate = new call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) decl_stmt org.springframework.orm.jdo.JdoTransactionManager = new call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return == ! ! public public return JdoDialect TransactionTemplate List JdoTransactionManager Object DataSource public public throws decl_stmt javax.sql.DataSource final final = decl_stmt org.springframework.orm.jdo.JdoDialect final final = call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getConnectionFactory() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.support.TransactionTemplate = new call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) decl_stmt org.springframework.orm.jdo.JdoTransactionManager = new call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.orm.jdo.JdoTransactionManager.afterPropertiesSet() call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! return == ! ! public public ! return public public throws public public throws JdoDialect Object DatabaseMetaData TransactionTemplate Savepoint List JdoTransactionManager Object ConnectionHandle DataSource Connection private private final final throws decl_stmt javax.sql.DataSource final final = decl_stmt org.springframework.orm.jdo.JdoDialect = decl_stmt sun.rmi.transport.Connection final final = decl_stmt java.sql.DatabaseMetaData = decl_stmt java.sql.Savepoint = call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) + decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt org.springframework.jdbc.datasource.ConnectionHandle = new call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call org.springframework.orm.jdo.JdoDialect.getJdbcConnection(PersistenceManager,boolean) call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() call Transaction.isActive() ! decl_stmt org.springframework.orm.jdo.JdoTransactionManager = new call JdoTransactionManager.setNestedTransactionAllowed() call JdoTransactionManager.setNestedTransactionAllowed() call JdoTransactionManager.setNestedTransactionAllowed() call JdoTransactionManager.setNestedTransactionAllowed() call JdoTransactionManager.setNestedTransactionAllowed() call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setDataSource(DataSource) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.orm.jdo.JdoTransactionManager.setJdoDialect(JdoDialect) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) call org.springframework.transaction.support.TransactionTemplate.setTransactionManager(PlatformTransactionManager) decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public if decl_stmt java.lang.Object = else call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected return == ! ! + Object public public if decl_stmt java.lang.Object = else new protected protected return protected protected TransactionTemplate PlatformTransactionManager public public call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() call PersistenceManager.currentTransaction() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! public public