org.springframework.web.context.request.async java.util.concurrent.Callable import javax.servlet.http.HttpServletRequest import org.junit.Before import org.junit.Test import org.springframework.core.task.AsyncTaskExecutor import org.springframework.core.task.SimpleAsyncTaskExecutor import org.springframework.mock.web.test.MockHttpServletRequest import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.web.context.request.async.WebAsyncManagerTests AsyncWebRequest MockHttpServletRequest WebAsyncManager public public = new = new = WebAsyncManager public public throws decl_stmt org.springframework.web.context.request.async.WebAsyncManager = new try call org.springframework.web.context.request.async.WebAsyncManager.startCallableProcessing(Callable,Object) call org.springframework.web.context.request.async.WebAsyncManager.startCallableProcessing(Callable,Object) call org.springframework.web.context.request.async.WebAsyncManager.startCallableProcessing(Callable,Object) call org.springframework.web.context.request.async.WebAsyncManager.startCallableProcessing(Callable,Object) call org.springframework.web.context.request.async.WebAsyncManager.startCallableProcessing(Callable,Object) new catch try call org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(DeferredResult,Object) call org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(DeferredResult,Object) call org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(DeferredResult,Object) call org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(DeferredResult,Object) call org.springframework.web.context.request.async.WebAsyncManager.startDeferredResultProcessing(DeferredResult,Object) new < catch public public = public = public int CallableProcessingInterceptor decl Callable public public throws decl_stmt int = decl_stmt java.util.concurrent.Callable < = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = new Exception CallableProcessingInterceptor decl Callable public public throws decl_stmt Exception = new decl_stmt java.util.concurrent.Callable < = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = Exception decl Callable CallableProcessingInterceptor public public throws decl_stmt java.util.concurrent.Callable < = new decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = try catch Exception decl Callable CallableProcessingInterceptor public public throws decl_stmt java.util.concurrent.Callable < = new decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = Exception decl Callable CallableProcessingInterceptor public public throws decl_stmt java.util.concurrent.Callable < = new decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = Exception decl Callable CallableProcessingInterceptor CallableProcessingInterceptor public public throws decl_stmt java.util.concurrent.Callable < = new decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = decl WebAsyncTask AsyncTaskExecutor public public throws decl_stmt org.springframework.core.task.AsyncTaskExecutor = decl_stmt org.springframework.web.context.request.async.WebAsyncTask < = new < public public throws try < catch decl DeferredResult String DeferredResultProcessingInterceptor public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt java.lang.String = decl_stmt org.springframework.web.context.request.async.DeferredResultProcessingInterceptor = call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() decl DeferredResult Exception DeferredResultProcessingInterceptor public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.DeferredResultProcessingInterceptor = try catch decl DeferredResult Exception DeferredResultProcessingInterceptor public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.DeferredResultProcessingInterceptor = call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() decl DeferredResult Exception DeferredResultProcessingInterceptor public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.DeferredResultProcessingInterceptor = call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() public public throws try < catch private private private private public public throws if instanceof throw return public public