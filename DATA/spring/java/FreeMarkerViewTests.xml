org.springframework.web.servlet.view.freemarker java.io.FileNotFoundException import java.io.IOException import java.io.StringReader import java.io.Writer import java.util.HashMap import java.util.Locale import java.util.Map import javax.servlet.http.HttpServletResponse import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.context.ApplicationContextException import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockServletContext import org.springframework.web.context.WebApplicationContext import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.servlet.DispatcherServlet import org.springframework.web.servlet.View import org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver import org.springframework.web.servlet.view.AbstractView import org.springframework.web.servlet.view.InternalResourceView import org.springframework.web.servlet.view.RedirectView import freemarker.ext.servlet.AllHttpScopesHashModel import freemarker.template.Configuration import freemarker.template.Template import freemarker.template.TemplateException import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.web.servlet.view.freemarker.FreeMarkerViewTests ExpectedException WebApplicationContext FreeMarkerView public public throws decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerView = new decl_stmt org.springframework.web.context.WebApplicationContext = call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() new < call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() new call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() FreeMarkerView public public throws decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerView = new call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call FreeMarkerView.afterPropertiesSet() call FreeMarkerView.afterPropertiesSet() call FreeMarkerView.afterPropertiesSet() call FreeMarkerView.afterPropertiesSet() call FreeMarkerView.afterPropertiesSet() decl Map FreeMarkerView MockHttpServletRequest WebApplicationContext MockServletContext decl Map FreeMarkerConfigurer HttpServletResponse public public throws decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerView = new decl_stmt org.springframework.web.context.WebApplicationContext = decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt java.util.Map < = new < decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer = new call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new decl_stmt HttpServletResponse = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call FreeMarkerView.render() call FreeMarkerView.render() call FreeMarkerView.render() call FreeMarkerView.render() call FreeMarkerView.render() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() decl Map FreeMarkerView MockHttpServletRequest WebApplicationContext MockServletContext decl Map FreeMarkerConfigurer HttpServletResponse public public throws decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerView = new decl_stmt org.springframework.web.context.WebApplicationContext = decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt java.util.Map < = new < decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer = new call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getBeansOfType() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setUrl() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() call FreeMarkerView.setApplicationContext() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new decl_stmt HttpServletResponse = new call HttpServletResponse.setContentType() call HttpServletResponse.setContentType() call HttpServletResponse.setContentType() call HttpServletResponse.setContentType() call HttpServletResponse.setContentType() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call FreeMarkerView.render() call FreeMarkerView.render() call FreeMarkerView.render() call FreeMarkerView.render() call FreeMarkerView.render() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() call HttpServletResponse.getContentType() StaticWebApplicationContext FreeMarkerViewResolver FreeMarkerConfigurer View public public throws decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer = new call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() call FreeMarkerConfigurer.setConfiguration() new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.getBeanFactory() call StaticWebApplicationContext.getBeanFactory() call StaticWebApplicationContext.getBeanFactory() call StaticWebApplicationContext.getBeanFactory() call StaticWebApplicationContext.getBeanFactory() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver = new call FreeMarkerViewResolver.setApplicationContext() call FreeMarkerViewResolver.setApplicationContext() call FreeMarkerViewResolver.setApplicationContext() call FreeMarkerViewResolver.setApplicationContext() call FreeMarkerViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.View = call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() = call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call FreeMarkerViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() AllHttpScopesHashModel public public final final throws if || return new new public public throws instanceof decl_stmt AllHttpScopesHashModel = call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get() else throw new AllHttpScopesHashModel public public throws instanceof decl_stmt AllHttpScopesHashModel = call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get() call AllHttpScopesHashModel.get()