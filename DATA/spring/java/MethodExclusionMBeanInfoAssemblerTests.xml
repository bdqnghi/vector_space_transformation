org.springframework.jmx.export.assembler java.lang.reflect.Method import java.util.Properties import javax.management.modelmbean.ModelMBeanAttributeInfo import javax.management.modelmbean.ModelMBeanInfo import org.junit.Test import org.springframework.jmx.JmxTestBean import static static org.junit.Assert.* import class org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssemblerTests super super extends String protected protected return protected protected return protected protected return protected protected return MethodExclusionMBeanInfoAssembler protected protected decl_stmt org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler = new call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethods(String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethods(String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethods(String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethods(String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethods(String) new return ModelMBeanInfo ModelMBeanAttributeInfo public public throws decl_stmt ModelMBeanInfo = decl_stmt javax.management.modelmbean.ModelMBeanAttributeInfo = call ModelMBeanInfo.getAttribute() call ModelMBeanInfo.getAttribute() call ModelMBeanInfo.getAttribute() call ModelMBeanInfo.getAttribute() call ModelMBeanInfo.getAttribute() call ModelMBeanAttributeInfo.isReadable() call ModelMBeanAttributeInfo.isReadable() call ModelMBeanAttributeInfo.isReadable() call ModelMBeanAttributeInfo.isReadable() call ModelMBeanAttributeInfo.isReadable() call ModelMBeanAttributeInfo.isWritable() call ModelMBeanAttributeInfo.isWritable() call ModelMBeanAttributeInfo.isWritable() call ModelMBeanAttributeInfo.isWritable() call ModelMBeanAttributeInfo.isWritable() Properties MethodExclusionMBeanInfoAssembler String Method public public throws decl_stmt java.lang.String final final = decl_stmt org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethodMappings(Properties) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethodMappings(Properties) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethodMappings(Properties) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethodMappings(Properties) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.setIgnoredMethodMappings(Properties) decl_stmt com.sun.jdi.Method = call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) call org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String)