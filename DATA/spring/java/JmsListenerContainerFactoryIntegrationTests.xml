org.springframework.jms.config java.lang.reflect.Method import java.util.HashMap import java.util.Map import javax.jms.JMSException import javax.jms.Message import javax.jms.MessageListener import javax.jms.Session import javax.jms.TextMessage import org.junit.Before import org.junit.Test import org.springframework.aop.framework.ProxyFactory import org.springframework.beans.factory.support.StaticListableBeanFactory import org.springframework.jms.StubTextMessage import org.springframework.jms.listener.DefaultMessageListenerContainer import org.springframework.jms.listener.SessionAwareMessageListener import org.springframework.jms.support.converter.MessageConversionException import org.springframework.jms.support.converter.MessageConverter import org.springframework.messaging.handler.annotation.Header import org.springframework.messaging.handler.annotation.Payload import org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory import org.springframework.util.ReflectionUtils import static static org.junit.Assert.* import static static org.mockito.Mockito.* import class org.springframework.jms.config.JmsListenerContainerFactoryIntegrationTests JmsEndpointSampleBean DefaultJmsListenerContainerFactory DefaultMessageHandlerMethodFactory JmsEndpointSampleInterface public public Message MethodJmsListenerEndpoint public public throws call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() new decl_stmt org.springframework.jms.config.MethodJmsListenerEndpoint = call JmsEndpointSampleInterface.getClass() call JmsEndpointSampleInterface.getClass() call JmsEndpointSampleInterface.getClass() call JmsEndpointSampleInterface.getClass() call JmsEndpointSampleInterface.getClass() decl_stmt org.springframework.messaging.Message = new call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() Message MethodJmsListenerEndpoint ProxyFactory public public throws decl_stmt org.springframework.aop.framework.ProxyFactory = new = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() new decl_stmt org.springframework.jms.config.MethodJmsListenerEndpoint = decl_stmt org.springframework.messaging.Message = new call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() Message MethodJmsListenerEndpoint ProxyFactory public public throws decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() call DefaultJmsListenerContainerFactory.setMessageConverter() new decl_stmt org.springframework.jms.config.MethodJmsListenerEndpoint = decl_stmt org.springframework.messaging.Message = new call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() call Message.setStringProperty() Object DefaultMessageListenerContainer private private throws decl_stmt org.springframework.jms.listener.DefaultMessageListenerContainer = call DefaultJmsListenerContainerFactory.createListenerContainer() call DefaultJmsListenerContainerFactory.createListenerContainer() call DefaultJmsListenerContainerFactory.createListenerContainer() call DefaultJmsListenerContainerFactory.createListenerContainer() call DefaultJmsListenerContainerFactory.createListenerContainer() decl_stmt java.lang.Object = call DefaultMessageListenerContainer.getMessageListener() call DefaultMessageListenerContainer.getMessageListener() call DefaultMessageListenerContainer.getMessageListener() call DefaultMessageListenerContainer.getMessageListener() call DefaultMessageListenerContainer.getMessageListener() if instanceof < else private private + + call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() call JmsEndpointSampleBean.invocations() MethodJmsListenerEndpoint private private decl_stmt org.springframework.jms.config.MethodJmsListenerEndpoint = new call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setBean(Object) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMethod(Method) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) call org.springframework.jms.config.MethodJmsListenerEndpoint.setMessageHandlerMethodFactory(MessageHandlerMethodFactory) return private private < < return private private call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) new call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() public public public public throws return new String public public throws decl_stmt java.lang.String = return call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale)