org.springframework.dao.support java.util.Map import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.BeanFactoryUtils import org.springframework.beans.factory.InitializingBean import org.springframework.beans.factory.ListableBeanFactory import org.springframework.util.Assert import org.springframework.util.ReflectionUtils import class org.springframework.dao.support.PersistenceExceptionTranslationInterceptor super super implements boolean PersistenceExceptionTranslator ListableBeanFactory public public = public public = public public throws if == if ! instanceof throw new = public public if == && == throw new public public throws try return catch if ! && throw else if == = throw ChainedPersistenceExceptionTranslator decl Map protected protected decl_stmt java.util.Map < = decl_stmt org.springframework.dao.support.ChainedPersistenceExceptionTranslator = new for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call org.springframework.dao.support.ChainedPersistenceExceptionTranslator.addDelegate(PersistenceExceptionTranslator) call org.springframework.dao.support.ChainedPersistenceExceptionTranslator.addDelegate(PersistenceExceptionTranslator) call org.springframework.dao.support.ChainedPersistenceExceptionTranslator.addDelegate(PersistenceExceptionTranslator) call org.springframework.dao.support.ChainedPersistenceExceptionTranslator.addDelegate(PersistenceExceptionTranslator) call org.springframework.dao.support.ChainedPersistenceExceptionTranslator.addDelegate(PersistenceExceptionTranslator) return