org.springframework.web.client java.io.IOException import java.net.URI import java.net.URISyntaxException import java.nio.charset.Charset import java.util.Collections import java.util.EnumSet import java.util.Set import java.util.concurrent.CountDownLatch import java.util.concurrent.ExecutionException import java.util.concurrent.Future import java.util.concurrent.TimeUnit import org.junit.Assert import org.junit.Test import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.http.HttpEntity import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.http.HttpRequest import org.springframework.http.HttpStatus import org.springframework.http.MediaType import org.springframework.http.ResponseEntity import org.springframework.http.client.AsyncClientHttpRequestExecution import org.springframework.http.client.AsyncClientHttpRequestInterceptor import org.springframework.http.client.ClientHttpResponse import org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory import org.springframework.http.client.support.HttpRequestWrapper import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MultiValueMap import org.springframework.util.concurrent.ListenableFuture import org.springframework.util.concurrent.ListenableFutureCallback import static static org.junit.Assert.assertArrayEquals import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertFalse import static static org.junit.Assert.assertNotNull import static static org.junit.Assert.assertNull import static static org.junit.Assert.assertSame import static static org.junit.Assert.assertTrue import static static org.junit.Assert.fail import class org.springframework.web.client.AsyncRestTemplateIntegrationTests super super extends AsyncRestTemplate decl Future decl ResponseEntity public public throws decl_stmt java.util.concurrent.Future < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + decl_stmt org.springframework.http.ResponseEntity < = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() decl Future public public throws decl_stmt java.util.concurrent.Future < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() decl ListenableFuture public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < < public public < public public public public < public public decl ListenableFuture public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() decl Future decl ResponseEntity public public throws decl_stmt java.util.concurrent.Future < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + decl_stmt org.springframework.http.ResponseEntity < = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() decl Future decl ResponseEntity public public throws decl_stmt java.util.concurrent.Future < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + decl_stmt org.springframework.http.ResponseEntity < = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() decl Future decl ResponseEntity public public throws decl_stmt java.util.concurrent.Future < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + decl_stmt org.springframework.http.ResponseEntity < = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() decl Future decl ResponseEntity public public throws decl_stmt java.util.concurrent.Future < < = call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.AsyncRestTemplate.getForEntity(String,Class,Map) + decl_stmt org.springframework.http.ResponseEntity < = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() HttpHeaders decl Future public public throws decl_stmt java.util.concurrent.Future < = call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) + decl_stmt org.springframework.http.HttpHeaders = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.springframework.http.HttpHeaders.containsKey(Object) call org.springframework.http.HttpHeaders.containsKey(Object) call org.springframework.http.HttpHeaders.containsKey(Object) call org.springframework.http.HttpHeaders.containsKey(Object) call org.springframework.http.HttpHeaders.containsKey(Object) decl ListenableFuture public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < public public public public public public public public decl ListenableFuture public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) call org.springframework.web.client.AsyncRestTemplate.headForHeaders(String,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() HttpHeaders URI decl Future decl HttpEntity public public throws decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) new decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt java.util.concurrent.Future < = call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) + decl_stmt java.net.URI = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() new + URI HttpHeaders decl ListenableFuture decl HttpEntity public public throws decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) new decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt java.net.URI final final = new + decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < public public public public public public public public URI HttpHeaders decl ListenableFuture decl HttpEntity public public throws decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) new decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt java.net.URI final final = new + decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) call org.springframework.web.client.AsyncRestTemplate.postForLocation(String,HttpEntity,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() decl Future decl ResponseEntity decl HttpEntity public public throws decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt java.util.concurrent.Future < < = call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) + decl_stmt org.springframework.http.ResponseEntity < = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() decl ListenableFuture decl HttpEntity public public throws decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt org.springframework.util.concurrent.ListenableFuture < < = call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < < public public < public public public public < public public decl ListenableFuture decl HttpEntity public public throws decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt org.springframework.util.concurrent.ListenableFuture < < = call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) call org.springframework.web.client.AsyncRestTemplate.postForEntity(URI,HttpEntity,Class) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() decl Future decl HttpEntity public public throws decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt java.util.concurrent.Future < = call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) + call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() decl ListenableFuture decl HttpEntity public public throws decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) call org.springframework.web.client.AsyncRestTemplate.put(String,HttpEntity,Object) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < public public public public public public public public decl Future public public throws decl_stmt java.util.concurrent.Future < = call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) new + call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() decl ListenableFuture public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) new + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < public public public public public public public public decl ListenableFuture public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) call org.springframework.web.client.AsyncRestTemplate.delete(String,Map) new + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() :: decl ListenableFuture CountDownLatch Throwable decl HttpClientErrorException public public throws decl_stmt HttpClientErrorException final final final = new decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < public public public public instanceof = call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() try call decl ListenableFuture.get() call decl ListenableFuture.get() call decl ListenableFuture.get() call decl ListenableFuture.get() call decl ListenableFuture.get() catch decl_stmt java.lang.Throwable = instanceof call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) public public public public instanceof = decl Future HttpClientErrorException public public throws try decl_stmt java.util.concurrent.Future < = call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) + call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() catch instanceof decl_stmt HttpClientErrorException = call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() decl ListenableFuture HttpClientErrorException public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() new < public public public public instanceof decl_stmt HttpClientErrorException = call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() public public HttpClientErrorException public public instanceof decl_stmt HttpClientErrorException = call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusCode() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getStatusText() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() call HttpClientErrorException.getResponseBodyAsString() decl ListenableFuture public public throws decl_stmt org.springframework.util.concurrent.ListenableFuture < = call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) call org.springframework.web.client.AsyncRestTemplate.execute(String,HttpMethod,AsyncRequestCallback,ResponseExtractor,Map) + call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() call decl ListenableFuture.addCallback() instanceof =