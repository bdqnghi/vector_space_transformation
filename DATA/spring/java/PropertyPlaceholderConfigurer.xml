org.springframework.beans.factory.config java.util.Properties import java.util.Set import org.springframework.beans.BeansException import org.springframework.core.Constants import org.springframework.core.SpringProperties import org.springframework.core.env.AbstractEnvironment import org.springframework.util.PropertyPlaceholderHelper import org.springframework.util.PropertyPlaceholderHelper.PlaceholderResolver import org.springframework.util.StringValueResolver import class org.springframework.beans.factory.config.PropertyPlaceholderConfigurer super super extends int int int boolean int Constants public public throws = call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) public public = public public = String protected protected decl_stmt java.lang.String = if == = if == = if == && == = return protected protected return String protected protected try decl_stmt java.lang.String = if == && = return catch if + + + return StringValueResolver protected protected throws decl_stmt org.springframework.util.StringValueResolver = new PlaceholderResolver PropertyPlaceholderHelper protected protected < decl_stmt org.springframework.util.PropertyPlaceholderHelper = new decl_stmt org.springframework.util.PlaceholderResolver = new return call org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(String,PlaceholderResolver) call org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(String,PlaceholderResolver) call org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(String,PlaceholderResolver) call org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(String,PlaceholderResolver) call org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(String,PlaceholderResolver) String public public throws decl_stmt java.lang.String = if = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() return call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) : public public return