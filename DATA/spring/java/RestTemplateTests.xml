org.springframework.web.client java.io.ByteArrayInputStream import java.io.IOException import java.net.URI import java.util.Collections import java.util.EnumSet import java.util.HashMap import java.util.List import java.util.Map import java.util.Set import org.junit.Before import org.junit.Test import org.springframework.core.ParameterizedTypeReference import org.springframework.http.HttpEntity import org.springframework.http.HttpHeaders import org.springframework.http.HttpInputMessage import org.springframework.http.HttpMethod import org.springframework.http.HttpStatus import org.springframework.http.MediaType import org.springframework.http.ResponseEntity import org.springframework.http.client.ClientHttpRequest import org.springframework.http.client.ClientHttpRequestFactory import org.springframework.http.client.ClientHttpResponse import org.springframework.http.converter.GenericHttpMessageConverter import org.springframework.http.converter.HttpMessageConverter import org.springframework.web.util.DefaultUriTemplateHandler import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class annotation org.springframework.web.client.RestTemplateTests HttpMessageConverter ClientHttpRequest ResponseErrorHandler ClientHttpResponse RestTemplate ClientHttpRequestFactory public public = = = = = = new < > call RestTemplate.setRequestFactory() call RestTemplate.setRequestFactory() call RestTemplate.setRequestFactory() call RestTemplate.setRequestFactory() call RestTemplate.setRequestFactory() call org.springframework.web.client.RestTemplate.setErrorHandler(ResponseErrorHandler) call org.springframework.web.client.RestTemplate.setErrorHandler(ResponseErrorHandler) call org.springframework.web.client.RestTemplate.setErrorHandler(ResponseErrorHandler) call org.springframework.web.client.RestTemplate.setErrorHandler(ResponseErrorHandler) call org.springframework.web.client.RestTemplate.setErrorHandler(ResponseErrorHandler) HttpStatus public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) HttpStatus public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) HttpStatus decl Map public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.util.Map < = call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) HttpStatus decl Map public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() new try call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) call org.springframework.web.client.RestTemplate.execute(String,HttpMethod,RequestCallback,ResponseExtractor,Map) catch HttpStatus HttpHeaders MediaType String String HttpHeaders public public throws call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt java.lang.String = decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.lang.String = call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) MediaType HttpHeaders HttpHeaders HttpStatus MediaType public public throws call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new decl_stmt org.springframework.http.MediaType = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() new call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() try call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) catch HttpStatus HttpHeaders MediaType decl ResponseEntity String HttpHeaders public public throws call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt java.lang.String = decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.ResponseEntity < = call org.springframework.web.client.RestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.RestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.RestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.RestTemplate.getForEntity(String,Class,Map) call org.springframework.web.client.RestTemplate.getForEntity(String,Class,Map) call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() String decl Map DefaultUriTemplateHandler URI public public throws decl_stmt org.springframework.web.util.DefaultUriTemplateHandler = new call org.springframework.web.util.DefaultUriTemplateHandler.setParsePath(boolean) call org.springframework.web.util.DefaultUriTemplateHandler.setParsePath(boolean) call org.springframework.web.util.DefaultUriTemplateHandler.setParsePath(boolean) call org.springframework.web.util.DefaultUriTemplateHandler.setParsePath(boolean) call org.springframework.web.util.DefaultUriTemplateHandler.setParsePath(boolean) call org.springframework.web.client.RestTemplate.setUriTemplateHandler(UriTemplateHandler) call org.springframework.web.client.RestTemplate.setUriTemplateHandler(UriTemplateHandler) call org.springframework.web.client.RestTemplate.setUriTemplateHandler(UriTemplateHandler) call org.springframework.web.client.RestTemplate.setUriTemplateHandler(UriTemplateHandler) call org.springframework.web.client.RestTemplate.setUriTemplateHandler(UriTemplateHandler) decl_stmt java.net.URI = new call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() new call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) HttpStatus HttpHeaders HttpHeaders public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.HttpHeaders = call org.springframework.web.client.RestTemplate.headForHeaders(String,Map) call org.springframework.web.client.RestTemplate.headForHeaders(String,Map) call org.springframework.web.client.RestTemplate.headForHeaders(String,Map) call org.springframework.web.client.RestTemplate.headForHeaders(String,Map) call org.springframework.web.client.RestTemplate.headForHeaders(String,Map) URI HttpStatus HttpHeaders URI String public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt java.lang.String = call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new decl_stmt java.net.URI = new call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.net.URI = call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) HttpStatus MediaType HttpHeaders String decl HttpEntity HttpHeaders URI URI HttpHeaders public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt java.lang.String = decl_stmt org.springframework.http.MediaType = call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new decl_stmt java.net.URI = new call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt java.net.URI = call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) HttpStatus HttpHeaders String decl HttpEntity HttpHeaders URI URI HttpHeaders public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt java.lang.String = call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new decl_stmt java.net.URI = new call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt java.net.URI = call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) HttpStatus HttpHeaders URI String public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt java.lang.String = call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.net.URI = call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) HttpStatus HttpHeaders HttpHeaders public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() HttpStatus HttpHeaders String MediaType Integer Integer HttpHeaders public public throws decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new decl_stmt java.lang.String = call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt java.lang.Integer = decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() new call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.lang.Integer = call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) HttpStatus HttpHeaders String MediaType decl ResponseEntity Integer HttpHeaders public public throws decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new decl_stmt java.lang.String = call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt java.lang.Integer = decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() new call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.ResponseEntity < = call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() HttpStatus HttpHeaders MediaType HttpHeaders Integer public public throws decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.lang.Integer = call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.web.client.RestTemplate.postForObject(URI,Object,Class) call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() HttpStatus HttpHeaders MediaType HttpHeaders decl ResponseEntity public public throws decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.ResponseEntity < = call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call org.springframework.web.client.RestTemplate.postForEntity(String,Object,Class,Map) call decl ResponseEntity.hasBody() call decl ResponseEntity.hasBody() call decl ResponseEntity.hasBody() call decl ResponseEntity.hasBody() call decl ResponseEntity.hasBody() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() HttpStatus String public public throws call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt java.lang.String = call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) HttpStatus HttpHeaders public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.web.client.RestTemplate.put(URI,Object) call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() HttpStatus public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call org.springframework.web.client.RestTemplate.delete(URI) call org.springframework.web.client.RestTemplate.delete(URI) call org.springframework.web.client.RestTemplate.delete(URI) call org.springframework.web.client.RestTemplate.delete(URI) call org.springframework.web.client.RestTemplate.delete(URI) decl EnumSet HttpStatus HttpHeaders decl Set public public throws call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt org.springframework.http.HttpHeaders = new decl_stmt java.util.EnumSet < = call org.springframework.http.HttpHeaders.setAllow(Set) call org.springframework.http.HttpHeaders.setAllow(Set) call org.springframework.http.HttpHeaders.setAllow(Set) call org.springframework.http.HttpHeaders.setAllow(Set) call org.springframework.http.HttpHeaders.setAllow(Set) call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt java.util.Set < = call org.springframework.web.client.RestTemplate.optionsForAllow(String,Map) call org.springframework.web.client.RestTemplate.optionsForAllow(String,Map) call org.springframework.web.client.RestTemplate.optionsForAllow(String,Map) call org.springframework.web.client.RestTemplate.optionsForAllow(String,Map) call org.springframework.web.client.RestTemplate.optionsForAllow(String,Map) String MediaType public public throws decl_stmt java.lang.String = call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() call ClientHttpRequest.getHeaders() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() new try call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) call org.springframework.web.client.RestTemplate.getForObject(URI,Class) catch + String HttpStatus HttpHeaders decl HttpEntity HttpHeaders decl ResponseEntity Integer HttpHeaders public public throws call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call org.springframework.http.converter.HttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() call HttpMessageConverter.canWrite() decl_stmt java.lang.String = call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.http.converter.HttpMessageConverter.write(T,MediaType,HttpOutputMessage) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt java.lang.Integer = decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() new call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.HttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt org.springframework.http.ResponseEntity < = call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() HttpStatus GenericHttpMessageConverter HttpHeaders decl HttpEntity String decl List HttpHeaders decl ResponseEntity decl ParameterizedTypeReference HttpHeaders public public throws decl_stmt org.springframework.http.converter.GenericHttpMessageConverter = call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) < > decl_stmt org.springframework.core.ParameterizedTypeReference < < = new < < call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call GenericHttpMessageConverter.getSupportedMediaTypes() call GenericHttpMessageConverter.getSupportedMediaTypes() call GenericHttpMessageConverter.getSupportedMediaTypes() call GenericHttpMessageConverter.getSupportedMediaTypes() call GenericHttpMessageConverter.getSupportedMediaTypes() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() call ClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.converter.GenericHttpMessageConverter.canWrite(Type,Class,MediaType) call org.springframework.http.converter.GenericHttpMessageConverter.canWrite(Type,Class,MediaType) call org.springframework.http.converter.GenericHttpMessageConverter.canWrite(Type,Class,MediaType) call org.springframework.http.converter.GenericHttpMessageConverter.canWrite(Type,Class,MediaType) call org.springframework.http.converter.GenericHttpMessageConverter.canWrite(Type,Class,MediaType) decl_stmt java.lang.String = call org.springframework.http.converter.GenericHttpMessageConverter.write(T,Type,MediaType,HttpOutputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.write(T,Type,MediaType,HttpOutputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.write(T,Type,MediaType,HttpOutputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.write(T,Type,MediaType,HttpOutputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.write(T,Type,MediaType,HttpOutputMessage) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) call org.springframework.web.client.ResponseErrorHandler.hasError(ClientHttpResponse) decl_stmt java.util.List < = decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.HttpHeaders.setContentLength(long) call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getHeaders() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() call ClientHttpResponse.getBody() new call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call GenericHttpMessageConverter.canRead() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call org.springframework.http.converter.GenericHttpMessageConverter.read(Type,Class,HttpInputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.read(Type,Class,HttpInputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.read(Type,Class,HttpInputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.read(Type,Class,HttpInputMessage) call org.springframework.http.converter.GenericHttpMessageConverter.read(Type,Class,HttpInputMessage) call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call decl ParameterizedTypeReference.getType() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() decl_stmt HttpStatus = call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusCode() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call org.springframework.http.client.ClientHttpResponse.getStatusText() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() call HttpStatus.getReasonPhrase() decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) decl_stmt org.springframework.http.HttpEntity < = new <> decl_stmt org.springframework.http.ResponseEntity < < = call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getBody() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call decl ResponseEntity.getHeaders() call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode()