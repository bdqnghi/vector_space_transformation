org.springframework.web.method.annotation java.io.IOException import java.lang.reflect.Method import java.util.ArrayList import java.util.Collections import java.util.List import java.util.Set import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.junit.Before import org.junit.Test import org.springframework.core.MethodIntrospector import org.springframework.core.annotation.AnnotationUtils import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.ui.Model import org.springframework.util.ReflectionUtils import org.springframework.web.bind.annotation.ModelAttribute import org.springframework.web.bind.annotation.RequestMapping import org.springframework.web.bind.support.DefaultDataBinderFactory import org.springframework.web.bind.support.DefaultSessionAttributeStore import org.springframework.web.bind.support.SessionAttributeStore import org.springframework.web.bind.support.WebDataBinderFactory import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.method.HandlerMethod import org.springframework.web.method.support.HandlerMethodArgumentResolverComposite import org.springframework.web.method.support.InvocableHandlerMethod import org.springframework.web.method.support.ModelAndViewContainer import static static org.junit.Assert.* import class org.springframework.web.method.annotation.ModelFactoryOrderingTests SessionAttributeStore decl ReflectionUtils Log NativeWebRequest ModelAndViewContainer public public = new = new new new = new new < public public throws new public public throws new public public throws new public public throws new HandlerMethodArgumentResolverComposite decl Set WebDataBinderFactory ModelFactory SessionAttributesHandler InvocableHandlerMethod decl List StringBuilder decl Class private private throws decl_stmt org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite = new call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) new call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) call org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.addResolver(HandlerMethodArgumentResolver) new decl_stmt org.springframework.web.bind.support.WebDataBinderFactory = new decl_stmt java.lang.Class < = decl_stmt java.util.Set < = decl_stmt java.util.List < = new < for : decl_stmt org.springframework.messaging.handler.invocation.InvocableHandlerMethod = new call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setHandlerMethodArgumentResolvers(HandlerMethodArgumentResolverComposite) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call org.springframework.messaging.handler.invocation.InvocableHandlerMethod.setDataBinderFactory(WebDataBinderFactory) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.springframework.web.method.annotation.SessionAttributesHandler = new decl_stmt org.springframework.web.method.annotation.ModelFactory = new call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) call org.springframework.web.method.annotation.ModelFactory.initModel(NativeWebRequest,ModelAndViewContainer,HandlerMethod) new if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() decl_stmt java.lang.StringBuilder = new for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl List private private decl_stmt java.util.List < = for : + + + + call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() < call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() private < private < return < public public < < throws < return public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public throws return new public public return == && !=