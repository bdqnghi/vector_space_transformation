org.springframework.messaging.support java.nio.charset.Charset import java.util.Arrays import java.util.HashMap import java.util.HashSet import java.util.Map import java.util.UUID import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.messaging.Message import org.springframework.messaging.MessageHeaders import org.springframework.util.IdGenerator import org.springframework.util.MimeTypeUtils import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import class org.springframework.messaging.support.MessageHeaderAccessorTests ExpectedException Charset MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() decl Map decl GenericMessage MessageHeaders MessageHeaderAccessor public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.messaging.support.GenericMessage < = new <> decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) decl Map decl GenericMessage MessageHeaders MessageHeaderAccessor public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.messaging.support.GenericMessage < = new <> decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call decl GenericMessage.getHeaders() call decl GenericMessage.getHeaders() call decl GenericMessage.getHeaders() call decl GenericMessage.getHeaders() call decl GenericMessage.getHeaders() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) decl Map decl GenericMessage MessageHeaders MessageHeaderAccessor public public decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.messaging.support.GenericMessage < = new <> decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.removeHeaders(String) call org.springframework.messaging.support.MessageHeaderAccessor.removeHeaders(String) call org.springframework.messaging.support.MessageHeaderAccessor.removeHeaders(String) call org.springframework.messaging.support.MessageHeaderAccessor.removeHeaders(String) call org.springframework.messaging.support.MessageHeaderAccessor.removeHeaders(String) decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) decl Map decl GenericMessage decl Map MessageHeaders MessageHeaderAccessor public public decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.messaging.support.GenericMessage < = new <> decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) decl Map decl GenericMessage decl Map MessageHeaders MessageHeaderAccessor public public decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.messaging.support.GenericMessage < = new <> decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.size() call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeaders(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.copyHeadersIfAbsent(Map) call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() new <> call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() decl Map decl Map decl Map MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) decl_stmt java.util.Map < = call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) decl_stmt java.util.Map < = call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) decl_stmt java.util.Map < = call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call org.springframework.messaging.support.MessageHeaderAccessor.toMap() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() MessageHeaders decl Message MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.Message < = call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) MessageHeaders decl Message MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.Message < = call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.support.MessageHeaderAccessor.setHeader(String,Object) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) MessageHeaderAccessor decl Message public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new decl_stmt org.springframework.messaging.Message < = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() TestMessageHeaderAccessor decl Message MessageHeaderAccessor public public decl_stmt TestMessageHeaderAccessor = new call TestMessageHeaderAccessor.setLeaveMutable() call TestMessageHeaderAccessor.setLeaveMutable() call TestMessageHeaderAccessor.setLeaveMutable() call TestMessageHeaderAccessor.setLeaveMutable() call TestMessageHeaderAccessor.setLeaveMutable() decl_stmt org.springframework.messaging.Message < = call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() decl Message MessageHeaderAccessor public public decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() TestMessageHeaderAccessor decl Message MessageHeaderAccessor public public decl_stmt TestMessageHeaderAccessor = new decl_stmt org.springframework.messaging.Message < = call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() call TestMessageHeaderAccessor.getMessageHeaders() decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() UUID MessageHeaderAccessor public public decl_stmt java.util.UUID final final = new decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() new public public return call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() public public return MessageHeaderAccessor public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() MessageHeaders MessageHeaderAccessor UUID public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() new public public return call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setLeaveMutable(boolean) decl_stmt org.springframework.messaging.MessageHeaders = call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getId() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() decl_stmt java.util.UUID final final = new call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() call MessageHeaderAccessor.setIdGenerator() new public public return call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setEnableTimestamp(boolean) call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.setImmutable() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.support.MessageHeaderAccessor.getMessageHeaders() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() call org.springframework.messaging.MessageHeaders.getTimestamp() public public return public public return StringBuilder String MessageHeaderAccessor String public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) new public public return decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String final final = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + decl_stmt java.lang.String = call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) + + = call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) + + = call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getShortLogMessage(Object) new public public return + + public public return public public return StringBuilder String MessageHeaderAccessor String public public decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = new call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) new public public return decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String final final = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + decl_stmt java.lang.String = call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) + + = call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) + + = call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) call org.springframework.messaging.support.MessageHeaderAccessor.getDetailedLogMessage(Object) new public public return + + public public return public public return public static public static < return new protected protected < return