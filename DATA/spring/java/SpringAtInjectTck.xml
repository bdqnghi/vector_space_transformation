org.springframework.context.annotation.jsr330 junit.framework.Test import org.atinject.tck.Tck import org.atinject.tck.auto.Car import org.atinject.tck.auto.Convertible import org.atinject.tck.auto.Drivers import org.atinject.tck.auto.DriversSeat import org.atinject.tck.auto.FuelTank import org.atinject.tck.auto.Seat import org.atinject.tck.auto.Tire import org.atinject.tck.auto.V8Engine import org.atinject.tck.auto.accessories.Cupholder import org.atinject.tck.auto.accessories.SpareTire import org.springframework.context.annotation.AnnotatedBeanDefinitionReader import org.springframework.context.annotation.Jsr330ScopeMetadataResolver import org.springframework.context.annotation.Primary import org.springframework.context.support.GenericApplicationContext import class org.springframework.context.annotation.jsr330.SpringAtInjectTck Car GenericApplicationContext AnnotatedBeanDefinitionReader public static public static decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.context.annotation.AnnotatedBeanDefinitionReader = new call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.setScopeMetadataResolver(ScopeMetadataResolver) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.setScopeMetadataResolver(ScopeMetadataResolver) new call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call org.springframework.context.annotation.AnnotatedBeanDefinitionReader.registerBean(Class,String,Class) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt Car = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() return