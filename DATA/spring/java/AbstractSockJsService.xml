org.springframework.web.socket.sockjs.support java.io.IOException import java.nio.charset.Charset import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.Date import java.util.HashSet import java.util.LinkedHashSet import java.util.List import java.util.Random import java.util.Set import java.util.concurrent.TimeUnit import javax.servlet.http.HttpServletRequest import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.http.HttpMethod import org.springframework.http.HttpStatus import org.springframework.http.InvalidMediaTypeException import org.springframework.http.MediaType import org.springframework.http.server.ServerHttpRequest import org.springframework.http.server.ServerHttpResponse import org.springframework.scheduling.TaskScheduler import org.springframework.util.Assert import org.springframework.util.CollectionUtils import org.springframework.util.DigestUtils import org.springframework.util.ObjectUtils import org.springframework.util.StringUtils import org.springframework.web.cors.CorsConfiguration import org.springframework.web.cors.CorsConfigurationSource import org.springframework.web.cors.CorsUtils import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.sockjs.SockJsException import org.springframework.web.socket.sockjs.SockJsService import org.springframework.web.util.WebUtils import class org.springframework.web.socket.sockjs.support.AbstractSockJsService super super implements boolean TaskScheduler boolean String Charset String Random long long int boolean int long Log SockJsRequestHandler String SockJsRequestHandler decl Set public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public < public < public < return String String String String decl String public final public final throws if == if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + return try catch decl_stmt java.lang.String = call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() + + : try if || if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + new else if if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + else if if ! && ! if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + return if if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + else if if if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + else if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + else decl_stmt java.lang.String = if != if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + return decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if ! && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + return else if ! || ! if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + return if != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + catch throw new protected protected if ! || ! || ! call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() return if || call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() return return String String int private private decl_stmt java.lang.String = decl_stmt int = call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) + decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) return call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - protected protected throws if return if ! if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + return return CorsConfiguration public public if ! && decl_stmt org.springframework.web.cors.CorsConfiguration = new call org.springframework.web.cors.CorsConfiguration.addAllowedOrigin(String) call org.springframework.web.cors.CorsConfiguration.addAllowedOrigin(String) call org.springframework.web.cors.CorsConfiguration.addAllowedOrigin(String) call org.springframework.web.cors.CorsConfiguration.addAllowedOrigin(String) call org.springframework.web.cors.CorsConfiguration.addAllowedOrigin(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.addAllowedHeader(String) call org.springframework.web.cors.CorsConfiguration.addAllowedHeader(String) call org.springframework.web.cors.CorsConfiguration.addAllowedHeader(String) call org.springframework.web.cors.CorsConfiguration.addAllowedHeader(String) call org.springframework.web.cors.CorsConfiguration.addAllowedHeader(String) return return protected protected + new + * protected protected protected protected call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() new < String public public throws if == if new decl_stmt java.lang.String = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) else if == if else String decl byte StringBuilder decl List String public public throws if ! return decl_stmt java.lang.String = decl_stmt byte = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt java.util.List < = if ! && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() return new