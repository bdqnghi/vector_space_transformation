org.springframework.aop.config java.util.ArrayList import java.util.List import org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator import org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator import org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.core.Ordered import org.springframework.util.Assert import class org.springframework.aop.config.AopConfigUtils String decl List public static public static return public static public static return public static public static return public static public static return public static public static return public static public static return BeanDefinition public static public static if decl_stmt org.springframework.beans.factory.config.BeanDefinition = call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() BeanDefinition static static if decl_stmt org.springframework.beans.factory.config.BeanDefinition = call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() BeanDefinition RootBeanDefinition int int private static private static < if decl_stmt org.springframework.beans.factory.config.BeanDefinition = if ! call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() decl_stmt int = call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() call org.springframework.beans.factory.config.BeanDefinition.getBeanClassName() decl_stmt int = if < call org.springframework.beans.factory.config.BeanDefinition.setBeanClassName(String) call org.springframework.beans.factory.config.BeanDefinition.setBeanClassName(String) call org.springframework.beans.factory.config.BeanDefinition.setBeanClassName(String) call org.springframework.beans.factory.config.BeanDefinition.setBeanClassName(String) call org.springframework.beans.factory.config.BeanDefinition.setBeanClassName(String) return decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setSource() call RootBeanDefinition.setSource() call RootBeanDefinition.setSource() call RootBeanDefinition.setSource() call RootBeanDefinition.setSource() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.setRole() call RootBeanDefinition.setRole() call RootBeanDefinition.setRole() call RootBeanDefinition.setRole() call RootBeanDefinition.setRole() return private static private static < return call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() decl Class private static private static for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt java.lang.Class < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() return throw new + +