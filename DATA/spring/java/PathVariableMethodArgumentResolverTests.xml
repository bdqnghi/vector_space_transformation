org.springframework.web.servlet.mvc.method.annotation static static org.junit.Assert.* import java.lang.reflect.Method import java.util.HashMap import java.util.Map import org.junit.Before import org.junit.Test import org.springframework.core.MethodParameter import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.web.bind.MissingPathVariableException import org.springframework.web.bind.annotation.PathVariable import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.HandlerMapping import org.springframework.web.servlet.View import class org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolverTests MethodParameter MockHttpServletRequest ModelAndViewContainer ServletWebRequest PathVariableMethodArgumentResolver MethodParameter Method public public throws = new decl_stmt com.sun.jdi.Method = = new = new = new = new = new new public public call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.supportsParameter(MethodParameter) decl Map String decl Map public public throws decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) decl_stmt java.lang.String = call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() decl_stmt java.util.Map < = < call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl Map String decl Map public public throws decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) decl_stmt java.util.Map < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) decl_stmt java.lang.String = call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() = < call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = public = public throws call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() call PathVariableMethodArgumentResolver.resolveArgument() public public = =