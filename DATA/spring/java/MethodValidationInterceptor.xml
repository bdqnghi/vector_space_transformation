org.springframework.validation.beanvalidation java.lang.reflect.Method import java.util.Set import javax.validation.ConstraintViolation import javax.validation.ConstraintViolationException import javax.validation.Validation import javax.validation.Validator import javax.validation.ValidatorFactory import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.hibernate.validator.HibernateValidator import org.springframework.core.BridgeMethodResolver import org.springframework.core.annotation.AnnotationUtils import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import org.springframework.validation.annotation.Validated import class org.springframework.validation.beanvalidation.MethodValidationInterceptor super super implements Method Method Method Validator decl Set Object Object Method public public throws if != decl_stmt java.lang.Object = decl_stmt com.sun.jdi.Method = decl_stmt java.util.Set < < try = < < catch = = < < if ! call Object.isEmpty() call Object.isEmpty() call Object.isEmpty() call Object.isEmpty() call Object.isEmpty() throw new decl_stmt java.lang.Object = = < < if ! call Object.isEmpty() call Object.isEmpty() call Object.isEmpty() call Object.isEmpty() call Object.isEmpty() throw new return else return Validated protected < protected < decl_stmt Validated = if == = return != call Validated.value() call Validated.value() call Validated.value() call Validated.value() call Validated.value() : new < public static public static return decl org decl hibernate decl validator public static public static < throws decl_stmt MethodValidator = call Validator.unwrap() call Validator.unwrap() call Validator.unwrap() call Validator.unwrap() call Validator.unwrap() decl_stmt java.util.Set < < = call decl org.validateAllParameters() call decl org.validateAllParameters() call decl org.validateAllParameters() call decl org.validateAllParameters() call decl org.validateAllParameters() if ! call decl hibernate.isEmpty() call decl hibernate.isEmpty() call decl hibernate.isEmpty() call decl hibernate.isEmpty() call decl hibernate.isEmpty() throw new decl_stmt java.lang.Object = = call decl org.validateReturnValue() call decl org.validateReturnValue() call decl org.validateReturnValue() call decl org.validateReturnValue() call decl org.validateReturnValue() if ! call decl hibernate.isEmpty() call decl hibernate.isEmpty() call decl hibernate.isEmpty() call decl hibernate.isEmpty() call decl hibernate.isEmpty() throw new return