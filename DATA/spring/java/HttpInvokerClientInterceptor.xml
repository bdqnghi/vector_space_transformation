org.springframework.remoting.httpinvoker java.io.IOException import java.io.InvalidClassException import java.net.ConnectException import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.springframework.aop.support.AopUtils import org.springframework.remoting.RemoteAccessException import org.springframework.remoting.RemoteConnectFailureException import org.springframework.remoting.RemoteInvocationFailureException import org.springframework.remoting.support.RemoteInvocation import org.springframework.remoting.support.RemoteInvocationBasedAccessor import org.springframework.remoting.support.RemoteInvocationResult import class org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor super super extends super implements String HttpInvokerRequestExecutor public public = public public return public public = SimpleHttpInvokerRequestExecutor public public if == decl_stmt org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor = new call SimpleHttpInvokerRequestExecutor.setBeanClassLoader() call SimpleHttpInvokerRequestExecutor.setBeanClassLoader() call SimpleHttpInvokerRequestExecutor.setBeanClassLoader() call SimpleHttpInvokerRequestExecutor.setBeanClassLoader() call SimpleHttpInvokerRequestExecutor.setBeanClassLoader() = return public public RemoteInvocation RemoteInvocationResult public public throws if return + + decl_stmt org.springframework.remoting.support.RemoteInvocation = decl_stmt org.springframework.remoting.support.RemoteInvocationResult try = catch throw try return catch if call org.springframework.remoting.support.RemoteInvocationResult.hasInvocationTargetException() call org.springframework.remoting.support.RemoteInvocationResult.hasInvocationTargetException() call org.springframework.remoting.support.RemoteInvocationResult.hasInvocationTargetException() call org.springframework.remoting.support.RemoteInvocationResult.hasInvocationTargetException() call org.springframework.remoting.support.RemoteInvocationResult.hasInvocationTargetException() throw else throw new + + + + protected protected throws return protected protected throws return protected protected if instanceof return new + + if instanceof || instanceof || instanceof return new + + return new + +