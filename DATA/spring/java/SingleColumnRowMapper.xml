org.springframework.jdbc.core java.sql.ResultSet import java.sql.ResultSetMetaData import java.sql.SQLException import org.springframework.dao.TypeMismatchDataAccessException import org.springframework.jdbc.IncorrectResultSetColumnCountException import org.springframework.jdbc.support.JdbcUtils import org.springframework.util.ClassUtils import org.springframework.util.NumberUtils import class super super implements decl Class public public < = int Object ResultSetMetaData public public throws decl_stmt java.sql.ResultSetMetaData = decl_stmt int = call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() if != throw new decl_stmt java.lang.Object = if != && != && ! try return catch throw new + + + call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) + + return protected protected < throws if != return else return protected protected throws return protected protected < if == return else if if instanceof return < else return < else throw new + + + + + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() + public static < < public static < < < return new <