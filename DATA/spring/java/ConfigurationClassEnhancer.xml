org.springframework.context.annotation java.lang.reflect.Field import java.lang.reflect.Method import java.util.Arrays import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.aop.scope.ScopedProxyFactoryBean import org.springframework.asm.Type import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.config.BeanFactoryPostProcessor import org.springframework.beans.factory.config.ConfigurableBeanFactory import org.springframework.beans.factory.support.SimpleInstantiationStrategy import org.springframework.cglib.core.ClassGenerator import org.springframework.cglib.core.Constants import org.springframework.cglib.core.DefaultGeneratorStrategy import org.springframework.cglib.core.SpringNamingPolicy import org.springframework.cglib.proxy.Callback import org.springframework.cglib.proxy.CallbackFilter import org.springframework.cglib.proxy.Enhancer import org.springframework.cglib.proxy.Factory import org.springframework.cglib.proxy.MethodInterceptor import org.springframework.cglib.proxy.MethodProxy import org.springframework.cglib.proxy.NoOp import org.springframework.cglib.transform.ClassEmitterTransformer import org.springframework.cglib.transform.TransformingClassGenerator import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.objenesis.ObjenesisException import org.springframework.objenesis.SpringObjenesis import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.ObjectUtils import org.springframework.util.ReflectionUtils import class org.springframework.context.annotation.ConfigurationClassEnhancer decl Callback String Log SpringObjenesis ConditionalCallbackFilter decl Class public < public < < if if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + return decl_stmt java.lang.Class < = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() return Enhancer private private < decl_stmt Enhancer = new call Enhancer.setSuperclass() call Enhancer.setSuperclass() call Enhancer.setSuperclass() call Enhancer.setSuperclass() call Enhancer.setSuperclass() call Enhancer.setInterfaces() call Enhancer.setInterfaces() call Enhancer.setInterfaces() call Enhancer.setInterfaces() call Enhancer.setInterfaces() new <