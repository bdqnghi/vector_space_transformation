org.springframework.web.socket.config.annotation java.util.ArrayList import java.util.List import org.junit.Before import org.junit.Test import org.mockito.Mockito import org.springframework.scheduling.TaskScheduler import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.handler.TextWebSocketHandler import org.springframework.web.socket.server.HandshakeHandler import org.springframework.web.socket.server.HandshakeInterceptor import org.springframework.web.socket.server.support.DefaultHandshakeHandler import org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor import org.springframework.web.socket.server.support.OriginHandshakeInterceptor import org.springframework.web.socket.sockjs.SockJsService import org.springframework.web.socket.sockjs.transport.TransportType import org.springframework.web.socket.sockjs.transport.handler.DefaultSockJsService import org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler import static static org.junit.Assert.* import class org.springframework.web.socket.config.annotation.WebSocketHandlerRegistrationTests TaskScheduler TestWebSocketHandlerRegistration public public = = new WebSocketHandler Mapping decl List Mapping public public decl_stmt org.springframework.web.socket.WebSocketHandler = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() HttpSessionHandshakeInterceptor WebSocketHandler decl List Mapping public public decl_stmt org.springframework.web.socket.WebSocketHandler = new decl_stmt org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() HttpSessionHandshakeInterceptor WebSocketHandler decl List Mapping public public decl_stmt org.springframework.web.socket.WebSocketHandler = new decl_stmt org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() HttpSessionHandshakeInterceptor WebSocketHandler decl List Mapping public public decl_stmt org.springframework.web.socket.WebSocketHandler = new decl_stmt org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() HttpSessionHandshakeInterceptor WebSocketHandler decl List decl List Mapping public public decl_stmt org.springframework.web.socket.WebSocketHandler = new decl_stmt org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() decl_stmt java.util.List < = call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Mapping WebSocketHandler HandshakeHandler decl List public public decl_stmt org.springframework.web.socket.WebSocketHandler = new decl_stmt org.springframework.web.socket.server.HandshakeHandler = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() WebSocketTransportHandler Mapping WebSocketHandler HandshakeHandler decl List public public decl_stmt org.springframework.web.socket.WebSocketHandler = new decl_stmt org.springframework.web.socket.server.HandshakeHandler = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt Mapping = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler = call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call Mapping.sockJsService() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() protected < protected < return new <> protected protected < new protected protected < new