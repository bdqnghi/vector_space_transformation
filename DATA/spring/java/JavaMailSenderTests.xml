org.springframework.mail.javamail java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Date import java.util.GregorianCalendar import java.util.List import java.util.Properties import javax.activation.FileTypeMap import javax.mail.Address import javax.mail.Message import javax.mail.MessagingException import javax.mail.NoSuchProviderException import javax.mail.Session import javax.mail.Transport import javax.mail.URLName import javax.mail.internet.AddressException import javax.mail.internet.InternetAddress import javax.mail.internet.MimeMessage import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.mail.MailParseException import org.springframework.mail.MailSendException import org.springframework.mail.SimpleMailMessage import org.springframework.util.ObjectUtils import static static org.junit.Assert.* import class org.springframework.mail.javamail.JavaMailSenderTests ExpectedException MimeMessage decl List SimpleMailMessage decl List decl List decl List decl List Date MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setPort() call MockJavaMailSender.setPort() call MockJavaMailSender.setPort() call MockJavaMailSender.setPort() call MockJavaMailSender.setPort() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt org.springframework.mail.SimpleMailMessage = new call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setReplyTo(String) call org.springframework.mail.SimpleMailMessage.setReplyTo(String) call org.springframework.mail.SimpleMailMessage.setReplyTo(String) call org.springframework.mail.SimpleMailMessage.setReplyTo(String) call org.springframework.mail.SimpleMailMessage.setReplyTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setCc(String) call org.springframework.mail.SimpleMailMessage.setCc(String) call org.springframework.mail.SimpleMailMessage.setCc(String) call org.springframework.mail.SimpleMailMessage.setCc(String) call org.springframework.mail.SimpleMailMessage.setCc(String) new call org.springframework.mail.SimpleMailMessage.setBcc(String) call org.springframework.mail.SimpleMailMessage.setBcc(String) call org.springframework.mail.SimpleMailMessage.setBcc(String) call org.springframework.mail.SimpleMailMessage.setBcc(String) call org.springframework.mail.SimpleMailMessage.setBcc(String) new decl_stmt java.util.Date = new call org.springframework.mail.SimpleMailMessage.setSentDate(Date) call org.springframework.mail.SimpleMailMessage.setSentDate(Date) call org.springframework.mail.SimpleMailMessage.setSentDate(Date) call org.springframework.mail.SimpleMailMessage.setSentDate(Date) call org.springframework.mail.SimpleMailMessage.setSentDate(Date) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setText(String) call org.springframework.mail.SimpleMailMessage.setText(String) call org.springframework.mail.SimpleMailMessage.setText(String) call org.springframework.mail.SimpleMailMessage.setText(String) call org.springframework.mail.SimpleMailMessage.setText(String) call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() decl_stmt MimeMessage = call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() decl_stmt java.util.List < = call MimeMessage.getFrom() call MimeMessage.getFrom() call MimeMessage.getFrom() call MimeMessage.getFrom() call MimeMessage.getFrom() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = call MimeMessage.getReplyTo() call MimeMessage.getReplyTo() call MimeMessage.getReplyTo() call MimeMessage.getReplyTo() call MimeMessage.getReplyTo() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call MimeMessage.getSentDate() call MimeMessage.getSentDate() call MimeMessage.getSentDate() call MimeMessage.getSentDate() call MimeMessage.getSentDate() call MimeMessage.getSubject() call MimeMessage.getSubject() call MimeMessage.getSubject() call MimeMessage.getSubject() call MimeMessage.getSubject() call MimeMessage.getContent() call MimeMessage.getContent() call MimeMessage.getContent() call MimeMessage.getContent() call MimeMessage.getContent() MockJavaMailSender decl List decl List SimpleMailMessage SimpleMailMessage MimeMessage MimeMessage public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt org.springframework.mail.SimpleMailMessage = new call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) decl_stmt org.springframework.mail.SimpleMailMessage = new call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() decl_stmt MimeMessage = call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() decl_stmt java.util.List < = call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt MimeMessage = call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() decl_stmt java.util.List < = call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call MimeMessage.getRecipients() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() MockJavaMailSender MimeMessage public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt MimeMessage = call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() new call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() MimeMessage MimeMessage MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt MimeMessage = call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() new decl_stmt MimeMessage = call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() new call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() MimeMessagePreparator decl List MockJavaMailSender public public decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt java.util.List final final final < = new < decl_stmt org.springframework.mail.javamail.MimeMessagePreparator = new public public throws new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() public public throws new MimeMessagePreparator MimeMessagePreparator decl List MockJavaMailSender public public decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt java.util.List final final final < = new < decl_stmt org.springframework.mail.javamail.MimeMessagePreparator = new public public throws new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.springframework.mail.javamail.MimeMessagePreparator = new public public throws new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() public public throws new public public throws new MimeMessageHelper MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt org.springframework.mail.javamail.MimeMessageHelper = new call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() instanceof call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() MimeMessageHelper FileTypeMap MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt org.springframework.mail.javamail.MimeMessageHelper = new call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() decl_stmt FileTypeMap = new call org.springframework.mail.javamail.MimeMessageHelper.setFileTypeMap(FileTypeMap) call org.springframework.mail.javamail.MimeMessageHelper.setFileTypeMap(FileTypeMap) call org.springframework.mail.javamail.MimeMessageHelper.setFileTypeMap(FileTypeMap) call org.springframework.mail.javamail.MimeMessageHelper.setFileTypeMap(FileTypeMap) call org.springframework.mail.javamail.MimeMessageHelper.setFileTypeMap(FileTypeMap) call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() MimeMessageHelper FileTypeMap MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setDefaultEncoding() call MockJavaMailSender.setDefaultEncoding() call MockJavaMailSender.setDefaultEncoding() call MockJavaMailSender.setDefaultEncoding() call MockJavaMailSender.setDefaultEncoding() decl_stmt FileTypeMap = new call MockJavaMailSender.setDefaultFileTypeMap() call MockJavaMailSender.setDefaultFileTypeMap() call MockJavaMailSender.setDefaultFileTypeMap() call MockJavaMailSender.setDefaultFileTypeMap() call MockJavaMailSender.setDefaultFileTypeMap() decl_stmt org.springframework.mail.javamail.MimeMessageHelper = new call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getEncoding() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.getFileTypeMap() call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call org.springframework.mail.javamail.MimeMessageHelper.setTo(InternetAddress) call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() MockJavaMailSender SimpleMailMessage public public decl_stmt MockJavaMailSender = new decl_stmt org.springframework.mail.SimpleMailMessage = new call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) call org.springframework.mail.SimpleMailMessage.setFrom(String) try call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() catch instanceof MimeMessagePreparator MockJavaMailSender public public decl_stmt MockJavaMailSender = new decl_stmt org.springframework.mail.javamail.MimeMessagePreparator = new public public throws new try call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() catch instanceof public public throws new Session MockJavaMailSender MimeMessage public public throws decl_stmt sun.security.pkcs11.Session final final = new decl_stmt MockJavaMailSender = new protected protected throws return call MockJavaMailSender.setSession() call MockJavaMailSender.setSession() call MockJavaMailSender.setSession() call MockJavaMailSender.setSession() call MockJavaMailSender.setSession() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt MimeMessage = call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MimeMessage.setSubject() call MimeMessage.setSubject() call MimeMessage.setSubject() call MimeMessage.setSubject() call MimeMessage.setSubject() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() new call MimeMessage.setSentDate() call MimeMessage.setSentDate() call MimeMessage.setSentDate() call MimeMessage.setSentDate() call MimeMessage.setSentDate() new call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() protected protected throws return MockJavaMailSender MimeMessage Properties public public throws decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() decl_stmt MockJavaMailSender = new protected protected throws return call MockJavaMailSender.setJavaMailProperties() call MockJavaMailSender.setJavaMailProperties() call MockJavaMailSender.setJavaMailProperties() call MockJavaMailSender.setJavaMailProperties() call MockJavaMailSender.setJavaMailProperties() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt MimeMessage = call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() new call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() protected protected throws return MockJavaMailSender SimpleMailMessage public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt org.springframework.mail.SimpleMailMessage = new try call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() catch != MockJavaMailSender SimpleMailMessage public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt org.springframework.mail.SimpleMailMessage = new try call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() catch != Object MockJavaMailSender SimpleMailMessage SimpleMailMessage public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt org.springframework.mail.SimpleMailMessage = new call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) call org.springframework.mail.SimpleMailMessage.setSubject(String) decl_stmt org.springframework.mail.SimpleMailMessage = new call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) call org.springframework.mail.SimpleMailMessage.setTo(String) try call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() catch call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() new call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() decl_stmt java.lang.Object = instanceof Object MimeMessage MimeMessage MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setUsername() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() call MockJavaMailSender.setPassword() decl_stmt MimeMessage = call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() new call MimeMessage.setSubject() call MimeMessage.setSubject() call MimeMessage.setSubject() call MimeMessage.setSubject() call MimeMessage.setSubject() decl_stmt MimeMessage = call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MockJavaMailSender.createMimeMessage() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() call MimeMessage.setRecipient() new try call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() call MockJavaMailSender.send() catch call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() call MockJavaMailSender.transport() decl_stmt java.lang.Object = instanceof MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() MockJavaMailSender public public throws decl_stmt MockJavaMailSender = new call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call MockJavaMailSender.setHost() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() call MockJavaMailSender.testConnection() protected protected throws = new return public public return public public return public public return public public return public public return public < public < return public public return public public throws if == throw new = = = = public synchronized public synchronized throws if throw new = public public throws if throw new if ! throw new if == throw new if != && new