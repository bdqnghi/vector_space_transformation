org.springframework.web.socket.sockjs.client java.net.URI import java.security.Principal import java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.context.Lifecycle import org.springframework.http.HttpHeaders import org.springframework.scheduling.TaskScheduler import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.CollectionUtils import org.springframework.util.concurrent.ListenableFuture import org.springframework.util.concurrent.SettableListenableFuture import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.WebSocketHttpHeaders import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.client.WebSocketClient import org.springframework.web.socket.sockjs.frame.Jackson2SockJsMessageCodec import org.springframework.web.socket.sockjs.frame.SockJsMessageCodec import org.springframework.web.socket.sockjs.transport.TransportType import org.springframework.web.util.UriComponentsBuilder import class org.springframework.web.socket.sockjs.client.SockJsClient super super implements decl Map InfoReceiver boolean TaskScheduler SockJsMessageCodec Log decl Set decl List decl String boolean private static private static < for : if instanceof return return new public public = public public return public public = public public return public public = public public return public public = public public if ! = for : if instanceof if ! public public if = for : if instanceof if public public return URI public < public < decl_stmt java.net.URI = return SockJsUrlInfo decl SettableListenableFuture String ServerInfo public final < public final < decl_stmt java.lang.String = if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() throw new + + decl_stmt org.springframework.util.concurrent.SettableListenableFuture < = new < try decl_stmt org.springframework.web.socket.sockjs.client.SockJsUrlInfo = new decl_stmt ServerInfo = catch if call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() + call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() return HttpHeaders private private if == return else decl_stmt org.springframework.http.HttpHeaders = new for : if call HttpHeaders.put() call HttpHeaders.put() call HttpHeaders.put() call HttpHeaders.put() call HttpHeaders.put() return URI ServerInfo long String long private private decl_stmt java.net.URI = decl_stmt ServerInfo = if == decl_stmt long = decl_stmt java.lang.String = decl_stmt long = - = new return decl List DefaultTransportRequest private private decl_stmt java.util.List < = new < for : for : if || ! call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if throw new + + + for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - ++ decl_stmt org.springframework.web.socket.sockjs.client.DefaultTransportRequest = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setUser(Principal) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setUser(Principal) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setUser(Principal) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setUser(Principal) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setUser(Principal) if != call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutValue(long) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutValue(long) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutValue(long) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutValue(long) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutValue(long) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() protected protected return public public public public return public public return > * : +