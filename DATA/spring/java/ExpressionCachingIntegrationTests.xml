org.springframework.cache.config org.junit.Test import org.springframework.cache.CacheManager import org.springframework.cache.annotation.CachePut import org.springframework.cache.annotation.CachingConfigurerSupport import org.springframework.cache.annotation.EnableCaching import org.springframework.cache.concurrent.ConcurrentMapCacheManager import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import class org.springframework.cache.config.ExpressionCachingIntegrationTests decl BaseDao decl BaseDao ConfigurableApplicationContext public public decl_stmt org.springframework.context.ConfigurableApplicationContext = new decl_stmt org.springframework.cache.config.BaseDao < = < call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() decl_stmt org.springframework.cache.config.BaseDao < = < call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call decl BaseDao.persist() call decl BaseDao.persist() call decl BaseDao.persist() call decl BaseDao.persist() call decl BaseDao.persist() new call decl BaseDao.persist() call decl BaseDao.persist() call decl BaseDao.persist() call decl BaseDao.persist() call decl BaseDao.persist() new call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() public < public < return new public < public < return new = = public = = public return = = public = = public return public public return public public return public public return new