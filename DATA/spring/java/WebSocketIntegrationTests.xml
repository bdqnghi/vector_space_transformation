org.springframework.web.socket java.net.URI import java.util.ArrayList import java.util.Arrays import java.util.List import java.util.concurrent.CountDownLatch import java.util.concurrent.TimeUnit import org.junit.Test import org.junit.runner.RunWith import org.junit.runners.Parameterized import org.junit.runners.Parameterized.Parameters import org.springframework.beans.factory.annotation.Autowired import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.web.socket.client.jetty.JettyWebSocketClient import org.springframework.web.socket.client.standard.StandardWebSocketClient import org.springframework.web.socket.config.annotation.EnableWebSocket import org.springframework.web.socket.config.annotation.WebSocketConfigurer import org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry import org.springframework.web.socket.handler.AbstractWebSocketHandler import org.springframework.web.socket.handler.TextWebSocketHandler import org.springframework.web.socket.server.support.DefaultHandshakeHandler import static static org.junit.Assert.* import class annotation org.springframework.web.socket.WebSocketIntegrationTests super super extends = public static < = public static < return new new new new new new new protected < protected < return new < URI WebSocketHttpHeaders WebSocketSession public public throws decl_stmt org.springframework.web.socket.WebSocketHttpHeaders = new call org.springframework.web.socket.WebSocketHttpHeaders.setSecWebSocketProtocol(List) call org.springframework.web.socket.WebSocketHttpHeaders.setSecWebSocketProtocol(List) call org.springframework.web.socket.WebSocketHttpHeaders.setSecWebSocketProtocol(List) call org.springframework.web.socket.WebSocketHttpHeaders.setSecWebSocketProtocol(List) call org.springframework.web.socket.WebSocketHttpHeaders.setSecWebSocketProtocol(List) decl_stmt java.net.URI = new + decl_stmt org.springframework.web.socket.WebSocketSession = new call org.springframework.web.socket.WebSocketSession.getAcceptedProtocol() call org.springframework.web.socket.WebSocketSession.getAcceptedProtocol() call org.springframework.web.socket.WebSocketSession.getAcceptedProtocol() call org.springframework.web.socket.WebSocketSession.getAcceptedProtocol() call org.springframework.web.socket.WebSocketSession.getAcceptedProtocol() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() String TestWebSocketHandler WebSocketSession public public throws decl_stmt java.lang.String = + decl_stmt org.springframework.web.socket.WebSocketSession = new decl_stmt TestWebSocketHandler = call TestWebSocketHandler.setWaitMessageCount() call TestWebSocketHandler.setWaitMessageCount() call TestWebSocketHandler.setWaitMessageCount() call TestWebSocketHandler.setWaitMessageCount() call TestWebSocketHandler.setWaitMessageCount() call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) new call TestWebSocketHandler.await() call TestWebSocketHandler.await() call TestWebSocketHandler.await() call TestWebSocketHandler.await() call TestWebSocketHandler.await() call TestWebSocketHandler.getTransportError() call TestWebSocketHandler.getTransportError() call TestWebSocketHandler.getTransportError() call TestWebSocketHandler.getTransportError() call TestWebSocketHandler.getTransportError() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() call TestWebSocketHandler.getReceivedMessages() public public public public return new public public = public < public < return public public return public public < throws if >= public public throws = public public throws