org.springframework.expression.spel java.util.ArrayList import java.util.List import org.junit.Test import org.springframework.core.convert.TypeDescriptor import org.springframework.expression.AccessException import org.springframework.expression.EvaluationContext import org.springframework.expression.EvaluationException import org.springframework.expression.Expression import org.springframework.expression.PropertyAccessor import org.springframework.expression.TypedValue import org.springframework.expression.spel.standard.SpelExpression import org.springframework.expression.spel.standard.SpelExpressionParser import org.springframework.expression.spel.support.StandardEvaluationContext import static static org.junit.Assert.* import class org.springframework.expression.spel.PropertyAccessTests super super extends public public public public public public public public SpelExpression EvaluationContext public public throws decl_stmt org.springframework.expression.spel.standard.SpelExpression = decl_stmt org.springframework.expression.EvaluationContext = new try call org.springframework.expression.spel.standard.SpelExpression.getValue() call org.springframework.expression.spel.standard.SpelExpression.getValue() call org.springframework.expression.spel.standard.SpelExpression.getValue() call org.springframework.expression.spel.standard.SpelExpression.getValue() call org.springframework.expression.spel.standard.SpelExpression.getValue() catch call org.springframework.expression.spel.standard.SpelExpression.isWritable(EvaluationContext) call org.springframework.expression.spel.standard.SpelExpression.isWritable(EvaluationContext) call org.springframework.expression.spel.standard.SpelExpression.isWritable(EvaluationContext) call org.springframework.expression.spel.standard.SpelExpression.isWritable(EvaluationContext) call org.springframework.expression.spel.standard.SpelExpression.isWritable(EvaluationContext) try call org.springframework.expression.spel.standard.SpelExpression.setValue(EvaluationContext,Object) call org.springframework.expression.spel.standard.SpelExpression.setValue(EvaluationContext,Object) call org.springframework.expression.spel.standard.SpelExpression.setValue(EvaluationContext,Object) call org.springframework.expression.spel.standard.SpelExpression.setValue(EvaluationContext,Object) call org.springframework.expression.spel.standard.SpelExpression.setValue(EvaluationContext,Object) catch SpelMessage private private if instanceof decl_stmt SpelMessage = else + Integer Expression SpelExpressionParser StandardEvaluationContext Object public public throws decl_stmt org.springframework.expression.spel.standard.SpelExpressionParser = new decl_stmt org.springframework.expression.spel.support.StandardEvaluationContext = new call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) new decl_stmt org.springframework.expression.Expression = call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) decl_stmt java.lang.Integer = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() int = call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() = call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.spel.standard.SpelExpressionParser.parseRaw(String) call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() int try call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) call org.springframework.expression.Expression.setValue(Object,Object) catch decl List decl List StandardEvaluationContext StringyPropertyAccessor public public decl_stmt org.springframework.expression.spel.support.StandardEvaluationContext = new decl_stmt java.util.List < = call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt StringyPropertyAccessor = new call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() decl_stmt java.util.List < = new < call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.removePropertyAccessor(PropertyAccessor) call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.setPropertyAccessors(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setPropertyAccessors(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setPropertyAccessors(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setPropertyAccessors(List) call org.springframework.expression.spel.support.StandardEvaluationContext.setPropertyAccessors(List) call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() call org.springframework.expression.spel.support.StandardEvaluationContext.getPropertyAccessors() Expression Object public public throws decl_stmt org.springframework.expression.Expression = decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() new public < public < return new public public throws if ! instanceof throw new return public public throws if ! instanceof throw new return public public throws if ! throw new return new public public throws if ! throw new try = catch throw new + +