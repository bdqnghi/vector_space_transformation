org.springframework.aop.support java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.lang.reflect.Modifier import java.lang.reflect.Proxy import java.util.LinkedHashSet import java.util.LinkedList import java.util.List import java.util.Set import org.springframework.aop.Advisor import org.springframework.aop.AopInvocationException import org.springframework.aop.IntroductionAdvisor import org.springframework.aop.IntroductionAwareMethodMatcher import org.springframework.aop.MethodMatcher import org.springframework.aop.Pointcut import org.springframework.aop.PointcutAdvisor import org.springframework.aop.SpringProxy import org.springframework.aop.TargetClassAware import org.springframework.core.BridgeMethodResolver import org.springframework.core.MethodIntrospector import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import class org.springframework.aop.support.AopUtils public static public static return instanceof && || public static public static return instanceof && public static public static return instanceof && decl Class public static < public static < decl_stmt java.lang.Class < = if instanceof = if == = : return Method public static public static < decl_stmt com.sun.jdi.Method = if call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() && ! call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() call com.sun.jdi.Method.getModifiers() && throw new + return public static public static return public static public static return public static public static return public static public static return != && && == Method public static public static < decl_stmt com.sun.jdi.Method = return public static public static < return decl Set MethodMatcher IntroductionAwareMethodMatcher decl Method public static public static < if ! return decl_stmt org.springframework.aop.MethodMatcher = if == return decl_stmt org.springframework.aop.IntroductionAwareMethodMatcher = if instanceof = decl_stmt java.util.Set < < = new < < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for < : decl_stmt com.sun.jdi.Method = for : if != && call IntroductionAwareMethodMatcher.matches() call IntroductionAwareMethodMatcher.matches() call IntroductionAwareMethodMatcher.matches() call IntroductionAwareMethodMatcher.matches() call IntroductionAwareMethodMatcher.matches() || call org.springframework.aop.MethodMatcher.matches(Method,Class,Object) call org.springframework.aop.MethodMatcher.matches(Method,Class,Object) call org.springframework.aop.MethodMatcher.matches(Method,Class,Object) call org.springframework.aop.MethodMatcher.matches(Method,Class,Object) call org.springframework.aop.MethodMatcher.matches(Method,Class,Object) return return public static public static < return PointcutAdvisor public static public static < if instanceof return else if instanceof decl_stmt org.springframework.aop.PointcutAdvisor = return call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() else return decl List boolean public static < public static < < < if return decl_stmt java.util.List < = new < for : if instanceof && call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt boolean = ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() for : if instanceof continue if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public static public static throws try return catch throw catch throw new + + + + catch throw new + +