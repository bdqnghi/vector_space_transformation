org.springframework.core.convert.support java.util.Collection import java.util.Collections import java.util.Set import org.springframework.core.CollectionFactory import org.springframework.core.convert.ConversionService import org.springframework.core.convert.TypeDescriptor import org.springframework.core.convert.converter.ConditionalGenericConverter import class org.springframework.core.convert.support.ObjectToCollectionConverter super super implements ConversionService public < public < return new public public return TypeDescriptor Object decl Collection public public if == return decl_stmt org.springframework.core.convert.TypeDescriptor = decl_stmt java.util.Collection < = != call org.springframework.core.convert.TypeDescriptor.getType() call org.springframework.core.convert.TypeDescriptor.getType() call org.springframework.core.convert.TypeDescriptor.getType() call org.springframework.core.convert.TypeDescriptor.getType() call org.springframework.core.convert.TypeDescriptor.getType() : if == || call org.springframework.core.convert.TypeDescriptor.isCollection() call org.springframework.core.convert.TypeDescriptor.isCollection() call org.springframework.core.convert.TypeDescriptor.isCollection() call org.springframework.core.convert.TypeDescriptor.isCollection() call org.springframework.core.convert.TypeDescriptor.isCollection() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() else decl_stmt java.lang.Object = call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() return