org.springframework.http.converter.xml java.io.IOException import java.io.StringReader import javax.xml.bind.JAXBElement import javax.xml.bind.JAXBException import javax.xml.bind.MarshalException import javax.xml.bind.Marshaller import javax.xml.bind.PropertyException import javax.xml.bind.UnmarshalException import javax.xml.bind.Unmarshaller import javax.xml.bind.annotation.XmlRootElement import javax.xml.bind.annotation.XmlType import javax.xml.transform.Result import javax.xml.transform.Source import javax.xml.transform.sax.SAXSource import javax.xml.transform.stream.StreamSource import org.xml.sax.EntityResolver import org.xml.sax.InputSource import org.xml.sax.SAXException import org.xml.sax.XMLReader import org.xml.sax.helpers.XMLReaderFactory import org.springframework.core.annotation.AnnotationUtils import org.springframework.http.HttpHeaders import org.springframework.http.MediaType import org.springframework.http.converter.HttpMessageConversionException import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.http.converter.HttpMessageNotWritableException import org.springframework.util.ClassUtils import class org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter super super extends boolean boolean EntityResolver public public = public public return public public = if public public return public public < return || && public public < return != && protected protected < throw new decl JAXBElement Unmarshaller protected protected < throws try = decl_stmt org.springframework.oxm.Unmarshaller = if return call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() else decl_stmt JAXBElement < = call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() return call decl JAXBElement.getValue() call decl JAXBElement.getValue() call decl JAXBElement.getValue() call decl JAXBElement.getValue() call decl JAXBElement.getValue() catch if ! throw new + + throw catch throw new + + + catch throw new + InputSource StreamSource String XMLReader protected protected if instanceof decl_stmt StreamSource = decl_stmt InputSource = new call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() try decl_stmt XMLReader = call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() ! decl_stmt java.lang.String = call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() if ! call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() return new catch return else return Marshaller decl Class protected protected throws try decl_stmt java.lang.Class < = decl_stmt org.springframework.oxm.Marshaller = call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) catch throw new + + + catch throw new + private private throws if != && != public public return new new