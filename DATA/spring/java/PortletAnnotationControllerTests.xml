org.springframework.web.portlet.mvc.annotation java.io.IOException import java.lang.reflect.Method import java.text.SimpleDateFormat import java.util.Date import java.util.LinkedList import java.util.List import java.util.Map import javax.portlet.ActionRequest import javax.portlet.ActionResponse import javax.portlet.MimeResponse import javax.portlet.PortletContext import javax.portlet.PortletMode import javax.portlet.PortletRequest import javax.portlet.PortletSession import javax.portlet.RenderRequest import javax.portlet.RenderResponse import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.junit.Test import org.springframework.beans.BeansException import org.springframework.beans.factory.annotation.Autowired import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.beans.propertyeditors.CustomDateEditor import org.springframework.context.ApplicationContext import org.springframework.context.annotation.AnnotationConfigUtils import org.springframework.core.MethodParameter import org.springframework.mock.web.portlet.MockActionRequest import org.springframework.mock.web.portlet.MockActionResponse import org.springframework.mock.web.portlet.MockPortletConfig import org.springframework.mock.web.portlet.MockPortletContext import org.springframework.mock.web.portlet.MockRenderRequest import org.springframework.mock.web.portlet.MockRenderResponse import org.springframework.stereotype.Controller import org.springframework.tests.sample.beans.DerivedTestBean import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import org.springframework.ui.ExtendedModelMap import org.springframework.ui.Model import org.springframework.ui.ModelMap import org.springframework.validation.BindingResult import org.springframework.validation.Errors import org.springframework.web.bind.WebDataBinder import org.springframework.web.bind.annotation.InitBinder import org.springframework.web.bind.annotation.ModelAttribute import org.springframework.web.bind.annotation.RequestMapping import org.springframework.web.bind.annotation.RequestParam import org.springframework.web.bind.support.WebArgumentResolver import org.springframework.web.bind.support.WebBindingInitializer import org.springframework.web.context.WebApplicationContext import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.WebRequest import org.springframework.web.context.support.GenericWebApplicationContext import org.springframework.web.portlet.DispatcherPortlet import org.springframework.web.portlet.ModelAndView import org.springframework.web.portlet.NoHandlerFoundException import org.springframework.web.portlet.context.StaticPortletApplicationContext import org.springframework.web.portlet.mvc.AbstractController import org.springframework.web.servlet.View import org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver import static static org.junit.Assert.* import class org.springframework.web.portlet.mvc.annotation.PortletAnnotationControllerTests MockRenderRequest DispatcherPortlet GenericWebApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return public public throws public public throws public public throws MockActionResponse DispatcherPortlet MockRenderRequest GenericWebApplicationContext MockActionRequest MockRenderResponse public public final final final < throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockActionRequest = new decl_stmt org.springframework.mock.web.portlet.MockActionResponse = new call DispatcherPortlet.processAction() call DispatcherPortlet.processAction() call DispatcherPortlet.processAction() call DispatcherPortlet.processAction() call DispatcherPortlet.processAction() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return MockRenderRequest DispatcherPortlet GenericWebApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new MockRenderRequest DispatcherPortlet GenericWebApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new RootBeanDefinition MockRenderRequest DispatcherPortlet GenericWebApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() RootBeanDefinition GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new RootBeanDefinition MockRenderRequest DispatcherPortlet GenericWebApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() RootBeanDefinition GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new MockRenderRequest DispatcherPortlet GenericWebApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws new MockRenderRequest DispatcherPortlet StaticPortletApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.portlet.context.StaticPortletApplicationContext = new call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() new call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() return protected protected throws new call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() StaticPortletApplicationContext protected protected throws decl_stmt org.springframework.web.portlet.context.StaticPortletApplicationContext = new call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() new call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() return protected protected throws new RootBeanDefinition MockRenderRequest DispatcherPortlet StaticPortletApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.portlet.context.StaticPortletApplicationContext = new call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() return call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() RootBeanDefinition StaticPortletApplicationContext protected protected throws decl_stmt org.springframework.web.portlet.context.StaticPortletApplicationContext = new call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() return RootBeanDefinition DispatcherPortlet MockRenderRequest StaticPortletApplicationContext RootBeanDefinition RootBeanDefinition RootBeanDefinition MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.portlet.context.StaticPortletApplicationContext = new call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() return call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new try call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) catch = new = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = new call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() call MockRenderRequest.addParameter() = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() RootBeanDefinition RootBeanDefinition StaticPortletApplicationContext RootBeanDefinition RootBeanDefinition protected protected throws decl_stmt org.springframework.web.portlet.context.StaticPortletApplicationContext = new call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) call org.springframework.web.portlet.context.StaticPortletApplicationContext.setPortletContext(PortletContext) new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.registerBeanDefinition() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() call StaticPortletApplicationContext.refresh() return RootBeanDefinition MockRenderRequest DispatcherPortlet GenericWebApplicationContext MockRenderResponse public public throws decl_stmt org.springframework.web.portlet.DispatcherPortlet = new protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() call DispatcherPortlet.init() new decl_stmt org.springframework.mock.web.portlet.MockRenderRequest = new decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) call org.springframework.web.portlet.DispatcherPortlet.render(ModelAndView,PortletRequest,MimeResponse) RootBeanDefinition GenericWebApplicationContext protected protected throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() new call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return protected protected throws return public public throws public public throws + + + public public throws + + + public public throws + + + public public throws public public throws + + + public public throws + + + public public throws + + + public public public public throws + + + public public throws + + + public public throws + + + decl List public < public < decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return public public if ! return decl List public < public < decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return public public if ! return private private < return new + + public public if ! return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) instanceof return protected protected return new public public if ! return SimpleDateFormat private private decl_stmt java.text.SimpleDateFormat = new call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() new SimpleDateFormat private private decl_stmt java.text.SimpleDateFormat = new call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() new SimpleDateFormat public public decl_stmt java.text.SimpleDateFormat = new call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() call SimpleDateFormat.setLenient() new public public if return new return public public throws if == || == || == throw new = public = public throws = public = public throws = public = public throws = public = public throws public public throws = public = public throws decl List Errors TestBean public public < throws decl_stmt org.springframework.tests.sample.beans.TestBean = if == = if call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getDate() call org.springframework.tests.sample.beans.TestBean.getDate() call org.springframework.tests.sample.beans.TestBean.getDate() call org.springframework.tests.sample.beans.TestBean.getDate() call org.springframework.tests.sample.beans.TestBean.getDate() decl_stmt org.springframework.validation.Errors = + if == = + if call org.springframework.validation.Errors.hasFieldErrors() call org.springframework.validation.Errors.hasFieldErrors() call org.springframework.validation.Errors.hasFieldErrors() call org.springframework.validation.Errors.hasFieldErrors() call org.springframework.validation.Errors.hasFieldErrors() throw new decl_stmt java.util.List < = < + + call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() + + call org.springframework.validation.Errors.getFieldError(String) call org.springframework.validation.Errors.getFieldError(String) call org.springframework.validation.Errors.getFieldError(String) call org.springframework.validation.Errors.getFieldError(String) call org.springframework.validation.Errors.getFieldError(String) + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + public public return new public public < if instanceof return new new public public return public public < throws return public public return public public < throws