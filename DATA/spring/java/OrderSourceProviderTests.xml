org.springframework.core.annotation java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.List import org.junit.Test import org.springframework.core.Ordered import static static org.junit.Assert.* import class org.springframework.core.annotation.OrderSourceProviderTests AnnotationAwareOrderComparator decl List C C public public decl_stmt java.util.List < = new < decl_stmt C = new decl_stmt C = new - call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() A decl List C B public public decl_stmt org.springframework.expression.spel.spr10210.A = new decl_stmt C = new - decl_stmt B = new decl_stmt java.util.List < = call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() A decl List C B public public decl_stmt org.springframework.expression.spel.spr10210.A = new decl_stmt C = new decl_stmt B = new decl_stmt java.util.List < = call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() if == return new if == return new return A C C decl List public public decl_stmt org.springframework.expression.spel.spr10210.A = new decl_stmt C = new decl_stmt C = new - decl_stmt java.util.List < = call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() if == return if == return return A decl Object C B public public decl_stmt org.springframework.expression.spel.spr10210.A = new decl_stmt C = new - decl_stmt B = new decl_stmt java.lang.Object = new call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() A decl Object C B public public decl_stmt org.springframework.expression.spel.spr10210.A = new decl_stmt C = new decl_stmt B = new decl_stmt java.lang.Object = new call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() if == return new if == return new return A C C decl Object public public decl_stmt org.springframework.expression.spel.spr10210.A = new decl_stmt C = new decl_stmt C = new - decl_stmt java.lang.Object = new call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() call AnnotationAwareOrderComparator.withSourceProvider() if == return if == return return private private < for = < ++ + + private private for = < ++ + + public public return