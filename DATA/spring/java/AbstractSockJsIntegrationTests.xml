org.springframework.web.socket.sockjs.client java.io.IOException import java.net.URI import java.util.ArrayList import java.util.Arrays import java.util.HashMap import java.util.List import java.util.Map import java.util.concurrent.BlockingQueue import java.util.concurrent.CountDownLatch import java.util.concurrent.LinkedBlockingQueue import java.util.concurrent.TimeUnit import java.util.function.BooleanSupplier import javax.servlet.Filter import javax.servlet.FilterChain import javax.servlet.FilterConfig import javax.servlet.ServletException import javax.servlet.ServletRequest import javax.servlet.ServletResponse import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.junit.After import org.junit.Before import org.junit.BeforeClass import org.junit.Rule import org.junit.Test import org.junit.rules.TestName import org.springframework.beans.factory.annotation.Autowired import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.http.HttpHeaders import org.springframework.http.server.ServletServerHttpRequest import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler import org.springframework.tests.Assume import org.springframework.tests.TestGroup import org.springframework.util.concurrent.ListenableFutureCallback import org.springframework.web.context.support.AnnotationConfigWebApplicationContext import org.springframework.web.socket.TextMessage import org.springframework.web.socket.WebSocketHttpHeaders import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.WebSocketTestServer import org.springframework.web.socket.config.annotation.EnableWebSocket import org.springframework.web.socket.config.annotation.WebSocketConfigurer import org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry import org.springframework.web.socket.handler.TextWebSocketHandler import org.springframework.web.socket.server.HandshakeHandler import org.springframework.web.socket.server.RequestUpgradeStrategy import org.springframework.web.socket.server.support.DefaultHandshakeHandler import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertNotNull import static static org.junit.Assert.assertTrue import static static org.junit.Assert.fail import class org.springframework.web.socket.sockjs.client.AbstractSockJsIntegrationTests TestFilter AnnotationConfigWebApplicationContext TestName WebSocketTestServer String Log SockJsClient public static public static throws public public throws call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + = new = new = = + public public throws try catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() try catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() try catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() try catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() protected protected = new public public throws public public throws AbstractXhrTransport public public throws decl_stmt org.springframework.web.socket.sockjs.client.AbstractXhrTransport = call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) WebSocketHttpHeaders AbstractXhrTransport HttpHeaders public public throws decl_stmt org.springframework.web.socket.sockjs.client.AbstractXhrTransport = call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) decl_stmt org.springframework.web.socket.WebSocketHttpHeaders = new call org.springframework.web.socket.WebSocketHttpHeaders.add(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.add(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.add(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.add(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.add(String,String) for < : decl_stmt org.springframework.http.HttpHeaders = + call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) public public throws public public throws AbstractXhrTransport public public throws decl_stmt org.springframework.web.socket.sockjs.client.AbstractXhrTransport = call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) call org.springframework.web.socket.sockjs.client.AbstractXhrTransport.setXhrStreamingDisabled(boolean) CountDownLatch TestClientHandler public public throws decl_stmt TestClientHandler = new decl_stmt java.util.concurrent.CountDownLatch = new + new < public public public public call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) public public public public WebSocketSession TextMessage TestClientHandler public public throws decl_stmt TestClientHandler = new decl_stmt org.springframework.web.socket.WebSocketSession = + call WebSocketSession.getClass() call WebSocketSession.getClass() call WebSocketSession.getClass() call WebSocketSession.getClass() call WebSocketSession.getClass() decl_stmt org.springframework.web.socket.TextMessage = new call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() TextMessage WebSocketSession TestClientHandler = public = public throws decl_stmt TestClientHandler = new decl_stmt org.springframework.web.socket.WebSocketSession = call org.springframework.web.socket.sockjs.client.SockJsClient.doHandshake(WebSocketHandler,String,Object) call org.springframework.web.socket.sockjs.client.SockJsClient.doHandshake(WebSocketHandler,String,Object) call org.springframework.web.socket.sockjs.client.SockJsClient.doHandshake(WebSocketHandler,String,Object) call org.springframework.web.socket.sockjs.client.SockJsClient.doHandshake(WebSocketHandler,String,Object) call org.springframework.web.socket.sockjs.client.SockJsClient.doHandshake(WebSocketHandler,String,Object) + call WebSocketSession.getClass() call WebSocketSession.getClass() call WebSocketSession.getClass() call WebSocketSession.getClass() call WebSocketSession.getClass() decl_stmt org.springframework.web.socket.TextMessage = new call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() URI TestClientHandler decl List WebSocketSession private private throws decl_stmt java.util.List < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new + decl_stmt TestClientHandler = new decl_stmt java.net.URI = new + decl_stmt org.springframework.web.socket.WebSocketSession = for : call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call org.springframework.web.socket.WebSocketSession.sendMessage(WebSocketMessage) call TestClientHandler.awaitMessageCount() call TestClientHandler.awaitMessageCount() call TestClientHandler.awaitMessageCount() call TestClientHandler.awaitMessageCount() call TestClientHandler.awaitMessageCount() for : + call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() + call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call TestClientHandler.receivedMessages() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() TestServerHandler TextMessage TestClientHandler private private throws decl_stmt TestClientHandler = new new + decl_stmt TestServerHandler = call TestServerHandler.awaitSession() call TestServerHandler.awaitSession() call TestServerHandler.awaitSession() call TestServerHandler.awaitSession() call TestServerHandler.awaitSession() decl_stmt org.springframework.web.socket.TextMessage = new call TestServerHandler.session() call TestServerHandler.session() call TestServerHandler.session() call TestServerHandler.session() call TestServerHandler.session() call TestServerHandler.session() call TestServerHandler.session() call TestServerHandler.session() call TestServerHandler.session() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() call TestClientHandler.awaitMessage() long private static private static decl_stmt long = for = < / ++ if return try catch throw new + throw new + HandshakeHandler public public decl_stmt org.springframework.web.socket.server.HandshakeHandler = new new public public return new public public throws = protected protected throws public public throws = public public final final throws >= + + TextMessage public public throws decl_stmt org.springframework.web.socket.TextMessage = if != else if != throw new else + + protected protected throws public public throws = public public throws != return HttpServletRequest HttpHeaders String public public throws decl_stmt HttpServletRequest = decl_stmt java.lang.String = call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() call HttpServletRequest.getRequestURI() decl_stmt org.springframework.http.HttpHeaders = new for : if try break catch for : if return public public public public