org.springframework.orm.hibernate3 java.sql.Connection import java.sql.DatabaseMetaData import java.sql.SQLException import java.sql.Savepoint import java.util.ArrayList import java.util.List import java.util.Properties import javax.sql.DataSource import org.hibernate.FlushMode import org.hibernate.HibernateException import org.hibernate.Interceptor import org.hibernate.Query import org.hibernate.SessionFactory import org.hibernate.Transaction import org.hibernate.cache.NoCacheProvider import org.hibernate.cfg.Configuration import org.hibernate.classic.Session import org.hibernate.dialect.HSQLDialect import org.hibernate.engine.SessionFactoryImplementor import org.hibernate.exception.ConstraintViolationException import org.hibernate.exception.GenericJDBCException import org.junit.After import org.junit.Test import org.mockito.InOrder import org.springframework.beans.factory.BeanFactory import org.springframework.dao.DataIntegrityViolationException import org.springframework.jdbc.datasource.ConnectionHolder import org.springframework.jdbc.datasource.DriverManagerDataSource import org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy import org.springframework.jdbc.support.SQLStateSQLExceptionTranslator import org.springframework.transaction.CannotCreateTransactionException import org.springframework.transaction.PlatformTransactionManager import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionStatus import org.springframework.transaction.UnexpectedRollbackException import org.springframework.transaction.support.TransactionCallback import org.springframework.transaction.support.TransactionCallbackWithoutResult import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.transaction.support.TransactionTemplate import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class annotation annotation org.springframework.orm.hibernate3.HibernateTransactionManagerTests public public HibernateTransactionManager SessionFactory Transaction TransactionTemplate List HibernateTemplate DataSource Session Object Query LocalSessionFactoryBean SessionFactory Connection public public throws decl_stmt javax.sql.DataSource final final = decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt Transaction = decl_stmt javax.management.Query = decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new protected protected throws return call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() ! ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == ! ! ! protected protected throws return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) Session Transaction TransactionTemplate HibernateTemplate PlatformTransactionManager SessionFactory Connection public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throw new catch ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throw new public public throw new Session Transaction TransactionTemplate HibernateTemplate PlatformTransactionManager SessionFactory Connection public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return return ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return return public public return HibernateTransactionManager InOrder SessionFactory Transaction TransactionTemplate List HibernateTemplate DataSource Session Object Query LocalSessionFactoryBean SessionFactory Connection public public throws decl_stmt javax.sql.DataSource final final = decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt Transaction = decl_stmt javax.management.Query = decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new protected protected throws return call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEarlyFlushBeforeCommit(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEarlyFlushBeforeCommit(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEarlyFlushBeforeCommit(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEarlyFlushBeforeCommit(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEarlyFlushBeforeCommit(boolean) decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() ! ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == ! ! ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() protected protected throws return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) PlatformTransactionManager Transaction SessionFactory TransactionTemplate List HibernateTemplate LocalSessionFactoryBean Session Object SessionFactory Connection public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new protected protected throws return call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public return == protected protected throws return HibernateTemplate public public return new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public return public public return Session Transaction TransactionTemplate HibernateTemplate PlatformTransactionManager SessionFactory Connection public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throw new catch HibernateTemplate public public return new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throw new HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throw new public public throw new Session Transaction TransactionTemplate List HibernateTemplate PlatformTransactionManager SessionFactory Connection public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return return catch HibernateTemplate public public return new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return return public public return Session Session Transaction TransactionTemplate HibernateTemplate PlatformTransactionManager SessionHolder SessionFactory Connection public public throws decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt sun.security.pkcs11.Session = decl_stmt sun.rmi.transport.Connection = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.SessionHolder final final = != call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public != call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() return call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() == return ! SessionHolder HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.SessionHolder final final = != new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public != call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() return call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() == return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public != return public public != return Session Transaction TransactionTemplate HibernateTemplate HibernateTransactionManager SessionHolder SessionFactory Connection public public throws decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt sun.rmi.transport.Connection = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = != call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public return call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() == return ! SessionHolder HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = != new public public ! decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public return call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() call org.springframework.orm.hibernate4.SessionHolder.getSession() == return HibernateTemplate public public ! decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public return public public return Session InOrder SessionFactory TransactionTemplate HibernateTemplate LocalSessionFactoryBean PlatformTransactionManager SessionFactory public public throws decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new protected protected throws return call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return return ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() protected protected throws return HibernateTemplate public public ! ! decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return return public public return Session InOrder SessionFactory TransactionTemplate LocalSessionFactoryBean PlatformTransactionManager SessionFactoryImplementor public public throws decl_stmt SessionFactoryImplementor final final = decl_stmt sun.security.pkcs11.Session final final = call SessionFactoryImplementor.openSession() call SessionFactoryImplementor.openSession() call SessionFactoryImplementor.openSession() call SessionFactoryImplementor.openSession() call SessionFactoryImplementor.openSession() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new protected protected throws return call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! decl_stmt sun.security.pkcs11.Session = new call Session.flush() call Session.flush() call Session.flush() call Session.flush() call Session.flush() return ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() protected protected throws return Session public public ! ! decl_stmt sun.security.pkcs11.Session = new call Session.flush() call Session.flush() call Session.flush() call Session.flush() call Session.flush() return Session Session Transaction TransactionTemplate TransactionTemplate HibernateTemplate LocalSessionFactoryBean PlatformTransactionManager SessionFactory SessionFactory Connection public public throws decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt sun.rmi.transport.Connection = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getSessionFactory() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new protected protected throws return call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.transaction.PlatformTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt org.springframework.orm.hibernate4.HibernateTemplate final final = new call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call HibernateTemplate.setFlushMode() call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public return call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public return return ! protected protected throws return public public ! ! new public public return new public public return new public public return return public public return public public return new public public return public public return HibernateTransactionManager Transaction TransactionTemplate List HibernateTemplate Session Object Interceptor SessionFactory Connection public public throws decl_stmt Interceptor = decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptor(Interceptor) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptor(Interceptor) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptor(Interceptor) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptor(Interceptor) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptor(Interceptor) decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throws return == ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throws return public public throws return HibernateTransactionManager TransactionTemplate Transaction BeanFactory Interceptor HibernateTemplate Session Interceptor SessionFactory Connection public public throws decl_stmt Interceptor = decl_stmt Interceptor = decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.beans.factory.BeanFactory = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptorBeanName(String) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptorBeanName(String) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptorBeanName(String) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptorBeanName(String) call org.springframework.orm.hibernate4.HibernateTransactionManager.setEntityInterceptorBeanName(String) call org.springframework.orm.hibernate4.HibernateTransactionManager.setBeanFactory(BeanFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setBeanFactory(BeanFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setBeanFactory(BeanFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setBeanFactory(BeanFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setBeanFactory(BeanFactory) decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! for = < ++ call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return public public throws return HibernateTransactionManager Transaction TransactionTemplate List HibernateTemplate Session Object Query SessionFactory Connection public public throws decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = decl_stmt javax.management.Query = decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() call sun.rmi.transport.Connection.isReadOnly() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() call TransactionTemplate.setReadOnly() ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) public public throws public public throws HibernateTransactionManager Transaction Exception TransactionTemplate List ConstraintViolationException Session HibernateTemplate SQLException SessionFactory Connection private private throws decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() decl_stmt java.sql.SQLException = new decl_stmt Exception = if decl_stmt GenericJDBCException = new = else decl_stmt ConstraintViolationException = new = call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throws return catch ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throws return public public throws return HibernateTransactionManager SessionHolder InOrder Transaction TransactionTemplate List HibernateTemplate DataSource Session Object SessionFactory Connection public public throws decl_stmt javax.sql.DataSource final final = decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt Transaction = call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call sun.rmi.transport.Connection.getTransactionIsolation() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) ! ! new decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() != decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throws return == decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() == ! ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() SessionHolder HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() != decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) return call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.executeFind(HibernateCallback) new public public throws return public public throws return HibernateTransactionManager SessionHolder InOrder TransactionTemplate DataSource SessionFactory Session HibernateTemplate Transaction Transaction Connection public public throws decl_stmt javax.sql.DataSource final final = decl_stmt sun.rmi.transport.Connection = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt Transaction final final = decl_stmt Transaction final final = call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new ! ! new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return catch decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() == ! call SessionHolder.isRollbackOnly() call SessionHolder.isRollbackOnly() call SessionHolder.isRollbackOnly() call SessionHolder.isRollbackOnly() call SessionHolder.isRollbackOnly() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() == ! ! decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() SessionHolder HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return public public throws return SessionHolder HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.SessionHolder = call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() call org.springframework.orm.hibernate4.SessionHolder.getTransaction() decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return public public throws return Session InOrder TransactionTemplate HibernateTemplate Transaction HibernateTransactionManager SessionFactory Transaction public public throws decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt Transaction final final = decl_stmt Transaction final final = call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call SessionFactory.getCurrentSession() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.getTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() call Session.getFlushMode() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setHibernateManagedSession(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setHibernateManagedSession(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setHibernateManagedSession(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setHibernateManagedSession(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setHibernateManagedSession(boolean) decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return catch ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return decl_stmt InOrder = call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() call InOrder.verify() HibernateTemplate public public new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return public public throws return HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setAllowCreate(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.setExposeNativeSession(boolean) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) call org.springframework.orm.hibernate4.HibernateTemplate.execute(HibernateCallback) new public public throws return public public throws return public public throws public public throws DatabaseMetaData TransactionTemplate Transaction Object HibernateTransactionManager Savepoint List HibernateTemplate DataSource Session Object Query SessionFactory Connection private private final final throws decl_stmt javax.sql.DataSource final final = decl_stmt sun.rmi.transport.Connection = decl_stmt java.sql.DatabaseMetaData = decl_stmt java.sql.Savepoint = decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session = decl_stmt Transaction = decl_stmt javax.management.Query = decl_stmt java.util.List final final = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.connection() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call Session.isOpen() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call java.sql.DatabaseMetaData.supportsSavepoints() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.getMetaData() call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) call sun.rmi.transport.Connection.setSavepoint(String) + call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Session.createQuery() call Query.list() call Query.list() call Query.list() call Query.list() call Query.list() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() call Session.isConnected() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) call org.springframework.orm.hibernate4.HibernateTransactionManager.setJdbcExceptionTranslator(SQLExceptionTranslator) new call HibernateTransactionManager.setNestedTransactionAllowed() call HibernateTransactionManager.setNestedTransactionAllowed() call HibernateTransactionManager.setNestedTransactionAllowed() call HibernateTransactionManager.setNestedTransactionAllowed() call HibernateTransactionManager.setNestedTransactionAllowed() call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) call org.springframework.orm.hibernate4.HibernateTransactionManager.setDataSource(DataSource) decl_stmt org.springframework.transaction.support.TransactionTemplate final final = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() ! ! ! decl_stmt java.lang.Object = call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public if decl_stmt java.lang.Object = else call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new protected protected decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) == ! ! ! + Object HibernateTemplate public public if decl_stmt java.lang.Object = else new protected protected decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) protected protected TransactionTemplate HibernateTemplate DriverManagerDataSource HibernateTransactionManager Properties LocalSessionFactoryBean SessionFactory public public throws decl_stmt org.springframework.jdbc.datasource.DriverManagerDataSource final final = new decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() ! ! ! try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) catch ! ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) Session TransactionTemplate HibernateTemplate DriverManagerDataSource HibernateTransactionManager Properties LocalSessionFactoryBean SessionHolder SessionFactory public public throws decl_stmt org.springframework.jdbc.datasource.DriverManagerDataSource final final = new decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() ! ! ! decl_stmt sun.security.pkcs11.Session = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() new try call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) catch decl_stmt org.springframework.orm.hibernate4.SessionHolder = call SessionHolder.isSynchronizedWithTransaction() call SessionHolder.isSynchronizedWithTransaction() call SessionHolder.isSynchronizedWithTransaction() call SessionHolder.isSynchronizedWithTransaction() call SessionHolder.isSynchronizedWithTransaction() finally call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() call sun.security.pkcs11.Session.close() ! ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) DriverManagerDataSource TransactionTemplate HibernateTemplate LazyConnectionDataSourceProxy HibernateTransactionManager Properties LocalSessionFactoryBean SessionFactory public public throws decl_stmt org.springframework.jdbc.datasource.DriverManagerDataSource = new decl_stmt org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy final final = new call LazyConnectionDataSourceProxy.setTargetDataSource() call LazyConnectionDataSourceProxy.setTargetDataSource() call LazyConnectionDataSourceProxy.setTargetDataSource() call LazyConnectionDataSourceProxy.setTargetDataSource() call LazyConnectionDataSourceProxy.setTargetDataSource() call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultAutoCommit(boolean) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultAutoCommit(boolean) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultAutoCommit(boolean) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultAutoCommit(boolean) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultAutoCommit(boolean) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultTransactionIsolation(int) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultTransactionIsolation(int) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultTransactionIsolation(int) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultTransactionIsolation(int) call org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.setDefaultTransactionIsolation(int) decl_stmt org.springframework.orm.hibernate4.LocalSessionFactoryBean = new call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setDataSource(DataSource) decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.setHibernateProperties(Properties) call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet() decl_stmt SessionFactory final final = call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() call org.springframework.orm.hibernate4.LocalSessionFactoryBean.getObject() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.setSessionFactory(SessionFactory) call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() call org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet() decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setIsolationLevel() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() call TransactionTemplate.setTimeout() ! ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) ! ! ! HibernateTemplate public public decl_stmt org.springframework.orm.hibernate4.HibernateTemplate = new return call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) call org.springframework.orm.hibernate4.HibernateTemplate.find(String) HibernateTransactionManager TransactionTemplate Session SessionFactory Transaction public public throws decl_stmt SessionFactory final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt Transaction = call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call SessionFactory.openSession() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() call Session.beginTransaction() decl_stmt org.springframework.orm.hibernate4.HibernateTransactionManager = new call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) call org.springframework.orm.hibernate4.HibernateTransactionManager.setPrepareConnection(boolean) decl_stmt org.springframework.transaction.support.TransactionTemplate = new ! ! call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) new public public ! ! public public