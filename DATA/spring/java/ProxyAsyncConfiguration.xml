org.springframework.scheduling.annotation java.lang.annotation.Annotation import org.springframework.beans.factory.config.BeanDefinition import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.Role import org.springframework.core.annotation.AnnotationUtils import org.springframework.scheduling.config.TaskManagementConfigUtils import org.springframework.util.Assert import class annotation annotation org.springframework.scheduling.annotation.ProxyAsyncConfiguration super super extends AsyncAnnotationBeanPostProcessor decl Class = public = public decl_stmt org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor = new decl_stmt java.lang.Class < extends extends = if != call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setAsyncAnnotationType(Class) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setAsyncAnnotationType(Class) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setAsyncAnnotationType(Class) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setAsyncAnnotationType(Class) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setAsyncAnnotationType(Class) if != call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExecutor(Executor) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExecutor(Executor) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExecutor(Executor) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExecutor(Executor) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExecutor(Executor) if != call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExceptionHandler(AsyncUncaughtExceptionHandler) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExceptionHandler(AsyncUncaughtExceptionHandler) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExceptionHandler(AsyncUncaughtExceptionHandler) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExceptionHandler(AsyncUncaughtExceptionHandler) call org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor.setExceptionHandler(AsyncUncaughtExceptionHandler) call AsyncAnnotationBeanPostProcessor.setProxyTargetClass() call AsyncAnnotationBeanPostProcessor.setProxyTargetClass() call AsyncAnnotationBeanPostProcessor.setProxyTargetClass() call AsyncAnnotationBeanPostProcessor.setProxyTargetClass() call AsyncAnnotationBeanPostProcessor.setProxyTargetClass() call AsyncAnnotationBeanPostProcessor.setOrder() call AsyncAnnotationBeanPostProcessor.setOrder() call AsyncAnnotationBeanPostProcessor.setOrder() call AsyncAnnotationBeanPostProcessor.setOrder() call AsyncAnnotationBeanPostProcessor.setOrder() > return