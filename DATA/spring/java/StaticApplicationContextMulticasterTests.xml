org.springframework.context.support java.util.HashMap import java.util.Locale import java.util.Map import org.junit.Test import org.springframework.beans.MutablePropertyValues import org.springframework.beans.factory.support.PropertiesBeanDefinitionReader import org.springframework.context.ACATester import org.springframework.context.AbstractApplicationContextTests import org.springframework.context.ApplicationEvent import org.springframework.context.BeanThatListens import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.event.SimpleApplicationEventMulticaster import org.springframework.core.ResolvableType import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.core.io.support.EncodedResource import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.context.support.StaticApplicationContextMulticasterTests super super extends StaticApplicationContext Resource decl Map StaticApplicationContext PropertiesBeanDefinitionReader protected protected throws decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() = new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) new call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) new decl_stmt org.springframework.beans.factory.support.PropertiesBeanDefinitionReader = new call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() call StaticApplicationContext.getDefaultListableBeanFactory() decl_stmt org.springframework.core.io.Resource = new call org.springframework.beans.factory.support.PropertiesBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.support.PropertiesBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.support.PropertiesBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.support.PropertiesBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.support.PropertiesBeanDefinitionReader.loadBeanDefinitions(Resource) new call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call StaticApplicationContext.addApplicationListener() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() call org.springframework.context.support.StaticApplicationContext.getStaticMessageSource() return public public public public throws = public public ++