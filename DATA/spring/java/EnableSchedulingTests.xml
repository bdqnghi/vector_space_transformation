org.springframework.scheduling.annotation java.util.Date import java.util.concurrent.atomic.AtomicInteger import org.junit.After import org.junit.Test import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.scheduling.TaskScheduler import org.springframework.scheduling.Trigger import org.springframework.scheduling.TriggerContext import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler import org.springframework.scheduling.config.IntervalTask import org.springframework.scheduling.config.ScheduledTaskRegistrar import org.springframework.tests.Assume import org.springframework.tests.TestGroup import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import class org.springframework.scheduling.annotation.EnableSchedulingTests AnnotationConfigApplicationContext public public if != call AnnotationConfigApplicationContext.close() call AnnotationConfigApplicationContext.close() call AnnotationConfigApplicationContext.close() call AnnotationConfigApplicationContext.close() call AnnotationConfigApplicationContext.close() public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() public public = new public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() public public = new public public = new public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() public public throws = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() AtomicInteger public public throws = new decl_stmt java.util.concurrent.atomic.AtomicInteger = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() public public return new = public = public ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return public public return new = public = public = ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return = public = public ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return public public return new = public = public = public public return public public ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return = public = public ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return = public = public = public public return new public public ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return = public = public = public public return new ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() call ThreadPoolTaskScheduler.setThreadNamePrefix() return public public public public return new public public return new public public new new public public = public public = public public return new ThreadPoolTaskScheduler public public decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = new call ThreadPoolTaskScheduler.initialize() call ThreadPoolTaskScheduler.initialize() call ThreadPoolTaskScheduler.initialize() call ThreadPoolTaskScheduler.initialize() call ThreadPoolTaskScheduler.initialize() call org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.schedule(Runnable,Trigger) call org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.schedule(Runnable,Trigger) call org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.schedule(Runnable,Trigger) call org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.schedule(Runnable,Trigger) call org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.schedule(Runnable,Trigger) new public public new public public return new new + return public public public public return new new + public public return new = = public = = public