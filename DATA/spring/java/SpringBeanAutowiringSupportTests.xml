org.springframework.web.context.support org.junit.Test import org.springframework.beans.MutablePropertyValues import org.springframework.beans.factory.annotation.Autowired import org.springframework.beans.factory.annotation.Value import org.springframework.context.annotation.AnnotationConfigUtils import org.springframework.mock.web.test.MockServletContext import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import org.springframework.web.context.WebApplicationContext import static static org.junit.Assert.* import class org.springframework.web.context.support.SpringBeanAutowiringSupportTests MockServletContext MutablePropertyValues StaticWebApplicationContext InjectionTarget public public decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() decl_stmt org.springframework.mock.web.MockServletContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) decl_stmt InjectionTarget = new instanceof