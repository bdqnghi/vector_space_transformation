org.springframework.orm.jpa java.io.IOException import java.io.ObjectInputStream import java.io.Serializable import java.lang.reflect.InvocationHandler import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.lang.reflect.Proxy import java.util.HashSet import java.util.Map import java.util.Set import javax.persistence.EntityManager import javax.persistence.EntityManagerFactory import javax.persistence.Query import javax.persistence.TransactionRequiredException import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.util.ClassUtils import org.springframework.util.CollectionUtils import class org.springframework.orm.jpa.SharedEntityManagerCreator decl Set decl Set public static public static return public static public static < return decl Class public static public static < decl_stmt java.lang.Class < = instanceof : return == : new < public static public static < < return ClassLoader public static public static < < decl_stmt java.lang.ClassLoader = if instanceof = decl_stmt java.lang.ClassLoader = if instanceof = = return != : new private private if instanceof = else = Query decl Class boolean EntityManager Object public public throws if return == else if return else if return + + else if return else if || try return catch throw else if decl_stmt java.lang.Class < = < if != && call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() return else if return else if return else if throw new + decl_stmt EntityManager = if if == throw new return else if decl_stmt java.lang.Class < = < if == return != : if == throw new else if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() if == || ! && ! call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() call EntityManager.getTransaction() throw new + + + decl_stmt boolean = if == = ! : = try decl_stmt java.lang.Object = if instanceof decl_stmt javax.management.Query = if = new = else return catch throw finally if private private throws decl Class Object public public throws if return == else if return else if decl_stmt java.lang.Class < = < if == return else if call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() return try decl_stmt java.lang.Object = return == : catch throw finally if = protected protected throws