org.springframework.test.jpa java.lang.instrument.ClassFileTransformer import java.lang.reflect.Constructor import java.lang.reflect.Field import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.util.HashMap import java.util.Map import javax.persistence.EntityManager import javax.persistence.EntityManagerFactory import junit.framework.TestCase import org.springframework.beans.BeanUtils import org.springframework.beans.BeansException import org.springframework.beans.factory.config.BeanPostProcessor import org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.support.GenericApplicationContext import org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver import org.springframework.instrument.classloading.LoadTimeWeaver import org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader import org.springframework.instrument.classloading.ShadowingClassLoader import org.springframework.orm.jpa.ExtendedEntityManagerCreator import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean import org.springframework.orm.jpa.SharedEntityManagerCreator import org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager import org.springframework.test.AbstractTransactionalSpringContextTests import org.springframework.util.ReflectionUtils import org.springframework.util.StringUtils import class annotation org.springframework.test.jpa.AbstractJpaTests super super extends EntityManagerFactory decl Map decl Map String Object EntityManager public public = = protected protected return protected protected return ! Class Class Method Method Class Object Object Class Class Object Class Constructor Class decl String Method Object ClassLoader Class Object ClassLoader ShadowingClassLoader String Class Constructor Class TestCase Class Class Field public public throws if ! return decl_stmt java.lang.String = decl_stmt java.lang.ClassLoader = decl_stmt java.lang.ClassLoader = if != else decl_stmt org.springframework.instrument.classloading.ShadowingClassLoader = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() try decl_stmt java.lang.String = decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt java.lang.reflect.Constructor = call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Constructor.setAccessible() call Constructor.setAccessible() call Constructor.setAccessible() call Constructor.setAccessible() call Constructor.setAccessible() decl_stmt java.lang.Object = call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt java.lang.Object = decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt java.lang.Object = call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() decl_stmt com.sun.jdi.Method = call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) new decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt java.lang.reflect.Constructor = call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Constructor.setAccessible() call Constructor.setAccessible() call Constructor.setAccessible() call Constructor.setAccessible() call Constructor.setAccessible() decl_stmt java.lang.Object = call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) call java.lang.reflect.Constructor.newInstance(Object) decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt com.sun.jdi.Method = call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) = call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getConstructor() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt TestCase = decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt com.sun.jdi.Field = call Class.getDeclaredField() call Class.getDeclaredField() call Class.getDeclaredField() call Class.getDeclaredField() call Class.getDeclaredField() call Field.setAccessible() call Field.setAccessible() call Field.setAccessible() call Field.setAccessible() call Field.setAccessible() call com.sun.jdi.Field.set(Object,Object) call com.sun.jdi.Field.set(Object,Object) call com.sun.jdi.Field.set(Object,Object) call com.sun.jdi.Field.set(Object,Object) call com.sun.jdi.Field.set(Object,Object) decl_stmt java.lang.Class = call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) call org.springframework.instrument.classloading.ShadowingClassLoader.loadClass(String) decl_stmt com.sun.jdi.Method = call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call TestCase.setName() call TestCase.setName() call TestCase.setName() call TestCase.setName() call TestCase.setName() call TestCase.runBare() call TestCase.runBare() call TestCase.runBare() call TestCase.runBare() call TestCase.runBare() catch throw finally protected protected return OrmXmlOverridingShadowingClassLoader protected protected decl_stmt OrmXmlOverridingShadowingClassLoader = new return protected protected protected protected return public public throws if instanceof if instanceof return Method public public try decl_stmt com.sun.jdi.Method = call Method.setAccessible() call Method.setAccessible() call Method.setAccessible() call Method.setAccessible() call Method.setAccessible() call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) catch throw new public public return ResourceOverridingShadowingClassLoader public public decl_stmt org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader = new if instanceof call ResourceOverridingShadowingClassLoader.copyTransformers() call ResourceOverridingShadowingClassLoader.copyTransformers() call ResourceOverridingShadowingClassLoader.copyTransformers() call ResourceOverridingShadowingClassLoader.copyTransformers() call ResourceOverridingShadowingClassLoader.copyTransformers() if instanceof call ResourceOverridingShadowingClassLoader.copyOverrides() call ResourceOverridingShadowingClassLoader.copyOverrides() call ResourceOverridingShadowingClassLoader.copyOverrides() call ResourceOverridingShadowingClassLoader.copyOverrides() call ResourceOverridingShadowingClassLoader.copyOverrides() return