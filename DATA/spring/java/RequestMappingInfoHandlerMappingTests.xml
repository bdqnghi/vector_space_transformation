org.springframework.web.servlet.mvc.method static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import java.lang.reflect.Method import java.util.Arrays import java.util.Collections import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import javax.servlet.http.HttpServletRequest import org.junit.Before import org.junit.Test import org.springframework.core.annotation.AnnotationUtils import org.springframework.http.HttpHeaders import org.springframework.http.MediaType import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.stereotype.Controller import org.springframework.util.MultiValueMap import org.springframework.web.HttpMediaTypeNotAcceptableException import org.springframework.web.HttpMediaTypeNotSupportedException import org.springframework.web.HttpRequestMethodNotSupportedException import org.springframework.web.bind.UnsatisfiedServletRequestParameterException import org.springframework.web.bind.annotation.RequestBody import org.springframework.web.bind.annotation.RequestMapping import org.springframework.web.bind.annotation.RequestMethod import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.method.HandlerMethod import org.springframework.web.method.support.InvocableHandlerMethod import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.HandlerExecutionChain import org.springframework.web.servlet.HandlerInterceptor import org.springframework.web.servlet.HandlerMapping import org.springframework.web.servlet.handler.HandlerInterceptorAdapter import org.springframework.web.servlet.handler.MappedInterceptor import org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition import org.springframework.web.servlet.mvc.condition.HeadersRequestCondition import org.springframework.web.servlet.mvc.condition.ParamsRequestCondition import org.springframework.web.servlet.mvc.condition.PatternsRequestCondition import org.springframework.web.servlet.mvc.condition.ProducesRequestCondition import org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition import org.springframework.web.util.UrlPathHelper import class org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMappingTests TestRequestMappingInfoHandlerMapping HandlerMethod HandlerMethod HandlerMethod HandlerMethod TestController public public throws decl_stmt TestController = new = new = new = new = new = new RequestMappingInfo decl String decl Set public public throws decl_stmt java.lang.String = decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = decl_stmt java.util.Set < = new <> HandlerMethod MockHttpServletRequest public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() HandlerMethod MockHttpServletRequest public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() HandlerMethod MockHttpServletRequest public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() = new = call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() HandlerMethod MockHttpServletRequest public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.setParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.setParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.setParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.setParameter(String,String) decl_stmt org.springframework.web.method.HandlerMethod = call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() call org.springframework.web.method.HandlerMethod.getMethod() MockHttpServletRequest public public throws try decl_stmt org.springframework.mock.web.MockHttpServletRequest = new catch new MockHttpServletRequest = public = public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) new public public throws public public throws MockHttpServletRequest public public throws try decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) catch public public throws MockHttpServletRequest decl List public public throws try decl_stmt org.springframework.mock.web.MockHttpServletRequest = new catch decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() MockHttpServletRequest String public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) String HandlerInterceptor TestRequestMappingInfoHandlerMapping HandlerExecutionChain MappedInterceptor public public throws decl_stmt java.lang.String = decl_stmt org.springframework.web.portlet.HandlerInterceptor = new decl_stmt org.springframework.web.servlet.handler.MappedInterceptor = new new decl_stmt TestRequestMappingInfoHandlerMapping = new call TestRequestMappingInfoHandlerMapping.registerHandler() call TestRequestMappingInfoHandlerMapping.registerHandler() call TestRequestMappingInfoHandlerMapping.registerHandler() call TestRequestMappingInfoHandlerMapping.registerHandler() call TestRequestMappingInfoHandlerMapping.registerHandler() new call TestRequestMappingInfoHandlerMapping.setInterceptors() call TestRequestMappingInfoHandlerMapping.setInterceptors() call TestRequestMappingInfoHandlerMapping.setInterceptors() call TestRequestMappingInfoHandlerMapping.setInterceptors() call TestRequestMappingInfoHandlerMapping.setInterceptors() new call TestRequestMappingInfoHandlerMapping.setApplicationContext() call TestRequestMappingInfoHandlerMapping.setApplicationContext() call TestRequestMappingInfoHandlerMapping.setApplicationContext() call TestRequestMappingInfoHandlerMapping.setApplicationContext() call TestRequestMappingInfoHandlerMapping.setApplicationContext() new decl_stmt org.springframework.web.portlet.HandlerExecutionChain = call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() new call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() call org.springframework.web.portlet.HandlerExecutionChain.getInterceptors() = call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() call TestRequestMappingInfoHandlerMapping.getHandler() new decl Map MockHttpServletRequest String RequestMappingInfo String public public decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt java.lang.String = new decl_stmt java.lang.String = decl_stmt java.util.Map < = < call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl Map String UrlPathHelper MockHttpServletRequest RequestMappingInfo String public public decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.web.util.UrlPathHelper = new call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) decl_stmt java.lang.String = call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) call org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(HttpServletRequest) decl_stmt java.lang.String = decl_stmt java.util.Map < = < call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() MockHttpServletRequest RequestMappingInfo public public decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) MockHttpServletRequest RequestMappingInfo public public decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) decl Map MockHttpServletRequest decl MultiValueMap public public decl_stmt org.springframework.mock.web.MockHttpServletRequest decl_stmt org.springframework.util.MultiValueMap < decl_stmt java.util.Map < = new = = call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = new = = call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = new = = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl Map MockHttpServletRequest decl MultiValueMap UrlPathHelper public public decl_stmt org.springframework.mock.web.MockHttpServletRequest decl_stmt org.springframework.web.util.UrlPathHelper = new call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setUrlDecode(boolean) call org.springframework.web.util.UrlPathHelper.setRemoveSemicolonContent(boolean) call org.springframework.web.util.UrlPathHelper.setRemoveSemicolonContent(boolean) call org.springframework.web.util.UrlPathHelper.setRemoveSemicolonContent(boolean) call org.springframework.web.util.UrlPathHelper.setRemoveSemicolonContent(boolean) call org.springframework.web.util.UrlPathHelper.setRemoveSemicolonContent(boolean) = new decl_stmt org.springframework.util.MultiValueMap < = decl_stmt java.util.Map < = call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() HandlerExecutionChain private private throws decl_stmt org.springframework.web.portlet.HandlerExecutionChain = return call org.springframework.web.portlet.HandlerExecutionChain.getHandler() call org.springframework.web.portlet.HandlerExecutionChain.getHandler() call org.springframework.web.portlet.HandlerExecutionChain.getHandler() call org.springframework.web.portlet.HandlerExecutionChain.getHandler() call org.springframework.web.portlet.HandlerExecutionChain.getHandler() MockHttpServletRequest private private throws try decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) call org.springframework.mock.web.MockHttpServletRequest.setContentType(String) catch new HandlerMethod ServletWebRequest MockHttpServletRequest ModelAndViewContainer Object private private throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.web.method.HandlerMethod = decl_stmt org.springframework.web.context.request.ServletWebRequest = new decl_stmt org.springframework.web.method.support.ModelAndViewContainer = new decl_stmt java.lang.Object = new call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() MockHttpServletRequest private private throws try decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) catch new RequestMappingInfo private private decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = String private < private < decl_stmt java.lang.String = return < < String private < private < decl_stmt java.lang.String = return < = = public = = public = = = public = = = public = = public = = public = public = public = = = public = = = public = = public = = public return = = public = = public return = = public = = public return = = public = = public return = = public = = public return HttpHeaders = = public = = public decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) return = = = public = = = public = = public = = public public public protected protected < return != RequestMapping protected protected < decl_stmt RequestMapping = if != return new new call RequestMapping.value() call RequestMapping.value() call RequestMapping.value() call RequestMapping.value() call RequestMapping.value() new call RequestMapping.method() call RequestMapping.method() call RequestMapping.method() call RequestMapping.method() call RequestMapping.method() new call RequestMapping.params() call RequestMapping.params() call RequestMapping.params() call RequestMapping.params() call RequestMapping.params() new call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() new call RequestMapping.consumes() call RequestMapping.consumes() call RequestMapping.consumes() call RequestMapping.consumes() call RequestMapping.consumes() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() new call RequestMapping.produces() call RequestMapping.produces() call RequestMapping.produces() call RequestMapping.produces() call RequestMapping.produces() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() call RequestMapping.headers() else return