org.springframework.web.cors java.io.IOException import java.nio.charset.Charset import java.util.ArrayList import java.util.List import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.http.HttpStatus import org.springframework.http.server.ServerHttpRequest import org.springframework.http.server.ServerHttpResponse import org.springframework.http.server.ServletServerHttpRequest import org.springframework.http.server.ServletServerHttpResponse import org.springframework.util.CollectionUtils import org.springframework.web.util.WebUtils import class org.springframework.web.cors.DefaultCorsProcessor super super implements Charset Log boolean ServletServerHttpRequest ServletServerHttpResponse public public throws if ! return decl_stmt org.springframework.http.server.ServletServerHttpResponse = new if call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() return decl_stmt org.springframework.http.server.ServletServerHttpRequest = new if call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() return decl_stmt boolean = if == if return else return return private private try return != catch return protected protected throws String decl List decl List String HttpMethod decl List HttpHeaders protected protected throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt HttpMethod = decl_stmt java.util.List < = decl_stmt java.util.List < = decl_stmt java.util.List < = if == || == || && == return decl_stmt org.springframework.http.HttpHeaders = call org.springframework.http.HttpHeaders.setAccessControlAllowOrigin(String) call org.springframework.http.HttpHeaders.setAccessControlAllowOrigin(String) call org.springframework.http.HttpHeaders.setAccessControlAllowOrigin(String) call org.springframework.http.HttpHeaders.setAccessControlAllowOrigin(String) call org.springframework.http.HttpHeaders.setAccessControlAllowOrigin(String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) if call org.springframework.http.HttpHeaders.setAccessControlAllowMethods(List) call org.springframework.http.HttpHeaders.setAccessControlAllowMethods(List) call org.springframework.http.HttpHeaders.setAccessControlAllowMethods(List) call org.springframework.http.HttpHeaders.setAccessControlAllowMethods(List) call org.springframework.http.HttpHeaders.setAccessControlAllowMethods(List) if && ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call org.springframework.http.HttpHeaders.setAccessControlAllowHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlAllowHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlAllowHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlAllowHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlAllowHeaders(List) if ! call org.springframework.http.HttpHeaders.setAccessControlExposeHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlExposeHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlExposeHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlExposeHeaders(List) call org.springframework.http.HttpHeaders.setAccessControlExposeHeaders(List) if call org.springframework.http.HttpHeaders.setAccessControlAllowCredentials(boolean) call org.springframework.http.HttpHeaders.setAccessControlAllowCredentials(boolean) call org.springframework.http.HttpHeaders.setAccessControlAllowCredentials(boolean) call org.springframework.http.HttpHeaders.setAccessControlAllowCredentials(boolean) call org.springframework.http.HttpHeaders.setAccessControlAllowCredentials(boolean) if && != call org.springframework.http.HttpHeaders.setAccessControlMaxAge(long) call org.springframework.http.HttpHeaders.setAccessControlMaxAge(long) call org.springframework.http.HttpHeaders.setAccessControlMaxAge(long) call org.springframework.http.HttpHeaders.setAccessControlMaxAge(long) call org.springframework.http.HttpHeaders.setAccessControlMaxAge(long) return protected protected return protected < protected < return private private return : protected < protected < < return HttpHeaders private < private < decl_stmt org.springframework.http.HttpHeaders = return call org.springframework.http.HttpHeaders.getAccessControlRequestHeaders() call org.springframework.http.HttpHeaders.getAccessControlRequestHeaders() call org.springframework.http.HttpHeaders.getAccessControlRequestHeaders() call org.springframework.http.HttpHeaders.getAccessControlRequestHeaders() call org.springframework.http.HttpHeaders.getAccessControlRequestHeaders() : new < call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet()