org.springframework.http.converter.xml java.io.ByteArrayInputStream import java.io.IOException import java.io.InputStream import java.io.OutputStream import java.io.StringReader import java.util.HashSet import java.util.Set import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import javax.xml.parsers.ParserConfigurationException import javax.xml.stream.XMLInputFactory import javax.xml.stream.XMLResolver import javax.xml.stream.XMLStreamException import javax.xml.stream.XMLStreamReader import javax.xml.transform.Result import javax.xml.transform.Source import javax.xml.transform.TransformerException import javax.xml.transform.TransformerFactory import javax.xml.transform.dom.DOMSource import javax.xml.transform.sax.SAXSource import javax.xml.transform.stax.StAXSource import javax.xml.transform.stream.StreamResult import javax.xml.transform.stream.StreamSource import org.w3c.dom.Document import org.xml.sax.EntityResolver import org.xml.sax.InputSource import org.xml.sax.SAXException import org.xml.sax.XMLReader import org.xml.sax.helpers.XMLReaderFactory import org.springframework.http.HttpInputMessage import org.springframework.http.HttpOutputMessage import org.springframework.http.MediaType import org.springframework.http.converter.AbstractHttpMessageConverter import org.springframework.http.converter.HttpMessageConversionException import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.http.converter.HttpMessageNotWritableException import org.springframework.util.StreamUtils import class super super extends boolean decl Set TransformerFactory EntityResolver boolean XMLResolver public public = public public return public public = if public public return public public < return call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() InputStream protected protected < extends extends throws decl_stmt java.io.InputStream = if == return else if == return else if == return else if == || == return else throw new + + DocumentBuilderFactory DocumentBuilder Document private private throws try decl_stmt DocumentBuilderFactory = call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() ! call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() call DocumentBuilderFactory.setFeature() decl_stmt DocumentBuilder = call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() if ! call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() decl_stmt javax.swing.text.Document = call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() return new catch if ! throw new + + throw catch throw new + catch throw new + decl byte XMLReader private private throws try decl_stmt XMLReader = call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() ! call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() if ! call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() decl_stmt byte = return new new new catch throw new + XMLInputFactory XMLStreamReader private private try decl_stmt XMLInputFactory = call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() if ! call XMLInputFactory.setXMLResolver() call XMLInputFactory.setXMLResolver() call XMLInputFactory.setXMLResolver() call XMLInputFactory.setXMLResolver() call XMLInputFactory.setXMLResolver() decl_stmt XMLStreamReader = call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() return new catch throw new + decl byte private private throws decl_stmt byte = return new new CountingOutputStream protected protected if instanceof try decl_stmt CountingOutputStream = new new return catch return Result protected protected throws try decl_stmt javax.naming.spi.Result = new catch throw new + + private private throws public public throws ++ public public throws += public public throws += public public return new new public public return