org.springframework.web.servlet.view.script java.util.HashMap import java.util.Map import javax.servlet.ServletContext import static static org.junit.Assert.assertEquals import org.junit.Before import org.junit.Test import static static org.mockito.Mockito.mock import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockServletContext import org.springframework.web.context.WebApplicationContext import class org.springframework.web.servlet.view.script.JythonScriptTemplateTests WebApplicationContext ServletContext public public = = new decl Map MockHttpServletResponse public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletResponse = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() MockHttpServletRequest MockHttpServletResponse ScriptTemplateView private private < throws decl_stmt org.springframework.web.servlet.view.script.ScriptTemplateView = decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.web.servlet.view.script.ScriptTemplateView.renderMergedOutputModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.script.ScriptTemplateView.renderMergedOutputModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.script.ScriptTemplateView.renderMergedOutputModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.script.ScriptTemplateView.renderMergedOutputModel(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.view.script.ScriptTemplateView.renderMergedOutputModel(Map,HttpServletRequest,HttpServletResponse) return AnnotationConfigApplicationContext ScriptTemplateView private private throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.script.ScriptTemplateView = new call ScriptTemplateView.setApplicationContext() call ScriptTemplateView.setApplicationContext() call ScriptTemplateView.setApplicationContext() call ScriptTemplateView.setApplicationContext() call ScriptTemplateView.setApplicationContext() call ScriptTemplateView.setUrl() call ScriptTemplateView.setUrl() call ScriptTemplateView.setUrl() call ScriptTemplateView.setUrl() call ScriptTemplateView.setUrl() call ScriptTemplateView.afterPropertiesSet() call ScriptTemplateView.afterPropertiesSet() call ScriptTemplateView.afterPropertiesSet() call ScriptTemplateView.afterPropertiesSet() call ScriptTemplateView.afterPropertiesSet() return ScriptTemplateConfigurer public public decl_stmt org.springframework.web.servlet.view.script.ScriptTemplateConfigurer = new call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setScripts(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setScripts(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setScripts(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setScripts(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setScripts(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setEngineName(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setEngineName(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setEngineName(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setEngineName(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setEngineName(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setRenderFunction(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setRenderFunction(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setRenderFunction(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setRenderFunction(String) call org.springframework.web.servlet.view.script.ScriptTemplateConfigurer.setRenderFunction(String) return