org.springframework.test.context.support java.util.LinkedHashSet import java.util.Set import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.test.context.ActiveProfiles import org.springframework.test.context.ActiveProfilesResolver import org.springframework.test.util.MetaAnnotationUtils.AnnotationDescriptor import org.springframework.util.Assert import org.springframework.util.StringUtils import static static org.springframework.test.util.MetaAnnotationUtils.* import class org.springframework.test.context.support.DefaultActiveProfilesResolver super super implements Log decl Class decl Set decl Class ActiveProfiles decl AnnotationDescriptor public public < decl_stmt java.util.Set final final final < = new < decl_stmt java.lang.Class < = decl_stmt AnnotationDescriptor < = if == if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() else decl_stmt java.lang.Class < = call decl AnnotationDescriptor.getDeclaringClass() call decl AnnotationDescriptor.getDeclaringClass() call decl AnnotationDescriptor.getDeclaringClass() call decl AnnotationDescriptor.getDeclaringClass() call decl AnnotationDescriptor.getDeclaringClass() decl_stmt ActiveProfiles = call decl AnnotationDescriptor.synthesizeAnnotation() call decl AnnotationDescriptor.synthesizeAnnotation() call decl AnnotationDescriptor.synthesizeAnnotation() call decl AnnotationDescriptor.synthesizeAnnotation() call decl AnnotationDescriptor.synthesizeAnnotation() if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() for : call ActiveProfiles.profiles() call ActiveProfiles.profiles() call ActiveProfiles.profiles() call ActiveProfiles.profiles() call ActiveProfiles.profiles() if call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return