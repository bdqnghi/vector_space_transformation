org.springframework.aop.scope java.lang.reflect.Modifier import org.springframework.aop.framework.AopInfrastructureBean import org.springframework.aop.framework.ProxyConfig import org.springframework.aop.framework.ProxyFactory import org.springframework.aop.support.DelegatingIntroductionInterceptor import org.springframework.aop.target.SimpleBeanTargetSource import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.FactoryBean import org.springframework.beans.factory.FactoryBeanNotInitializedException import org.springframework.beans.factory.config.ConfigurableBeanFactory import org.springframework.util.ClassUtils import class annotation org.springframework.aop.scope.ScopedProxyFactoryBean super super extends super implements String SimpleBeanTargetSource Object public public = ProxyFactory ConfigurableBeanFactory decl Class ScopedObject public public if ! instanceof throw new + decl_stmt org.springframework.beans.factory.config.ConfigurableBeanFactory = decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.copyFrom() call ProxyFactory.copyFrom() call ProxyFactory.copyFrom() call ProxyFactory.copyFrom() call ProxyFactory.copyFrom() call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() decl_stmt java.lang.Class < = if == throw new + + if ! || call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() || call decl Class.getModifiers() call decl Class.getModifiers() call decl Class.getModifiers() call decl Class.getModifiers() call decl Class.getModifiers() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() decl_stmt org.springframework.aop.scope.ScopedObject = new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() new call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() call org.springframework.beans.factory.config.ConfigurableBeanFactory.getBeanClassLoader() public public if == throw new return public < public < if != return return public public return