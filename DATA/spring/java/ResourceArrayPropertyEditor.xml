org.springframework.core.io.support java.beans.PropertyEditorSupport import java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.List import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.env.Environment import org.springframework.core.env.PropertyResolver import org.springframework.core.env.StandardEnvironment import org.springframework.core.io.Resource import org.springframework.util.Assert import class org.springframework.core.io.support.ResourceArrayPropertyEditor super super extends boolean Log ResourcePatternResolver PropertyResolver String public public decl_stmt java.lang.String = try catch throw new + + + decl Collection Resource decl Resource decl List String public public throws if instanceof || instanceof && ! instanceof decl_stmt java.util.Collection < = instanceof < : decl_stmt java.util.List < = new < for : if instanceof decl_stmt java.lang.String = try decl_stmt org.springframework.core.io.Resource = for : if ! call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + else if instanceof decl_stmt org.springframework.core.io.Resource = if ! call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else throw new + + + + call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() else protected protected if == = new return :