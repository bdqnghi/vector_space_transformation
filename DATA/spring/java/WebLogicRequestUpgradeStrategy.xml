org.springframework.web.socket.server.standard java.io.IOException import java.lang.reflect.Constructor import java.lang.reflect.Method import java.util.List import java.util.Map import javax.servlet.AsyncContext import javax.servlet.ServletContext import javax.servlet.ServletException import javax.servlet.ServletRequest import javax.servlet.ServletRequestWrapper import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import javax.websocket.CloseReason import org.glassfish.tyrus.core.TyrusUpgradeResponse import org.glassfish.tyrus.core.Utils import org.glassfish.tyrus.spi.Connection import org.glassfish.tyrus.spi.WebSocketEngine.UpgradeInfo import org.glassfish.tyrus.spi.Writer import org.springframework.beans.BeanWrapper import org.springframework.beans.BeanWrapperImpl import org.springframework.util.ReflectionUtils import org.springframework.web.socket.server.HandshakeFailureException import class org.springframework.web.socket.server.standard.WebLogicRequestUpgradeStrategy super super extends TyrusMuxableWebSocketHelper decl Connection TyrusEndpointHelper boolean WebLogicServletWriterHelper public public protected protected return Object Object Writer Object BeanWrapper AsyncContext Connection boolean protected protected throws for < < : decl_stmt AsyncContext = call AsyncContext.setTimeout() call AsyncContext.setTimeout() call AsyncContext.setTimeout() call AsyncContext.setTimeout() call AsyncContext.setTimeout() - decl_stmt java.lang.Object = decl_stmt org.springframework.beans.BeanWrapper = new decl_stmt java.lang.Object = call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() decl_stmt java.lang.Object = call TyrusMuxableWebSocketHelper.newInstance() call TyrusMuxableWebSocketHelper.newInstance() call TyrusMuxableWebSocketHelper.newInstance() call TyrusMuxableWebSocketHelper.newInstance() call TyrusMuxableWebSocketHelper.newInstance() call TyrusMuxableWebSocketHelper.upgrade() call TyrusMuxableWebSocketHelper.upgrade() call TyrusMuxableWebSocketHelper.upgrade() call TyrusMuxableWebSocketHelper.upgrade() call TyrusMuxableWebSocketHelper.upgrade() decl_stmt boolean = != decl_stmt Writer = call WebLogicServletWriterHelper.newInstance() call WebLogicServletWriterHelper.newInstance() call WebLogicServletWriterHelper.newInstance() call WebLogicServletWriterHelper.newInstance() call WebLogicServletWriterHelper.newInstance() decl_stmt sun.rmi.transport.Connection = new new call TyrusMuxableWebSocketHelper.registerForReadEvent() call TyrusMuxableWebSocketHelper.registerForReadEvent() call TyrusMuxableWebSocketHelper.registerForReadEvent() call TyrusMuxableWebSocketHelper.registerForReadEvent() call TyrusMuxableWebSocketHelper.registerForReadEvent() private static private static try return catch return catch throw new private static < private static < throws return private static private static < throws return private static private static while instanceof = return decl Object private private try decl_stmt java.lang.Object = new : new return catch throw new private private try catch throw new private private try catch throw new Object Object ServletContext Object public public try decl_stmt ServletContext = decl_stmt java.lang.Object = decl_stmt java.lang.Object = if == decl_stmt java.lang.Object = = return catch throw new decl Object private private try decl_stmt java.lang.Object = new : new return catch throw new