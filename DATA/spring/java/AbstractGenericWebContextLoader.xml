org.springframework.test.context.web javax.servlet.ServletContext import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.context.ApplicationContext import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.annotation.AnnotationConfigUtils import org.springframework.core.io.DefaultResourceLoader import org.springframework.core.io.FileSystemResourceLoader import org.springframework.core.io.ResourceLoader import org.springframework.mock.web.MockServletContext import org.springframework.test.context.MergedContextConfiguration import org.springframework.test.context.support.AbstractContextLoader import org.springframework.util.Assert import org.springframework.web.context.WebApplicationContext import org.springframework.web.context.support.GenericWebApplicationContext import class org.springframework.test.context.web.AbstractGenericWebContextLoader super super extends Log ApplicationContext GenericWebApplicationContext WebMergedContextConfiguration public final public final throws if ! instanceof throw new + decl_stmt org.springframework.test.context.web.WebMergedContextConfiguration = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl_stmt org.springframework.web.context.support.GenericWebApplicationContext = new decl_stmt org.springframework.context.ApplicationContext = if != call GenericWebApplicationContext.setParent() call GenericWebApplicationContext.setParent() call GenericWebApplicationContext.setParent() call GenericWebApplicationContext.setParent() call GenericWebApplicationContext.setParent() call GenericWebApplicationContext.getDefaultListableBeanFactory() call GenericWebApplicationContext.getDefaultListableBeanFactory() call GenericWebApplicationContext.getDefaultListableBeanFactory() call GenericWebApplicationContext.getDefaultListableBeanFactory() call GenericWebApplicationContext.getDefaultListableBeanFactory() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.registerShutdownHook() call GenericWebApplicationContext.registerShutdownHook() call GenericWebApplicationContext.registerShutdownHook() call GenericWebApplicationContext.registerShutdownHook() call GenericWebApplicationContext.registerShutdownHook() return protected protected ServletContext ResourceLoader String ApplicationContext protected protected decl_stmt org.springframework.context.ApplicationContext = if == || ! instanceof decl_stmt java.lang.String = decl_stmt org.springframework.core.io.ResourceLoader = call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) new : new decl_stmt ServletContext = new call ServletContext.setAttribute() call ServletContext.setAttribute() call ServletContext.setAttribute() call ServletContext.setAttribute() call ServletContext.setAttribute() else decl_stmt ServletContext = while != if instanceof && ! call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() instanceof = break = call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() call org.springframework.context.ApplicationContext.getParent() != protected protected protected protected public final public final throws throw new