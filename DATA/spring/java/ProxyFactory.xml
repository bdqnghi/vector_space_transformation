org.springframework.aop.framework org.aopalliance.intercept.Interceptor import org.springframework.aop.TargetSource import org.springframework.util.ClassUtils import class annotation org.springframework.aop.framework.ProxyFactory super super extends public public return public public return public static < public static < < return new public static < public static < < return new ProxyFactory public static public static if == throw new decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() call ProxyFactory.setTargetSource() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() return call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource)