Antlr3.Tool System.Collections.Generic using System.Linq using Antlr3.Codegen.CodeGenerator Antlr.Runtime.IToken class Antlr3.Tool.AttributeScope bool bool bool Grammar string AttributeScope IToken bool bool decl List decl Dictionary bool return = return = return = return = return = return = return return call decl List.AsReadOnly() call decl List.AsReadOnly() call decl List.AsReadOnly() call decl List.AsReadOnly() call decl List.AsReadOnly() return == : return if return + else if return + return decl IList Attribute public virtual public virtual decl_stmt System.Collections.Generic.IList < = new < - foreach in decl_stmt Antlr3.Tool.Attribute = new if ! && != = for = <= ++ if < if == = break else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() break Attribute public virtual public virtual decl_stmt Antlr3.Tool.Attribute = new for = <= ++ if < if == = break else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() break GrammarAST string public public decl_stmt string = decl_stmt Antlr3.Tool.GrammarAST if out && != else = public virtual public virtual return call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() == decl HashSet string public virtual < public virtual < if == || == || == return decl_stmt System.Collections.Generic.HashSet < = new < foreach in decl_stmt string = if != call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() if == return return public override public override return : + + +