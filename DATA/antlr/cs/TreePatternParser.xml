Antlr.Runtime.Tree System.InvalidOperationException class Antlr.Runtime.Tree.TreePatternParser ITreeAdaptor int TreeWizard TreePatternLexer object public virtual public virtual if == return else if == decl_stmt object = if == return return return object object object public virtual public virtual if != throw new = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() decl_stmt object = if == return while == || == || == || == if == decl_stmt object = call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) else decl_stmt object = if == return call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) call Antlr.Runtime.Tree.ITreeAdaptor.AddChild(object,object) if != throw new = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() return decl TreeWizard int string string decl TreePattern IToken string string public virtual public virtual decl_stmt string = if == = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() if != return = call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() if != return = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() if == = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() decl_stmt Antlr.Runtime.IToken = new decl_stmt TreePattern = new if != = return if != return decl_stmt string = call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() if call decl TreePattern.Equals() call decl TreePattern.Equals() call decl TreePattern.Equals() call decl TreePattern.Equals() call decl TreePattern.Equals() return call Antlr.Runtime.Tree.ITreeAdaptor.Nil() call Antlr.Runtime.Tree.ITreeAdaptor.Nil() call Antlr.Runtime.Tree.ITreeAdaptor.Nil() call Antlr.Runtime.Tree.ITreeAdaptor.Nil() call Antlr.Runtime.Tree.ITreeAdaptor.Nil() decl_stmt string = decl_stmt string = if == = call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() call TreePatternLexer.sval() = = call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() call TreePatternLexer.NextToken() decl_stmt int = call Antlr.Runtime.Tree.TreeWizard.GetTokenType(string) call Antlr.Runtime.Tree.TreeWizard.GetTokenType(string) call Antlr.Runtime.Tree.TreeWizard.GetTokenType(string) call Antlr.Runtime.Tree.TreeWizard.GetTokenType(string) call Antlr.Runtime.Tree.TreeWizard.GetTokenType(string) if == return decl_stmt object = call Antlr.Runtime.Tree.ITreeAdaptor.Create(int,IToken,string) call Antlr.Runtime.Tree.ITreeAdaptor.Create(int,IToken,string) call Antlr.Runtime.Tree.ITreeAdaptor.Create(int,IToken,string) call Antlr.Runtime.Tree.ITreeAdaptor.Create(int,IToken,string) call Antlr.Runtime.Tree.ITreeAdaptor.Create(int,IToken,string) if != && call int.GetType() call int.GetType() call int.GetType() call int.GetType() call int.GetType() == typeof = if != && call int.GetType() call int.GetType() call int.GetType() call int.GetType() call int.GetType() == typeof = return