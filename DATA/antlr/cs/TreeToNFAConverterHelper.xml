Antlr3.Grammars Antlr.Runtime using Antlr3.Analysis using Antlr3.Tool using System.ArgumentNullException Antlr.Runtime.Tree.CommonTreeNodeStream Antlr3.Misc.IIntSet Antlr3.Misc.IntervalSet Antlr.Runtime.Tree.ITreeNodeStream class Antlr3.Grammars.TreeToNFAConverter Grammar NFA string int NFAFactory int int TreeToNFAConverter public public decl_stmt Antlr3.Grammars.TreeToNFAConverter = new new = = = return call TreeToNFAConverter.setRule() call TreeToNFAConverter.setRule() call TreeToNFAConverter.setRule() call TreeToNFAConverter.setRule() call TreeToNFAConverter.setRule() Rule TreeToNFAConverter var internal internal decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) if call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) return - decl_stmt Antlr3.Grammars.TreeToNFAConverter = new new ++ = = = decl_stmt var = call TreeToNFAConverter.testBlockAsSet() call TreeToNFAConverter.testBlockAsSet() call TreeToNFAConverter.testBlockAsSet() call TreeToNFAConverter.testBlockAsSet() call TreeToNFAConverter.testBlockAsSet() if return - return TreeToNFAConverter var public public decl_stmt Antlr3.Grammars.TreeToNFAConverter = new new ++ = = = decl_stmt var = call TreeToNFAConverter.testSetRule() call TreeToNFAConverter.testSetRule() call TreeToNFAConverter.testSetRule() call TreeToNFAConverter.testSetRule() call TreeToNFAConverter.testSetRule() if = return Transition Rule NFAState Transition NFAState protected virtual protected virtual decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) decl_stmt Antlr3.Analysis.NFAState = while call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) != = call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) if call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) call Antlr3.Analysis.NFAState.GetTransition(int) != decl_stmt Antlr3.Analysis.NFAState = call Antlr3.Tool.NFAFactory.NewState() call Antlr3.Tool.NFAFactory.NewState() call Antlr3.Tool.NFAFactory.NewState() call Antlr3.Tool.NFAFactory.NewState() call Antlr3.Tool.NFAFactory.NewState() decl_stmt Antlr3.Analysis.Transition = new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) = decl_stmt Antlr3.Analysis.Transition = new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) int protected virtual protected virtual decl_stmt int = call Antlr3.Tool.NFAFactory.BuildEofStates(IEnumerable) call Antlr3.Tool.NFAFactory.BuildEofStates(IEnumerable) call Antlr3.Tool.NFAFactory.BuildEofStates(IEnumerable) call Antlr3.Tool.NFAFactory.BuildEofStates(IEnumerable) call Antlr3.Tool.NFAFactory.BuildEofStates(IEnumerable) if == IToken public override public override if > throw decl_stmt Antlr.Runtime.IToken = if is = else if is = + private private if == throw new return != && > private private = = call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) NFAState Rule NFAState int private private if != = call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) if == || == decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) call Antlr3.Tool.Grammar.GetLocallyDefinedRule(string) decl_stmt Antlr3.Analysis.NFAState = = call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) new if call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) > = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) decl_stmt int = call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) decl_stmt Antlr3.Analysis.NFAState = new private private return call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) private private if == = call Antlr3.Tool.NFAFactory.BuildEpsilon() call Antlr3.Tool.NFAFactory.BuildEpsilon() call Antlr3.Tool.NFAFactory.BuildEpsilon() call Antlr3.Tool.NFAFactory.BuildEpsilon() call Antlr3.Tool.NFAFactory.BuildEpsilon() else call Antlr3.Tool.NFAFactory.OptimizeAlternative(StateCluster) call Antlr3.Tool.NFAFactory.OptimizeAlternative(StateCluster) call Antlr3.Tool.NFAFactory.OptimizeAlternative(StateCluster) call Antlr3.Tool.NFAFactory.OptimizeAlternative(StateCluster) call Antlr3.Tool.NFAFactory.OptimizeAlternative(StateCluster) return private private return int private private if call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) call Antlr3.Tool.Grammar.GetNumberOfAltsForDecisionNFA(NFAState) > = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) decl_stmt int = call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) return int StateCluster private private if != = call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildAoptional(StateCluster) call Antlr3.Tool.NFAFactory.BuildAoptional(StateCluster) call Antlr3.Tool.NFAFactory.BuildAoptional(StateCluster) call Antlr3.Tool.NFAFactory.BuildAoptional(StateCluster) call Antlr3.Tool.NFAFactory.BuildAoptional(StateCluster) = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) decl_stmt int = call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() return GrammarAST NFAState int StateCluster private private decl_stmt Antlr3.Tool.GrammarAST = if != = call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildAstar(StateCluster) call Antlr3.Tool.NFAFactory.BuildAstar(StateCluster) call Antlr3.Tool.NFAFactory.BuildAstar(StateCluster) call Antlr3.Tool.NFAFactory.BuildAstar(StateCluster) call Antlr3.Tool.NFAFactory.BuildAstar(StateCluster) = + call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) decl_stmt int = call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) decl_stmt Antlr3.Analysis.NFAState = call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) = = call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() return GrammarAST NFAState int StateCluster private private decl_stmt Antlr3.Tool.GrammarAST = if != = call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) call Antlr3.Tool.NFAFactory.BuildAlternativeBlockFromSet(StateCluster) decl_stmt Antlr3.Analysis.StateCluster = call NFAFactory.BuildAplus() call NFAFactory.BuildAplus() call NFAFactory.BuildAplus() call NFAFactory.BuildAplus() call NFAFactory.BuildAplus() = + call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) decl_stmt int = call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.AssignDecisionNumber(NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionNFA(int,NFAState) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) call Antlr3.Tool.Grammar.SetDecisionBlockAST(int,GrammarAST) decl_stmt Antlr3.Analysis.NFAState = call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) call Antlr3.Analysis.NFAState.SetDecisionASTNode(GrammarAST) = return private private out out = call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) return call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) private private return call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) StateCluster private private decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) = call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) call Antlr3.Tool.NFAFactory.BuildAB(StateCluster,StateCluster) = return int IIntSet private private decl_stmt int = if == = else = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) decl_stmt Antlr3.Misc.IIntSet = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) if return call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) int IIntSet private private decl_stmt int = decl_stmt Antlr3.Misc.IIntSet = if == = call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) if == else = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) else = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) if == || return call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) IIntSet private private decl_stmt Antlr3.Misc.IIntSet = = = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) if return call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) call Antlr3.Tool.NFAFactory.BuildSet(IIntSet,GrammarAST) private private = NFAState StateCluster Rule private private decl_stmt Antlr3.Analysis.NFAState = call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) if != decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) = = if call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() call StateCluster.Left() is && != return return NFAState StateCluster Rule private private if == decl_stmt Antlr3.Analysis.NFAState = call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) call Antlr3.Tool.Grammar.GetRuleStartState(string,string) if != decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) call Antlr3.Tool.NFAFactory.BuildRuleRef(Rule,NFAState) = return return else decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) = return StateCluster private private if == return call Antlr3.Tool.NFAFactory.BuildCharLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildCharLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildCharLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildCharLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildCharLiteralAtom(GrammarAST) else decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) = return StateCluster private private if == return call Antlr3.Tool.NFAFactory.BuildStringLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildStringLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildStringLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildStringLiteralAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildStringLiteralAtom(GrammarAST) else decl_stmt Antlr3.Analysis.StateCluster = call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) call Antlr3.Tool.NFAFactory.BuildAtom(GrammarAST) = return private private if == && > || == return call Antlr3.Tool.NFAFactory.BuildWildcardTree(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcardTree(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcardTree(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcardTree(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcardTree(GrammarAST) else return call Antlr3.Tool.NFAFactory.BuildWildcard(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcard(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcard(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcard(GrammarAST) call Antlr3.Tool.NFAFactory.BuildWildcard(GrammarAST) int private private decl_stmt int if == = else = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) if int IIntSet private private decl_stmt int if == decl_stmt Antlr3.Misc.IIntSet = call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) call Antlr3.Tool.Grammar.GetSetFromRule(TreeToNFAConverter,string) if == else else = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) if int private private decl_stmt int = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) if int int private private if == decl_stmt int = decl_stmt int = Transition private private decl_stmt Antlr3.Analysis.Transition = IIntSet private private decl_stmt Antlr3.Misc.IIntSet = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet)