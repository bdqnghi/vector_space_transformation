Antlr4.StringTemplate.Misc System.Text.StringBuilder class Antlr4.StringTemplate.Misc.Utility public static public static return - * public static public static if = else if = return public static public static if = - else if = - return int public static public static if == return decl_stmt int = if == return if > return return string string public static public static if == return decl_stmt string = decl_stmt string = if ! call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() += return public static public static = = = return int char StringBuilder public static public static decl_stmt System.Text.StringBuilder = new decl_stmt int = while < decl_stmt char = if == && call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) += continue if == && call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) += continue if == && && ! call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) += continue call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) ++ return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) int int int public static public static decl_stmt int = decl_stmt int = decl_stmt int = while < if == ++ = else ++ ++ return new