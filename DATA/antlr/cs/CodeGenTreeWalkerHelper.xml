Antlr3.Grammars System.Collections.Generic using Antlr3.Codegen using Antlr3.Extensions using System.ArgumentException Antlr.Runtime.CommonToken System.Console Antlr3.Tool.ErrorManager Antlr3.Tool.Grammar Antlr3.Tool.GrammarAST Antlr3.Tool.GrammarType Antlr3.Misc.IIntSet Antlr.Runtime.IToken Antlr3.Analysis.Label Antlr3.Tool.LabelType Antlr.Runtime.MismatchedTokenException Antlr.Runtime.NoViableAltException Antlr.Runtime.RecognitionException Antlr3.Tool.Rule Antlr3.Tool.RuleType Antlr4.StringTemplate.Template Antlr4.StringTemplate.TemplateGroup class Antlr3.Grammars.CodeGenTreeWalker TemplateGroup Template int decl HashSet CodeGenerator string Template int int Grammar int Template string Template int int bool IToken public override public override decl_stmt Antlr.Runtime.IToken = if is = else if is = + public public + string protected protected decl_stmt string = if == = return CommonToken Rule Template string protected protected decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) decl_stmt string = if ! += if || > && == && == || ! = call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) decl_stmt Antlr.Runtime.CommonToken = new call Antlr3.Tool.Grammar.DefineRuleRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineRuleRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineRuleRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineRuleRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineRuleRefLabel(string,IToken,GrammarAST) decl_stmt Antlr4.StringTemplate.Template = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) if != call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() return CommonToken bool Rule Template string protected protected decl_stmt bool = if == && ! && == if == && == && == || == && == && == else = decl_stmt string = decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) if || > && == && == || ! = call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.CreateUniqueLabel(string) decl_stmt Antlr.Runtime.CommonToken = new call Antlr3.Tool.Grammar.DefineTokenRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineTokenRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineTokenRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineTokenRefLabel(string,IToken,GrammarAST) call Antlr3.Tool.Grammar.DefineTokenRefLabel(string,IToken,GrammarAST) decl_stmt Antlr4.StringTemplate.Template = if && call Antlr4.StringTemplate.TemplateGroup.IsDefined(string) call Antlr4.StringTemplate.TemplateGroup.IsDefined(string) call Antlr4.StringTemplate.TemplateGroup.IsDefined(string) call Antlr4.StringTemplate.TemplateGroup.IsDefined(string) call Antlr4.StringTemplate.TemplateGroup.IsDefined(string) + + = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) + + if == = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) + if != call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() return decl Grammar Rule bool public public decl_stmt bool = if != decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) if != decl_stmt LabelElementPair = call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) if != && == || == || == = return string Rule string string string protected protected if == return decl_stmt string = decl_stmt string = decl_stmt string = decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) if != && ! if == = else if == = if && != = if = decl_stmt string = + + return decl IList string protected < protected < < if == || == return decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt string if == || == || == = else = call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return public public = = = object string private private if == = = = decl_stmt string = string = string if != call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() if != decl_stmt object = if != call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() if == && == if != decl_stmt object = if != call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() private private if != call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Antlr3.Tool.Grammar.GetRecognizerName() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() private private out out out out = = call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) private private if != call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() private private ref ref ref ref if == = = call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) call Antlr3.Tool.Grammar.GenerateMethodForRule(string) private private out out out out out out out out out out out out out out out out = = = = - = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) = = private private == string string private private out out = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() decl_stmt string = if = else if == if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() = else = else if ! == && == = = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) if call Antlr3.Tool.Grammar.IsEmptyRule(GrammarAST) call Antlr3.Tool.Grammar.IsEmptyRule(GrammarAST) call Antlr3.Tool.Grammar.IsEmptyRule(GrammarAST) call Antlr3.Tool.Grammar.IsEmptyRule(GrammarAST) call Antlr3.Tool.Grammar.IsEmptyRule(GrammarAST) decl_stmt string = string call Antlr3.Tool.Grammar.GetBlockOption(GrammarAST,string) call Antlr3.Tool.Grammar.GetBlockOption(GrammarAST,string) call Antlr3.Tool.Grammar.GetBlockOption(GrammarAST,string) call Antlr3.Tool.Grammar.GetBlockOption(GrammarAST,string) call Antlr3.Tool.Grammar.GetBlockOption(GrammarAST,string) if == = string call Antlr3.Tool.Grammar.GetOption(string) call Antlr3.Tool.Grammar.GetOption(string) call Antlr3.Tool.Grammar.GetOption(string) call Antlr3.Tool.Grammar.GetOption(string) call Antlr3.Tool.Grammar.GetOption(string) if != && call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() && call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() || call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() != && call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() bool Rule private private if != if == decl_stmt bool = call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() || != && else = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateActionAttributeReferencesForSingleScope(Rule,IDictionary) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateActionAttributeReferencesForSingleScope(Rule,IDictionary) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateActionAttributeReferencesForSingleScope(Rule,IDictionary) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateActionAttributeReferencesForSingleScope(Rule,IDictionary) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateActionAttributeReferencesForSingleScope(Rule,IDictionary) if != Template private private ref ref out out = ++ if == decl_stmt Antlr4.StringTemplate.Template = if != = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) = call Antlr4.StringTemplate.Compiler.CodeGenerator.GenLookaheadDecision(StringTemplate,DFA) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenLookaheadDecision(StringTemplate,DFA) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenLookaheadDecision(StringTemplate,DFA) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenLookaheadDecision(StringTemplate,DFA) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenLookaheadDecision(StringTemplate,DFA) else = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) + - = if == = private private GrammarAST bool private private ref ref if == ++ decl_stmt Antlr3.Tool.GrammarAST = decl_stmt bool = == && call GrammarAST.GetChild() call GrammarAST.GetChild() call GrammarAST.GetChild() call GrammarAST.GetChild() call GrammarAST.GetChild() != && call GrammarAST.GetChild() call GrammarAST.GetChild() call GrammarAST.GetChild() call GrammarAST.GetChild() call GrammarAST.GetChild() == if != && ! == ++ Template int Rule Template private private out out if == && decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) = call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) if call Antlr3.Tool.Rule.TrackTokenReferenceInAlt(GrammarAST,int) call Antlr3.Tool.Rule.TrackTokenReferenceInAlt(GrammarAST,int) call Antlr3.Tool.Rule.TrackTokenReferenceInAlt(GrammarAST,int) call Antlr3.Tool.Rule.TrackTokenReferenceInAlt(GrammarAST,int) call Antlr3.Tool.Rule.TrackTokenReferenceInAlt(GrammarAST,int) decl_stmt Antlr4.StringTemplate.Template decl_stmt int = if == = else = call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) decl_stmt Antlr4.StringTemplate.Template = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() + call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() == if ! && call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() call Template.SetAttribute() = private private -- decl IList private private decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) decl IList private private decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) Rule string private private out out = if == = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) if == && decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) = call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) decl_stmt string = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() if ! && private private if != && != + string string private private out out = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) decl_stmt string = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() decl_stmt string = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() if != string private private out out = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) decl_stmt string = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() private private out out = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) : call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) int private private out out decl_stmt int = if == = else = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) int private private out out decl_stmt int = if == else = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) int private private out out decl_stmt int = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) private private out out = = call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) call Antlr3.Tool.Grammar.Complement(IIntSet) int string private private out out if != throw new decl_stmt string = if != = = call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) decl_stmt int = if != call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) Rule private private ref ref out out = if == if != = if != switch case case case case decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) if != && call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) && != = break default: break int string decl IList decl IList Grammar Rule private private out out call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) decl_stmt string = if != = decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) if ! = = if != decl_stmt Antlr3.Tool.Grammar = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() else if != decl_stmt System.Collections.Generic.IList < = call Rule.Grammar() call Rule.Grammar() call Rule.Grammar() call Rule.Grammar() call Rule.Grammar() call Rule.Grammar() call Rule.Grammar() call Rule.Grammar() call Rule.Grammar() if call decl IList.Contains() call decl IList.Contains() call decl IList.Contains() call decl IList.Contains() call decl IList.Contains() else if != if != decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) decl_stmt int = call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) = string int Rule decl IList string Grammar private private out out if && != && != call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) call Antlr3.Tool.Grammar.CheckRuleReference(GrammarAST,GrammarAST,GrammarAST,string) if == if call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) == = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) else = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) if = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) decl_stmt string = if != = decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) if != decl_stmt Antlr3.Tool.Grammar = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() else if != if != decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) decl_stmt int = if != else = decl_stmt string = call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) if ! && != decl_stmt int = call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) = int string private private out out if == = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() if != else = decl_stmt string = call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) if != decl_stmt int = call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) int string private private out out decl_stmt int = if == = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() if != else = decl_stmt string = call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) if != call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) private private out out = int string private private out out decl_stmt string = if != = = decl_stmt int = if != call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenerateLocalFollow(GrammarAST,string,string,int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) call Antlr4.StringTemplate.Compiler.CodeGenerator.GenSetExpr(TemplateGroup,IIntSet,int,bool) Template decl HashSet decl HashSet decl HashSet decl HashSet decl HashSet decl HashSet private private out out = if == if == if = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) else = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) decl_stmt System.Collections.Generic.HashSet < = call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) decl_stmt System.Collections.Generic.HashSet < = call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) decl_stmt System.Collections.Generic.HashSet < = call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) decl_stmt System.Collections.Generic.HashSet < = call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) decl_stmt System.Collections.Generic.HashSet < = call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) decl_stmt System.Collections.Generic.HashSet < = call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) call Antlr3.Tool.Grammar.GetLabels(HashSet,LabelType) decl_stmt Antlr4.StringTemplate.Template = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call Antlr4.StringTemplate.Template.Render(CultureInfo) call Antlr4.StringTemplate.Template.Render(CultureInfo) call Antlr4.StringTemplate.Template.Render(CultureInfo) call Antlr4.StringTemplate.Template.Render(CultureInfo) call Antlr4.StringTemplate.Template.Render(CultureInfo) else = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) private private = new < decl IList string private private ref ref = decl_stmt System.Collections.Generic.IList < = if != = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) decl_stmt string = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() = string private private out out = decl_stmt string = call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) call Antlr3.Tool.Grammar.GrammarTreeToString(GrammarAST,bool) = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() string string private private out out decl_stmt string = decl_stmt string = if += = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) if call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) == = new else if call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) == = new else if ! call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() string decl ICollection string decl IList Rule string bool int private private out out decl_stmt string = decl_stmt string = decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) decl_stmt System.Collections.Generic.ICollection < = call Antlr3.Tool.Rule.GetTokenRefsInAlt(int) call Antlr3.Tool.Rule.GetTokenRefsInAlt(int) call Antlr3.Tool.Rule.GetTokenRefsInAlt(int) call Antlr3.Tool.Rule.GetTokenRefsInAlt(int) call Antlr3.Tool.Rule.GetTokenRefsInAlt(int) decl_stmt bool = ! call decl ICollection.Contains() call decl ICollection.Contains() call decl ICollection.Contains() call decl ICollection.Contains() call decl ICollection.Contains() || != if = if += = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) if != if != decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) decl_stmt int = call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) decl_stmt string = call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) call Antlr4.StringTemplate.Compiler.CodeGenerator.GetTokenTypeAsTargetLabel(int) if call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) call Antlr3.Tool.Grammar.GetTokenType(string) == = new decl Grammar Template decl LabelElementPair Rule string private private out out decl_stmt string = decl_stmt Antlr3.Tool.Rule = call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) call Antlr3.Tool.Grammar.GetRule(string,string) decl_stmt LabelElementPair = call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) call Antlr3.Tool.Rule.GetLabel(string) if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() if call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) call Antlr3.Tool.Rule.HasRewrite(int) && call Antlr3.Tool.Rule.GetRuleRefsInAlt(string,int) call Antlr3.Tool.Rule.GetRuleRefsInAlt(string,int) call Antlr3.Tool.Rule.GetRuleRefsInAlt(string,int) call Antlr3.Tool.Rule.GetRuleRefsInAlt(string,int) call Antlr3.Tool.Rule.GetRuleRefsInAlt(string,int) decl_stmt Antlr4.StringTemplate.Template = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) + : else if == = new else decl_stmt string = switch case = break case = break case = break case = break case = break case = break if += = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) decl IList string private private out out decl_stmt string = decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) + : private private out out = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) decl IList private private out out if != && = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) else if != = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) else if != = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) else throw new decl IList private private = decl_stmt System.Collections.Generic.IList < = call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) string string private private decl_stmt string = decl_stmt string = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() - * = call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() call CodeGenerator.Target() private private out out = = call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.TemplateGroup.GetInstanceOf(string) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST) call Antlr4.StringTemplate.Compiler.CodeGenerator.TranslateAction(string,GrammarAST)