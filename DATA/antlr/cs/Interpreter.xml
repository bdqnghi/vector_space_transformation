Antlr4.StringTemplate System.Collections.Generic using System.Collections.ObjectModel using System.Linq using Antlr4.StringTemplate.Compiler using Antlr4.StringTemplate.Debug using Antlr4.StringTemplate.Extensions using Antlr4.StringTemplate.Misc using System.ArgumentNullException System.Array System.BitConverter System.Console System.Globalization.CultureInfo System.Environment System.Exception System.Collections.ICollection System.Collections.IDictionary System.Collections.IEnumerable System.Collections.IEnumerator System.Collections.IList System.IO.IOException System.Math System.Text.StringBuilder System.IO.StringWriter class Antlr4.StringTemplate.Interpreter TemplateGroup ErrorManager bool int decl string decl object int int CultureInfo decl List bool decl List return new < StringBuilder public virtual public virtual try if > throw new if return catch if throw decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) + return decl object int Bytecode int decl IDictionary decl byte int Template int int object decl List int decl List decl List string object int EvalTemplateEvent int int int int Bytecode int Template protected virtual protected virtual decl_stmt Antlr4.StringTemplate.Template = decl_stmt int = decl_stmt Bytecode = decl_stmt int = decl_stmt int decl_stmt int decl_stmt int decl_stmt string decl_stmt object decl_stmt Antlr4.StringTemplate.Template decl_stmt object decl_stmt byte = decl_stmt int = while < if || decl_stmt Bytecode = = ++ switch case decl_stmt int = += ++ = break case = += = try = if == = catch call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) = ++ = break case decl_stmt int = += = if == = ++ = break case = += = -- = ++ = break case decl_stmt object = -- = = break case = += = = += = call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() -= ++ = break case = += = string - = call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() -= -- ++ = break case = += = decl_stmt System.Collections.Generic.IDictionary < = < -- = call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() ++ = break case = += = = += break case = += = = < -- break case decl_stmt int = += = -- = = break case = = += = -- = < = break case = -- decl_stmt int = += += break case = -- = -- decl_stmt int = += += break case = -- = -- break case decl_stmt int = += decl_stmt System.Collections.Generic.List < = new < for = - >= -- call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() - -= = -- if != break case = -- = += decl_stmt System.Collections.Generic.List < = new < for = - >= -- call EvalTemplateEvent.Add() call EvalTemplateEvent.Add() call EvalTemplateEvent.Add() call EvalTemplateEvent.Add() call EvalTemplateEvent.Add() - -= ++ = break case = break case = += = -- if ! = break case ++ = new break case ++ = new < break case = += = = < break case ++ = new < break case = -- decl_stmt System.Collections.Generic.List < = < break case = break case = break case = break case = break case = break case = break case = -- if call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() == typeof string ++ = string else call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() ++ = break case = break case = -- if call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() == typeof string ++ = string else call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() ++ = break case = break case = ! break case = -- = -- ++ = || break case = -- = -- ++ = && break case = += break case break case try if == || == || > = catch call Antlr4.StringTemplate.Misc.ErrorManager.IOError(TemplateMessage) call Antlr4.StringTemplate.Misc.ErrorManager.IOError(TemplateMessage) call Antlr4.StringTemplate.Misc.ErrorManager.IOError(TemplateMessage) call Antlr4.StringTemplate.Misc.ErrorManager.IOError(TemplateMessage) call Antlr4.StringTemplate.Misc.ErrorManager.IOError(TemplateMessage) break case break case -- break case ++ = break case ++ = break case ++ = break case = += = = += += break default: call Antlr4.StringTemplate.Misc.ErrorManager.InternalError(Template,string,Exception) call Antlr4.StringTemplate.Misc.ErrorManager.InternalError(Template,string,Exception) call Antlr4.StringTemplate.Misc.ErrorManager.InternalError(Template,string,Exception) call Antlr4.StringTemplate.Misc.ErrorManager.InternalError(Template,string,Exception) call Antlr4.StringTemplate.Misc.ErrorManager.InternalError(Template,string,Exception) + - + + call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() break = if decl_stmt EvalTemplateEvent = new return Template CompiledTemplate Template internal virtual internal virtual decl_stmt Antlr4.StringTemplate.Template = decl_stmt Antlr4.StringTemplate.Template = decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() if == call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) = call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() new else = call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() = group -= ++ = Template CompiledTemplate Template internal virtual internal virtual < decl_stmt Antlr4.StringTemplate.Template = decl_stmt Antlr4.StringTemplate.Template = decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() call Template.impl() if == call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) = call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() call Template.Group() new else = call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() call CompiledTemplate.NativeGroup() = group ++ = CompiledTemplate object internal virtual internal virtual < decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = group if == return if == return foreach in if ! try decl_stmt object = if == && == = else if != = catch if == call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) = int int object internal virtual internal virtual < if != && > && ! && == decl_stmt int = if != = decl_stmt int = if != = if < - - - - - - - - - || - - - - - - - - - || call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) foreach in if == || ! == call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) call Antlr4.StringTemplate.Misc.ErrorManager.RuntimeError(TemplateFrame,ErrorType,object,object) continue decl_stmt object =