AntlrUnitTests Antlr.Runtime.JavaExtensions using Antlr3.Tool using Microsoft.VisualStudio.TestTools.UnitTesting using Antlr3.Misc.BitSet Antlr3.Codegen.CodeGenerator System.Console Antlr3.Analysis.DecisionProbe Antlr3.Analysis.DFA System.Collections.IList System.Text.StringBuilder class attribute AntlrUnitTests.TestSemanticPredicates super super BaseTest string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + new new string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + new new string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + Message DFA ErrorQueue CodeGenerator Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + = decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr4.StringTemplate.Compiler.CodeGenerator = new = if == call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt Antlr3.Analysis.DFA = call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() decl_stmt Antlr3.Tool.Message = is string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + + + + + + + ErrorQueue string CodeGenerator Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + + + + + = decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr4.StringTemplate.Compiler.CodeGenerator = new = if == call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() ErrorQueue string CodeGenerator Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + + + + + + + + + + + + + + + + + + + = decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr4.StringTemplate.Compiler.CodeGenerator = new = if == call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.BuildNFA() call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + + + + + + + + + string Grammar string public public decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + + + + + decl_stmt string = + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + decl_stmt string = + + + + + + + string ErrorQueue Grammar public public decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + new new new string ErrorQueue Grammar public public decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + new new new string ErrorQueue Grammar public public decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + new new new string ErrorQueue Grammar public public decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + new new string ErrorQueue Grammar public public decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + new new string ErrorQueue Grammar public public decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + new new new string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + new new Grammar decl int string int decl int decl int string decl int public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + + decl_stmt string = + + + + + decl_stmt int = decl_stmt int = decl_stmt string = decl_stmt int = decl_stmt int = decl_stmt int = Grammar decl int string int decl int decl int string decl int public public decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + + + + + + + + + decl_stmt int = decl_stmt int = decl_stmt string = decl_stmt int = decl_stmt int = decl_stmt int = Grammar decl int string int decl int decl int string decl int public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + + + + + decl_stmt string = + + + + + decl_stmt int = decl_stmt int = decl_stmt string = decl_stmt int = decl_stmt int = decl_stmt int = string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + + decl_stmt string = + + + + + + + Grammar decl int string int decl int decl int string decl int public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = decl_stmt int = decl_stmt int = new decl_stmt string = decl_stmt int = new decl_stmt int = decl_stmt int = var ErrorQueue var CodeGenerator BitSet var var var BitSet GrammarInsufficientPredicatesMessage string GrammarInsufficientPredicatesMessage Message string DFA FASerializer protected protected = decl_stmt AntlrUnitTests.ErrorQueue = new decl_stmt Antlr4.StringTemplate.Compiler.CodeGenerator = new = if == if call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() != + call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() decl_stmt Antlr3.Analysis.DFA = decl_stmt Antlr3.Tool.FASerializer = new decl_stmt string = call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) decl_stmt var = if != decl_stmt Antlr3.Misc.BitSet = new call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) decl_stmt Antlr3.Misc.BitSet = new call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) else != : if != decl_stmt Antlr3.Tool.Message = is + call Message.GetType() call Message.GetType() call Message.GetType() call Message.GetType() call Message.GetType() decl_stmt Antlr3.Tool.GrammarNonDeterminismMessage = decl_stmt var = call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() decl_stmt string = call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() if != decl_stmt Antlr3.Tool.GrammarNonDeterminismMessage = + decl_stmt var = call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() call GrammarInsufficientPredicatesMessage.probe() decl_stmt Antlr3.Misc.BitSet = new call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) decl_stmt Antlr3.Misc.BitSet = new call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) else decl_stmt Antlr3.Tool.GrammarNonDeterminismMessage = if != decl_stmt Antlr3.Tool.GrammarInsufficientPredicatesMessage = + decl_stmt var = decl_stmt var = decl_stmt Antlr3.Misc.BitSet = new call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) decl_stmt Antlr3.Misc.BitSet = new call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) call Antlr3.Misc.BitSet.AddAll(IIntSet) else decl_stmt Antlr3.Tool.GrammarInsufficientPredicatesMessage = if != Message protected protected for = < ++ decl_stmt Antlr3.Tool.Message = if is return return Message protected protected for = < ++ decl_stmt Antlr3.Tool.Message = if is return return StringBuilder int protected protected decl_stmt System.Text.StringBuilder = new for = < ++ if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt int = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int)