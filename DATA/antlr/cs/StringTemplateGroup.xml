Antlr3.ST System using System.Collections.Generic using System.Linq using System.Linq.Expressions using Antlr3.ST.Extensions using Antlr3.ST.Language.AngleBracketTemplateLexer Antlr.Runtime.ANTLRReaderStream System.Reflection.Assembly Antlr.Runtime.CommonTokenStream System.Reflection.ConstructorInfo System.Diagnostics.DebuggerDisplayAttribute Antlr3.ST.Language.TemplateLexer System.Text.Encoding Antlr3.ST.Language.GroupLexer Antlr3.ST.Language.GroupParser System.Collections.IDictionary System.Collections.IList System.IO.IOException System.Runtime.CompilerServices.MethodImplAttribute System.Runtime.CompilerServices.MethodImplOptions Antlr3.ST.Language.RegionType System.IO.Stream System.IO.StreamReader System.Text.StringBuilder System.IO.TextReader System.IO.TextWriter class attribute Antlr3.ST.StringTemplateGroup decl Dictionary IStringTemplateErrorListener decl IDictionary decl TypeRegistry bool decl Dictionary bool decl TypeRegistry bool decl HashSet TimeSpan IStringTemplateGroupLoader decl Dictionary decl List decl Func Type bool decl IDictionary bool bool IStringTemplateErrorListener Assembly StringTemplateGroup StringTemplate string DateTime string Type decl Func Encoding Type public virtual public virtual if != public virtual public virtual return = return = return = return = return = return = if != return return private private = = return return return var decl Func ConstructorInfo var private static < private static < if == return lock decl_stmt Func < if ! call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out template= , decl_stmt var = typeof decl_stmt System.Reflection.ConstructorInfo = new typeof typeof decl_stmt var = < < > ctor template reader template , = call var.Compile() call var.Compile() call var.Compile() call var.Compile() call var.Compile() = return