Antlr.Runtime class Antlr.Runtime.SlimLexer super super BaseRecognizer SlimToken SlimStringStream bool bool if != return return call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) - = return = return = public override public override if != call Antlr.Runtime.SlimStringStream.Seek(int) call Antlr.Runtime.SlimStringStream.Seek(int) call Antlr.Runtime.SlimStringStream.Seek(int) call Antlr.Runtime.SlimStringStream.Seek(int) call Antlr.Runtime.SlimStringStream.Seek(int) if == return = default = = = = = - if = - = - endif = public virtual public virtual for = default = = = = if = = endif = if call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) == return new try if continue else if ! return catch catch return public virtual public virtual = return = = return public public = new = = int MismatchedTokenException public public decl_stmt int = while < if call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) != if > = return decl_stmt Antlr.Runtime.MismatchedTokenException = new throw ++ call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() = public public call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() MismatchedTokenException public public if call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) != if > = return decl_stmt Antlr.Runtime.MismatchedTokenException = new throw call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() = MismatchedRangeException public public if call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) < || call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) call Antlr.Runtime.SlimStringStream.LA(int) > if > = return decl_stmt Antlr.Runtime.MismatchedRangeException = new throw call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() = return public override public override EarlyExitException string MismatchedRangeException MismatchedSetException NoViableAltException MismatchedTokenException public override public override decl_stmt string = if is decl_stmt Antlr.Runtime.MismatchedTokenException = = + + + else if is decl_stmt Antlr.Runtime.NoViableAltException = = + else if is decl_stmt Antlr.Runtime.EarlyExitException = = + else if is decl_stmt Antlr.Runtime.MismatchedNotSetException = = + + + else if is decl_stmt Antlr.Runtime.MismatchedSetException = = + + + else if is decl_stmt Antlr.Runtime.MismatchedRangeException = = + + + + + else = return string public virtual public virtual decl_stmt string = char switch case = break case = break case = break case = break return + + public virtual public virtual call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() call Antlr.Runtime.SlimStringStream.Consume() string public virtual public virtual decl_stmt string = char call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) + + + + string public virtual public virtual decl_stmt string = char call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) call Antlr.Runtime.SlimStringStream.LT(int) + + + +