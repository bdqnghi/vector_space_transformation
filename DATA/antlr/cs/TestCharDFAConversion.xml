AntlrUnitTests Antlr.Runtime.JavaExtensions using Antlr3.Tool using Microsoft.VisualStudio.TestTools.UnitTesting using Antlr3.Codegen.CodeGenerator System.Console Antlr3.Analysis.DFA Antlr3.Analysis.DFAOptimizer System.Collections.IList class attribute AntlrUnitTests.TestCharDFAConversion super super BaseTest string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + decl_stmt string = + + + + + + + + + + + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + = + + + + + + + + + + + Message ErrorQueue string GrammarUnreachableAltsMessage Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + decl_stmt AntlrUnitTests.ErrorQueue = new new call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() decl_stmt Antlr3.Tool.Message = is decl_stmt Antlr3.Tool.GrammarUnreachableAltsMessage = call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + + + + + + + + + DFAOptimizer Grammar string string DFA FASerializer public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + decl_stmt Antlr3.Analysis.DFAOptimizer = new call Antlr3.Analysis.DFAOptimizer.Optimize() call Antlr3.Analysis.DFAOptimizer.Optimize() call Antlr3.Analysis.DFAOptimizer.Optimize() call Antlr3.Analysis.DFAOptimizer.Optimize() call Antlr3.Analysis.DFAOptimizer.Optimize() decl_stmt Antlr3.Tool.FASerializer = new decl_stmt Antlr3.Analysis.DFA = call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() call Grammar.GetLookaheadDFA() decl_stmt string = call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) call Antlr3.Tool.FASerializer.Serialize(State) = + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + + + + + + + + + Message ErrorQueue string GrammarUnreachableAltsMessage Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = + decl_stmt AntlrUnitTests.ErrorQueue = new new call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() call AntlrUnitTests.ErrorQueue.size() decl_stmt Antlr3.Tool.Message = is decl_stmt Antlr3.Tool.GrammarUnreachableAltsMessage = call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() call GrammarUnreachableAltsMessage.alts() string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + + + + + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + + + + + + + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + + + + + + + + + + + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) call Antlr3.Tool.Grammar.CreateLookaheadDFAs(bool) decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + decl_stmt string = + + + + + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + + + + decl_stmt string = + + + string Grammar public public decl_stmt Antlr3.Tool.Grammar = new + decl_stmt string = decl AntlrTool string decl Antlr3 FASerializer CodeGenerator DFA protected protected decl_stmt Antlr3.AntlrTool = new if == decl_stmt Antlr4.StringTemplate.Compiler.CodeGenerator = new = decl_stmt Antlr3.Analysis.DFA = + decl_stmt Antlr3.Tool.FASerializer = new decl_stmt string = call DFA.Serialize() call DFA.Serialize() call DFA.Serialize() call DFA.Serialize() call DFA.Serialize() decl_stmt var = if == if != && != + != : else for = < ++ != call string.Contains() call string.Contains() call string.Contains() call string.Contains() call string.Contains() :