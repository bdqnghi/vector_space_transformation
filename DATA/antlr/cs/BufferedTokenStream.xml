Antlr.Runtime System.Collections.Generic using System.CLSCompliantAttribute System.IndexOutOfRangeException System.Text.StringBuilder class attribute Antlr.Runtime.BufferedTokenStream super super ITokenStream super ITokenStreamInformation ITokenSource int decl List int return = call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() = - return return return return int IToken decl_stmt int = decl_stmt Antlr.Runtime.IToken do ++ = != && <= return return public virtual public virtual if == - = return public virtual public virtual public virtual public virtual public virtual public virtual public virtual public virtual = = public virtual public virtual = public virtual public virtual if == - ++ int protected virtual protected virtual decl_stmt int = - + if > IToken protected virtual protected virtual for = < ++ decl_stmt Antlr.Runtime.IToken = = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() if == break public virtual public virtual if < || >= throw new + + + - return decl List IToken public virtual < public virtual < if < throw new if < throw new if + >= throw new if == - decl_stmt System.Collections.Generic.List < = new < for = < ++ decl_stmt Antlr.Runtime.IToken = if == break call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return public virtual public virtual return protected virtual protected virtual if - < return return - int public virtual public virtual if == - if == return if < return - decl_stmt int = + - if >= return - if > = return + - protected virtual protected virtual = public virtual < public virtual < return public virtual < public virtual < return default decl List IToken public virtual < public virtual < if == - if >= = - if < = if > return decl_stmt System.Collections.Generic.List < = new < for = <= ++ decl_stmt Antlr.Runtime.IToken = if == || call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() if == = return public virtual < public virtual < < return new public virtual < public virtual < return public override public override if == - return - StringBuilder IToken public virtual public virtual if < || < return if == - if >= = - decl_stmt System.Text.StringBuilder = new for = <= ++ decl_stmt Antlr.Runtime.IToken = if == break call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public virtual public virtual if != && != return return int public virtual public virtual if == - if == return decl_stmt int = + while != ++