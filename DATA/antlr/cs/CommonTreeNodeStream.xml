Antlr.Runtime.Tree System.Collections.Generic using Antlr.Runtime.Misc using System.Text.StringBuilder System.NotSupportedException class attribute Antlr.Runtime.Tree.CommonTreeNodeStream super super ITreeNodeStream int decl Stack int bool object TreeIterator ITokenStream int ITreeAdaptor if == return return return = return = return return public virtual public virtual call Antlr.Runtime.Tree.TreeIterator.Reset() call Antlr.Runtime.Tree.TreeIterator.Reset() call Antlr.Runtime.Tree.TreeIterator.Reset() call Antlr.Runtime.Tree.TreeIterator.Reset() call Antlr.Runtime.Tree.TreeIterator.Reset() = = if != call decl Stack.Clear() call decl Stack.Clear() call decl Stack.Clear() call decl Stack.Clear() call decl Stack.Clear() object public override public override call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() decl_stmt object = if == -- if == && call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() return else if == ++ if == && = call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() = ++ call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() call TreeIterator.MoveNext() = return public override public override return == public virtual public virtual return public virtual public virtual if == = new < call decl Stack.Push() call decl Stack.Push() call decl Stack.Push() call decl Stack.Push() call decl Stack.Push() int public virtual public virtual decl_stmt int = call decl Stack.Pop() call decl Stack.Pop() call decl Stack.Pop() call decl Stack.Pop() call decl Stack.Pop() return public virtual public virtual if != public virtual public virtual return int StringBuilder object public virtual public virtual decl_stmt System.Text.StringBuilder = new decl_stmt object = decl_stmt int = while != call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = = return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int)