Antlr.Runtime.JavaExtensions System using System.Collections.Generic using System.Text using class Antlr.Runtime.JavaExtensions.EnumerableExtensions public static public static < return < return + return double / double var long static static static < < < < where where struct where where struct where where struct decl_stmt var = default decl_stmt long = foreach in = ++ if == throw new return public static public static < return < return + return / var public static public static public static < < decl_stmt var = as < if != return call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() return < public static public static public static < < < if == = < < foreach in if return return public static < public static < public static < < < return default public static < public static < public static < < < return bool static < static < static < < < decl_stmt bool = foreach in = yield if yield public static public static < return return bool static static static < < < decl_stmt bool = foreach in = = if throw new return public static public static < return return public static < public static < public static < < < < return static < static < static < < < < foreach in yield public static < public static < public static < < < < return int static < static < static < < < < decl_stmt int = foreach in yield ++ public static < public static < public static < < < < < < return public static < public static < public static < < < < < return int static < static < static < < < < < < decl_stmt int = foreach in foreach in ++ yield int static < static < static < < < < < decl_stmt int = foreach in foreach in yield ++ public static public static < return < return checked + TR static static static < < < decl_stmt TR = default foreach in = return public static < public static < public static < < < return int static < static < static < < < if <= yield decl_stmt int = foreach in yield if ++ == yield var var public static public static public static < < decl_stmt var = as < if != decl_stmt var = new call var.CopyTo() call var.CopyTo() call var.CopyTo() call var.CopyTo() call var.CopyTo() return return new <