Antlr3.Misc System.Collections.Generic using class decl Dictionary public public if == = new < if ! public override public override return Node Node public public decl_stmt System.Collections.Generic.Node = decl_stmt System.Collections.Generic.Node = call Node.AddEdge() call Node.AddEdge() call Node.AddEdge() call Node.AddEdge() call Node.AddEdge() Node Node private private decl_stmt System.Collections.Generic.Node if call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out && != return decl_stmt System.Collections.Generic.Node = new = return decl OrderedHashSet Node decl List public < public < decl_stmt Antlr3.Misc.OrderedHashSet < = new < decl_stmt System.Collections.Generic.List < = new < while < decl_stmt System.Collections.Generic.Node = foreach in = if ! call decl OrderedHashSet.Contains() call decl OrderedHashSet.Contains() call decl OrderedHashSet.Contains() call decl OrderedHashSet.Contains() call decl OrderedHashSet.Contains() break return private private < < if return if != foreach in