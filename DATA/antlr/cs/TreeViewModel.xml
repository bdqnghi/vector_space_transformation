Antlr3.Runtime.Visualizer System using System.Collections.Generic using System.Collections.ObjectModel using System.Diagnostics using Antlr.Runtime.Tree using class Antlr3.Runtime.Visualizer.TreeViewModel ITreeAdaptor object decl ReadOnlyCollection return return int decl List object if == decl_stmt System.Collections.Generic.List < = new < decl_stmt int = call Antlr.Runtime.Tree.ITreeAdaptor.GetChildCount(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetChildCount(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetChildCount(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetChildCount(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetChildCount(object) for = < ++ decl_stmt object = call Antlr.Runtime.Tree.ITreeAdaptor.GetChild(object,int) call Antlr.Runtime.Tree.ITreeAdaptor.GetChild(object,int) call Antlr.Runtime.Tree.ITreeAdaptor.GetChild(object,int) call Antlr.Runtime.Tree.ITreeAdaptor.GetChild(object,int) call Antlr.Runtime.Tree.ITreeAdaptor.GetChild(object,int) if == continue call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new = call decl List.AsReadOnly() call decl List.AsReadOnly() call decl List.AsReadOnly() call decl List.AsReadOnly() call decl List.AsReadOnly() return return call Antlr.Runtime.Tree.ITreeAdaptor.GetText(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetText(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetText(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetText(object) call Antlr.Runtime.Tree.ITreeAdaptor.GetText(object)