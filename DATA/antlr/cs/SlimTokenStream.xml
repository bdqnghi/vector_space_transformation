Antlr.Runtime System.Collections.Generic using System using System.Text using class attribute Antlr.Runtime.FastTokenStream super decl List decl ITokenSource int int int return public public < = call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() = - = int SlimToken public public if != - return decl_stmt int = decl_stmt SlimToken = call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() while != call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() ++ = call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() call decl ITokenSource.NextToken() = = public public if < ++ = int protected protected decl_stmt int = while < && != ++ return protected protected while >= && != -- return public < public < if == - return public < public < return decl List SlimToken public < public < if == - if >= = - if < = if > return decl_stmt System.Collections.Generic.List < = new < for = <= ++ decl_stmt SlimToken = if == || call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() if == = return public < public < < return new public < public < return int int public public if == - if == return default if < return - if + - >= return new decl_stmt int = decl_stmt int = while < = + ++ if >= return new return int int protected protected if == - if == return default if - < return default decl_stmt int = decl_stmt int = while <= = - ++ if < return default return public public return public public return public public if == - = return public public return public public public public public public = = public public = return return public override public override if == - throw new return - SlimStringStream SlimLexer StringBuilder SlimToken string public virtual public virtual if < || < return if == - throw new if >= = - decl_stmt System.Text.StringBuilder = new for = <= ++ decl_stmt SlimToken = decl_stmt Antlr.Runtime.SlimLexer = as if != decl_stmt Antlr.Runtime.SlimStringStream = as if != decl_stmt string = call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) call Antlr.Runtime.SlimStringStream.Substring(int,int) - + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public virtual public virtual if != && != return return