Antlr4.StringTemplate.Compiler System.Collections.Generic using Antlr.Runtime using Antlr.Runtime.Tree using Antlr4.StringTemplate.Misc using System.ArgumentNullException class Antlr4.StringTemplate.Compiler.TemplateCompiler decl IDictionary int string int decl IDictionary decl IDictionary int TemplateGroup return return return return CompiledTemplate public virtual public virtual template decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = template = return CompiledTemplate public virtual public virtual template decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = name template = return TemplateLexer ANTLRStringStream CommonTokenStream TemplateParser decl IAstRuleReturnScope CompiledTemplate CommonTreeNodeStream CodeGenerator CompiledTemplate public virtual public virtual < template decl_stmt Antlr.Runtime.ANTLRStringStream = new template srcName = != : decl_stmt Antlr4.StringTemplate.Compiler.TemplateLexer = if != && == = new else = new decl_stmt Antlr.Runtime.CommonTokenStream = new decl_stmt Antlr4.StringTemplate.Compiler.TemplateParser = new decl_stmt Antlr.Runtime.IAstRuleReturnScope < = try = call TemplateParser.templateAndEOF() call TemplateParser.templateAndEOF() call TemplateParser.templateAndEOF() call TemplateParser.templateAndEOF() call TemplateParser.templateAndEOF() catch return if > || == decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = new call Antlr4.StringTemplate.Compiler.CompiledTemplate.DefineFormalArguments(IEnumerable) call Antlr4.StringTemplate.Compiler.CompiledTemplate.DefineFormalArguments(IEnumerable) call Antlr4.StringTemplate.Compiler.CompiledTemplate.DefineFormalArguments(IEnumerable) call Antlr4.StringTemplate.Compiler.CompiledTemplate.DefineFormalArguments(IEnumerable) call Antlr4.StringTemplate.Compiler.CompiledTemplate.DefineFormalArguments(IEnumerable) return decl_stmt Antlr.Runtime.Tree.CommonTreeNodeStream = new = decl_stmt Antlr4.StringTemplate.Compiler.CodeGenerator = new nodes this name template templateToken decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = try = template , = = template = call CompiledTemplate.Ast() call CompiledTemplate.Ast() call CompiledTemplate.Ast() call CompiledTemplate.Ast() call CompiledTemplate.Ast() call CompiledTemplate.Ast() call CompiledTemplate.Ast() call CompiledTemplate.Ast() call CompiledTemplate.Ast() = catch return string string CompiledTemplate public static public static if == throw new if == throw new decl_stmt string = decl_stmt string = decl_stmt Antlr4.StringTemplate.Compiler.CompiledTemplate = new = = = = return public static public static ++ return + string protected virtual protected virtual if == decl_stmt string = else if is decl_stmt string = + + else if == decl_stmt string = else if == decl_stmt string = else decl_stmt string = throw new