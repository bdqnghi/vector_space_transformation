Antlr4.StringTemplate System.Collections.Generic using Antlr4.StringTemplate.Debug using System.Text.StringBuilder class Antlr4.StringTemplate.TemplateFrame Template TemplateFrame DebugEvents int int return return return return = public public = ?? new return decl List int StringBuilder public public decl_stmt System.Collections.Generic.List < = decl_stmt System.Text.StringBuilder = new decl_stmt int = foreach in if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) ++ return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) TemplateFrame decl List public < public < decl_stmt System.Collections.Generic.List < = new < decl_stmt Antlr4.StringTemplate.TemplateFrame = while != if call decl List.Insert() call decl List.Insert() call decl List.Insert() call decl List.Insert() call decl List.Insert() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = return decl List public < public < decl_stmt System.Collections.Generic.List < = new < for = != = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() if call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() return decl List EvalTemplateEvent public < public < decl_stmt System.Collections.Generic.List < = new < for = != = decl_stmt EvalTemplateEvent = - call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() if call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() return