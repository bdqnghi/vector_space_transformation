Antlr4.StringTemplate.Visualizer System using System.Collections.Generic using System.Linq using System.Windows using System.Windows.Controls using System.Windows.Documents using System.Windows.Media using Antlr.Runtime using Antlr.Runtime.Tree using Antlr4.StringTemplate.Debug using Antlr4.StringTemplate.Misc using Antlr4.StringTemplate.Visualizer.Extensions using class Antlr4.StringTemplate.Visualizer.TemplateVisualizerFrame super super UserControl TemplateFrame InterpEvent return as = var protected override protected override if == decl_stmt var = if == return = = = new new new = new int TemplateMessage Interval TemplateRuntimeMessage private private decl_stmt int = decl_stmt Antlr4.StringTemplate.Misc.TemplateMessage = as decl_stmt Antlr4.StringTemplate.Misc.TemplateRuntimeMessage = as if != decl_stmt Antlr4.StringTemplate.Misc.Interval = = = private private < TemplateCallHierarchyViewModel private private < decl_stmt Antlr4.StringTemplate.Visualizer.TemplateCallHierarchyViewModel = as if != && != = = CommonTree IToken IToken private private < decl_stmt Antlr.Runtime.Tree.CommonTree = as if == return decl_stmt Antlr.Runtime.IToken = call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() decl_stmt Antlr.Runtime.IToken = call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() if == || == return + private private = if == = else = call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) private static private static < if == throw new foreach in if continue if return return int TextPointer TextPointer TextRange TextPointer int var private static private static if == throw new decl_stmt TextPointer = decl_stmt TextRange = new call TextRange.ApplyPropertyValue() call TextRange.ApplyPropertyValue() call TextRange.ApplyPropertyValue() call TextRange.ApplyPropertyValue() call TextRange.ApplyPropertyValue() if == return decl_stmt int = decl_stmt int = decl_stmt TextPointer = ref decl_stmt TextPointer = ref if != || != return decl_stmt var = new call var.ApplyPropertyValue() call var.ApplyPropertyValue() call var.ApplyPropertyValue() call var.ApplyPropertyValue() call var.ApplyPropertyValue() return TemplateCallHierarchyViewModel decl List private static private static < if == || == || == || != return decl_stmt System.Collections.Generic.List < = new < call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() decl_stmt Antlr4.StringTemplate.Visualizer.TemplateCallHierarchyViewModel = foreach in = call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() call TemplateCallHierarchyViewModel.Children() == if == return call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() for = < - ++ = - = InterpEvent int var EvalExprEvent Interval TextPointer decl List Rect EvalTemplateEvent private private decl_stmt var = if == return = call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() call TemplateFrame.Template() = new new new = new = region region region region decl_stmt Antlr4.StringTemplate.Debug.EvalExprEvent = as if != else decl_stmt EvalTemplateEvent = as if == decl_stmt System.Collections.Generic.List < = call Antlr4.StringTemplate.TemplateFrame.GetDebugState() call Antlr4.StringTemplate.TemplateFrame.GetDebugState() call Antlr4.StringTemplate.TemplateFrame.GetDebugState() call Antlr4.StringTemplate.TemplateFrame.GetDebugState() call Antlr4.StringTemplate.TemplateFrame.GetDebugState() = - as if != decl_stmt TextPointer = if != decl_stmt Rect = call TextPointer.GetCharacterRect() call TextPointer.GetCharacterRect() call TextPointer.GetCharacterRect() call TextPointer.GetCharacterRect() call TextPointer.GetCharacterRect() if decl_stmt Antlr4.StringTemplate.Misc.Interval = endregion if = decl_stmt Antlr4.StringTemplate.Misc.Interval = if != decl_stmt int = if == - else decl_stmt Antlr4.StringTemplate.Debug.InterpEvent = if is if else endif TemplateCallHierarchyViewModel decl List private private if == throw new if == throw new decl_stmt Antlr4.StringTemplate.Visualizer.TemplateCallHierarchyViewModel = new decl_stmt System.Collections.Generic.List < = return call decl List.FindIndex() call decl List.FindIndex() call decl List.FindIndex() call decl List.FindIndex() call decl List.FindIndex() == decl List private private decl_stmt System.Collections.Generic.List < = call Antlr4.StringTemplate.TemplateFrame.GetEnclosingInstanceStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEnclosingInstanceStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEnclosingInstanceStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEnclosingInstanceStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEnclosingInstanceStack(bool) = call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() var decl HashSet private private decl_stmt var = if == return decl_stmt System.Collections.Generic.HashSet < = new < = call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) call Antlr4.StringTemplate.TemplateFrame.GetEvalTemplateEventStack(bool) new