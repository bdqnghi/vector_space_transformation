Antlr3.Tool System.Collections.Generic using Antlr3.Analysis using System.Environment System.Text.StringBuilder class Antlr3.Tool.FASerializer decl HashSet Grammar int decl IDictionary public virtual public virtual if == return return StringBuilder string string decl List public virtual public virtual = new < = if = new < decl_stmt System.Collections.Generic.List < = new < if > else decl_stmt string = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() + decl_stmt System.Text.StringBuilder = new call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() for = < ++ decl_stmt string = string call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) Transition protected virtual protected virtual if == return if call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() return = ++ for = < ++ decl_stmt Antlr3.Analysis.Transition = if is string int int SemanticContext Transition string StringBuilder protected virtual protected virtual < if call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() return call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() decl_stmt int = if != = decl_stmt string = for = < ++ decl_stmt Antlr3.Analysis.Transition = decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + + else decl_stmt string = if is decl_stmt Antlr3.Analysis.SemanticContext = if != = + call Antlr3.Analysis.SemanticContext.GenExpr(CodeGenerator,TemplateGroup,DFA) call Antlr3.Analysis.SemanticContext.GenExpr(CodeGenerator,TemplateGroup,DFA) call Antlr3.Analysis.SemanticContext.GenExpr(CodeGenerator,TemplateGroup,DFA) call Antlr3.Analysis.SemanticContext.GenExpr(CodeGenerator,TemplateGroup,DFA) call Antlr3.Analysis.SemanticContext.GenExpr(CodeGenerator,TemplateGroup,DFA) + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + call Transition.Label() call Transition.Label() call Transition.Label() call Transition.Label() call Transition.Label() call Transition.Label() call Transition.Label() call Transition.Label() call Transition.Label() + + decl_stmt int = if != = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.AppendLine(string) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) if is string private private decl_stmt string = + if if is = + + + else = + return