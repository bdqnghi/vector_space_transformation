Antlr3.Tool System.Collections.Generic using System.Linq using Antlr3.Extensions using Antlr3.Grammars.ANTLRParser System.CLSCompliantAttribute Antlr.Runtime.CommonToken Antlr3.Analysis.DFA Antlr3.Misc.IIntSet Antlr.Runtime.IToken Antlr.Runtime.Tree.ITree Antlr3.Analysis.NFAState Antlr4.StringTemplate.Template class Antlr3.Tool.GrammarAST super StringTemplate NFAState IIntSet decl HashSet int GrammarAST decl IDictionary decl IDictionary NFAState decl HashSet GrammarAST DFA string NFAState string return = if == return return - ITree decl_stmt Antlr.Runtime.Tree.ITree = if == return return call Antlr.Runtime.Tree.ITree.GetChild(int) call Antlr.Runtime.Tree.ITree.GetChild(int) call Antlr.Runtime.Tree.ITree.GetChild(int) call Antlr.Runtime.Tree.ITree.GetChild(int) call Antlr.Runtime.Tree.ITree.GetChild(int) - return = return = return = public virtual public virtual = new = - GrammarAST public virtual public virtual decl_stmt Antlr3.Tool.GrammarAST = = = = = = = = public virtual public virtual = if != = = public virtual public virtual if == = new < return public virtual public virtual if == = new < return string public virtual public virtual < < if ! return if is string decl_stmt string = string if == = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() - if ++ if == && == = = return object public virtual public virtual decl_stmt object = if != call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out return string object public virtual public virtual < if == = return foreach in decl_stmt object out decl_stmt string = if == if != return if == return return = if == return - return = int ITree decl_stmt int = if != = if == decl_stmt Antlr.Runtime.Tree.ITree = if != = return = int ITree decl_stmt int = if != = if == decl_stmt Antlr.Runtime.Tree.ITree = if != = return = public virtual public virtual if == return new return < public static < public static < return int ITree public static < public static < decl_stmt int = if yield yield for = < ++ decl_stmt Antlr.Runtime.Tree.ITree = foreach in yield yield else for = < ++ decl_stmt Antlr.Runtime.Tree.ITree = yield foreach in yield public public if == return return < == decl List public < public < decl_stmt System.Collections.Generic.List < = new < return GrammarAST public public < if == for = < ++ decl_stmt Antlr3.Tool.GrammarAST = call Antlr3.Tool.GrammarAST.FindAllTypeImpl(int,List) call Antlr3.Tool.GrammarAST.FindAllTypeImpl(int,List) call Antlr3.Tool.GrammarAST.FindAllTypeImpl(int,List) call Antlr3.Tool.GrammarAST.FindAllTypeImpl(int,List) call Antlr3.Tool.GrammarAST.FindAllTypeImpl(int,List) public public if != return return == GrammarAST public static public static if == return decl_stmt Antlr3.Tool.GrammarAST = new call Antlr3.Tool.GrammarAST.Initialize(int,string) call Antlr3.Tool.GrammarAST.Initialize(int,string) call Antlr3.Tool.GrammarAST.Initialize(int,string) call Antlr3.Tool.GrammarAST.Initialize(int,string) call Antlr3.Tool.GrammarAST.Initialize(int,string) return public override public override return int int bool GrammarAST private static < private static < decl_stmt bool = == decl_stmt int = for = < ++ decl_stmt Antlr3.Tool.GrammarAST = decl_stmt int = if == || == continue else if == || == foreach in ++ yield else if && == && == yield new ++ yield GrammarAST public static public static decl_stmt Antlr3.Tool.GrammarAST = foreach in call GrammarAST.AddChild() call GrammarAST.AddChild() call GrammarAST.AddChild() call GrammarAST.AddChild() call GrammarAST.AddChild() return GrammarAST GrammarAST public static public static if == return decl_stmt Antlr3.Tool.GrammarAST = for = < ++ decl_stmt Antlr3.Tool.GrammarAST = call GrammarAST.AddChild() call GrammarAST.AddChild() call GrammarAST.AddChild() call GrammarAST.AddChild() call GrammarAST.AddChild() return public public = foreach in < = public public if != = if != = int public public if != return decl_stmt int = for = < ++ if == ++ if == return return ITree GrammarAST public override public override if == return decl_stmt Antlr3.Tool.GrammarAST = as if == decl_stmt Antlr.Runtime.Tree.ITree = as return != && == return == && == public override public override if == return return ^