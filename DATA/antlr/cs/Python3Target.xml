Antlr3.Targets System.Collections.Generic using Antlr3.Codegen.CodeGenerator System.Console Antlr3.Tool.Grammar System.Collections.IList Antlr.Runtime.IToken Antlr3.Codegen.Target class Antlr3.Targets.Python3Target super super Target return string public override public override if >= && <= return decl_stmt string = if == return return int public override public override decl_stmt int = return char private < private < return int int int string object decl List int string int int public override < public override < < decl_stmt System.Collections.Generic.List < = new < for = < ++ decl_stmt object = decl_stmt string = as string if != if == && > decl_stmt string = new = + call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call string.Split() call string.Split() call string.Split() call string.Split() call string.Split() else if == && > decl_stmt string = new call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() decl_stmt int = decl_stmt int = decl_stmt int = - while > && is string && string == -- decl_stmt int = while <= && is string && string == && string ++ ++ decl_stmt int = - for = <= ++ decl_stmt object = decl_stmt string = as string if != if == if == - = for = < ++ if ! break ++ if >= decl_stmt int for = < ++ if ! + + break = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() else if call string.Trim() call string.Trim() call string.Trim() call string.Trim() call string.Trim() > + + if call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() ++ = else += else += return