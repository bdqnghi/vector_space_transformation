Antlr3.Tool System.Collections.Generic using System.Linq using Antlr3.Analysis using Antlr3.Misc.IIntSet Antlr3.Misc.IntervalSet System.Text.StringBuilder System.StringComparison class Antlr3.Tool.NFAFactory NFA Rule return = int NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = new decl_stmt int = call Antlr3.Analysis.NFA.GetNewNFAStateNumber() call Antlr3.Analysis.NFA.GetNewNFAStateNumber() call Antlr3.Analysis.NFA.GetNewNFAStateNumber() call Antlr3.Analysis.NFA.GetNewNFAStateNumber() call Antlr3.Analysis.NFA.GetNewNFAStateNumber() = call Antlr3.Analysis.NFA.AddState(NFAState) call Antlr3.Analysis.NFA.AddState(NFAState) call Antlr3.Analysis.NFA.AddState(NFAState) call Antlr3.Analysis.NFA.AddState(NFAState) call Antlr3.Analysis.NFA.AddState(NFAState) = return NFAState NFAState Transition public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = while != if != = call Antlr3.Analysis.NFA.GetState(int) call Antlr3.Analysis.NFA.GetState(int) call Antlr3.Analysis.NFA.GetState(int) call Antlr3.Analysis.NFA.GetState(int) call Antlr3.Analysis.NFA.GetState(int) continue decl_stmt Antlr3.Analysis.Transition = if is = continue if && ! && == decl_stmt Antlr3.Analysis.NFAState = if == && != call Antlr3.Analysis.NFAState.SetTransition0(Transition) call Antlr3.Analysis.NFAState.SetTransition0(Transition) call Antlr3.Analysis.NFAState.SetTransition0(Transition) call Antlr3.Analysis.NFAState.SetTransition0(Transition) call Antlr3.Analysis.NFAState.SetTransition0(Transition) = NFAState StateCluster NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = = = decl_stmt Antlr3.Analysis.StateCluster = new return int public virtual public virtual decl_stmt int = call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() return NFAState Transition Label StateCluster NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = = = decl_stmt Antlr3.Analysis.Label = new decl_stmt Antlr3.Analysis.Transition = new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) decl_stmt Antlr3.Analysis.StateCluster = new return State IIntSet Label public public decl_stmt Antlr3.Analysis.State = decl_stmt Antlr3.Misc.IIntSet = if != = decl_stmt Antlr3.Analysis.Label = call State.getTransition() call State.getTransition() call State.getTransition() call State.getTransition() call State.getTransition() = return NFAState Transition Label StateCluster NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.Label = new decl_stmt Antlr3.Analysis.Transition = new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) decl_stmt Antlr3.Analysis.StateCluster = new return int public virtual public virtual decl_stmt int = return int int public virtual public virtual decl_stmt int = decl_stmt int = return from int NFAState int StringBuilder NFAState NFAState NFAState public virtual public virtual if == decl_stmt System.Text.StringBuilder = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = for = < ++ decl_stmt int = decl_stmt Antlr3.Analysis.NFAState = = = return new decl_stmt int = call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() return NFAState Transition StateCluster NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.Transition = new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) decl_stmt Antlr3.Analysis.StateCluster = new return NFAState StateCluster NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.StateCluster = new return NFAState Transition StateCluster NFAState public virtual public virtual if ! ++ decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.Transition = new new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) decl_stmt Antlr3.Analysis.StateCluster = new return NFAState Transition NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.Transition = new new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) return new NFAState int public virtual public virtual < decl_stmt int = foreach in decl_stmt Antlr3.Analysis.NFAState = if == ++ return Transition NFAState int private private decl_stmt Antlr3.Analysis.NFAState = decl_stmt int = if == = = decl_stmt Antlr3.Analysis.Transition = new StateCluster public virtual public virtual if == return if == return decl_stmt Antlr3.Analysis.StateCluster = new return NFAState public virtual public virtual if == return decl_stmt Antlr3.Analysis.NFAState = return new NFAState StateCluster StateCluster NFAState NFAState NFAState int NFAState public virtual public virtual < decl_stmt Antlr3.Analysis.StateCluster = if == || == return if == decl_stmt Antlr3.Analysis.StateCluster = decl_stmt Antlr3.Analysis.NFAState = return new decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = = decl_stmt int = foreach in decl_stmt Antlr3.Analysis.NFAState = = + + if == = else = ++ = new = = return StateCluster NFAState int NFAState NFAState NFAState public virtual public virtual decl_stmt Antlr3.Analysis.StateCluster = decl_stmt int = call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() if == decl_stmt Antlr3.Analysis.NFAState = = decl_stmt Antlr3.Analysis.NFAState = = decl_stmt Antlr3.Analysis.NFAState = = = = = = new else decl_stmt Antlr3.Analysis.NFAState = call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() call NFA.Grammar() decl_stmt Antlr3.Analysis.NFAState = = = = = = return StateCluster NFAState NFAState NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = = if == decl_stmt Antlr3.Analysis.NFAState = = = = = decl_stmt Antlr3.Analysis.StateCluster = new return StateCluster NFAState NFAState NFAState NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = = decl_stmt Antlr3.Analysis.NFAState = = decl_stmt Antlr3.Analysis.NFAState = = if == decl_stmt Antlr3.Analysis.NFAState = = = = = = = = decl_stmt Antlr3.Analysis.StateCluster = new return string int Iterator NFAState NFAState Rule string NFAState NFAState public public decl_stmt int = decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = decl_stmt System.IO.Iterator = while call Iterator.hasNext() call Iterator.hasNext() call Iterator.hasNext() call Iterator.hasNext() call Iterator.hasNext() decl_stmt Antlr3.Tool.Rule = call Iterator.next() call Iterator.next() call Iterator.next() call Iterator.next() call Iterator.next() decl_stmt string = decl_stmt string = if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() || != && call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() continue decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = = + + + if == = else = ++ = return NFAState Transition Label StateCluster NFAState public virtual public virtual decl_stmt Antlr3.Analysis.NFAState = decl_stmt Antlr3.Analysis.NFAState = = = decl_stmt Antlr3.Analysis.Label = new decl_stmt Antlr3.Analysis.Transition = new call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) call Antlr3.Analysis.NFAState.AddTransition(Transition) decl_stmt Antlr3.Analysis.StateCluster = new return StateCluster StateCluster StateCluster StateCluster StateCluster var StateCluster public public decl_stmt Antlr3.Analysis.StateCluster = decl_stmt Antlr3.Analysis.StateCluster = = decl_stmt Antlr3.Analysis.StateCluster = = = decl_stmt Antlr3.Analysis.StateCluster = = decl_stmt Antlr3.Analysis.StateCluster = decl_stmt var = new < decl_stmt Antlr3.Analysis.StateCluster = return State State Label protected virtual protected virtual decl_stmt Antlr3.Analysis.State = if != && call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() != decl_stmt Antlr3.Analysis.State = call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() if != && call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() != decl_stmt Antlr3.Analysis.Label = call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() call State.GetTransition() if return return Transition private private decl_stmt Antlr3.Analysis.Transition = new