Antlr4.StringTemplate System.Collections.Generic using Antlr.Runtime.Misc using System.Environment System.IO.TextWriter class Antlr4.StringTemplate.AutoIndentWriter super super ITemplateWriter TextWriter int decl Stack decl ListStack int int string int return protected protected = return = return == return = public virtual public virtual call decl ListStack.Push() call decl ListStack.Push() call decl ListStack.Push() call decl ListStack.Push() call decl ListStack.Push() public virtual public virtual return call decl ListStack.Pop() call decl ListStack.Pop() call decl ListStack.Pop() call decl ListStack.Pop() call decl ListStack.Pop() public virtual public virtual call decl Stack.Push() call decl Stack.Push() call decl Stack.Push() call decl Stack.Push() call decl Stack.Push() public virtual public virtual call decl Stack.Pop() call decl Stack.Pop() call decl Stack.Pop() call decl Stack.Pop() call decl Stack.Pop() int char int int public virtual public virtual decl_stmt int = decl_stmt int = decl_stmt int = for = < ++ decl_stmt char = if == continue if == = += += continue if += ++ ++ ++ return public virtual public virtual return int public virtual public virtual decl_stmt int = return + char int public virtual public virtual decl_stmt int = if != && != && ! && >= for = < ++ decl_stmt char = if == continue if == += = += += else ++ ++ ++ return int int int protected virtual protected virtual decl_stmt int = foreach in if != += decl_stmt int = if > && call decl Stack.Peek() call decl Stack.Peek() call decl Stack.Peek() call decl Stack.Peek() call decl Stack.Peek() > decl_stmt int = call decl Stack.Peek() call decl Stack.Peek() call decl Stack.Peek() call decl Stack.Peek() call decl Stack.Peek() - new += += += return