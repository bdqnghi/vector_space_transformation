org.antlr.tool org.antlr.analysis.Label import org.antlr.runtime.Token import java.util.Iterator import java.util.List import java.util.Set import class org.antlr.tool.NameSpaceChecker Grammar decl List Rule Attribute public public for = < call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() ++ decl_stmt org.antlr.tool.Rule = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() if == continue if != for : call Rule.labelNameSpace() call Rule.labelNameSpace() call Rule.labelNameSpace() call Rule.labelNameSpace() call Rule.labelNameSpace() call Rule.labelNameSpace() call Rule.labelNameSpace() call Rule.labelNameSpace() call Rule.labelNameSpace() if != decl_stmt java.util.List < = call Rule.ruleScope() call Rule.ruleScope() call Rule.ruleScope() call Rule.ruleScope() call Rule.ruleScope() call Rule.ruleScope() call Rule.ruleScope() call Rule.ruleScope() call Rule.ruleScope() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.antlr.tool.Attribute = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() for : call org.antlr.tool.Grammar.getGlobalScopes() call org.antlr.tool.Grammar.getGlobalScopes() call org.antlr.tool.Grammar.getGlobalScopes() call org.antlr.tool.Grammar.getGlobalScopes() call org.antlr.tool.Grammar.getGlobalScopes() decl Set protected protected if != decl_stmt java.util.Set < = if != for : Token int String protected protected decl_stmt java.lang.String = decl_stmt org.antlr.runtime.Token = decl_stmt int = if == || == && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) = else if == && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) && ! = else if call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) != = if != Rule String GrammarAST Rule Token Grammar String protected protected for : decl_stmt org.antlr.runtime.Token = decl_stmt java.lang.String = call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() decl_stmt org.antlr.tool.Rule = call org.antlr.tool.Grammar.getLocallyDefinedRule(String) call org.antlr.tool.Grammar.getLocallyDefinedRule(String) call org.antlr.tool.Grammar.getLocallyDefinedRule(String) call org.antlr.tool.Grammar.getLocallyDefinedRule(String) call org.antlr.tool.Grammar.getLocallyDefinedRule(String) decl_stmt org.antlr.tool.Rule = call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) if == && != call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() call Grammar.delegatedRuleReferences() = if == && call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) != if == for : decl_stmt java.lang.String = call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() if ! call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() && call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) != for : decl_stmt org.antlr.tool.Grammar = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() decl_stmt org.antlr.tool.GrammarAST = decl_stmt java.lang.String = call org.antlr.tool.GrammarAST.getText() call org.antlr.tool.GrammarAST.getText() call org.antlr.tool.GrammarAST.getText() call org.antlr.tool.GrammarAST.getText() call org.antlr.tool.GrammarAST.getText() if == else decl_stmt org.antlr.tool.Rule = call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) if == protected protected if call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) != String int Object public public decl_stmt int = decl_stmt java.lang.Object = decl_stmt java.lang.String = if = = else if != && != || != && != = = if != int Object protected protected decl_stmt int = decl_stmt java.lang.Object = if call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) call org.antlr.tool.Grammar.getGlobalScope(String) != = else if call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) call org.antlr.tool.Grammar.getRule(String) != = else if call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) call org.antlr.tool.Grammar.getTokenType(String) != = else if != && != = = else if != && != || != && != = = if != decl LabelElementPair decl Grammar public public decl_stmt LabelElementPair = if != if != decl_stmt java.lang.String = + + return return