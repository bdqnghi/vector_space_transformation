org.antlr.analysis org.antlr.grammar.v3.ANTLRParser import org.antlr.misc.IntSet import org.antlr.misc.IntervalSet import org.antlr.tool.Grammar import org.antlr.tool.Rule import java.util.HashMap import java.util.HashSet import java.util.Map import java.util.Set import class org.antlr.analysis.LL1Analyzer decl Set Grammar int int decl Map int decl Map LookaheadSet public public call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() decl_stmt org.antlr.analysis.LookaheadSet = return LookaheadSet public public decl_stmt org.antlr.analysis.LookaheadSet = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != return = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return LookaheadSet LookaheadSet public public if + + call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() decl_stmt org.antlr.analysis.LookaheadSet = if != && call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) decl_stmt org.antlr.analysis.LookaheadSet = call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) = else if == && call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) = new if + + + call org.antlr.analysis.LookaheadSet.toString() call org.antlr.analysis.LookaheadSet.toString() call org.antlr.analysis.LookaheadSet.toString() call org.antlr.analysis.LookaheadSet.toString() call org.antlr.analysis.LookaheadSet.toString() return LookaheadSet LookaheadSet LookaheadSet RuleClosureTransition int LookaheadSet NFAState IntSet Transition Transition protected protected if ! && if == return new return new if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.antlr.analysis.Transition = if == return if call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() decl_stmt int = call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() return new if call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() decl_stmt org.antlr.misc.IntSet = call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() return new decl_stmt org.antlr.analysis.LookaheadSet = if ! && instanceof = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = if ! && instanceof call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.antlr.analysis.LookaheadSet = if != && call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) call org.antlr.analysis.LookaheadSet.member(int) if instanceof decl_stmt RuleClosureTransition = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.LookaheadSet = call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) call org.antlr.analysis.LookaheadSet.remove(int) = decl_stmt org.antlr.analysis.Transition = if != decl_stmt org.antlr.analysis.LookaheadSet = call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) call org.antlr.analysis.LookaheadSet.orInPlace(LookaheadSet) = return == new : Rule public public call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() decl_stmt org.antlr.tool.Rule = return == RuleClosureTransition Transition int SemanticContext decl SemanticContext NFAState decl Predicate Transition int protected protected if ! && if == return return if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.antlr.analysis.Transition = if == return if ! call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() || call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() return if call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() decl_stmt org.antlr.analysis.SemanticContext = call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() decl_stmt Predicate = if call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() != return decl_stmt int = if == return if == if instanceof decl_stmt RuleClosureTransition = decl_stmt org.antlr.analysis.NFAState = decl_stmt int = if == return decl_stmt org.antlr.analysis.Transition = if != decl_stmt int = if == return return public public call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() return Transition SemanticContext SemanticContext SemanticContext Transition protected protected if return if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.antlr.analysis.Transition = if == return if ! call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() || call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() return decl_stmt org.antlr.analysis.SemanticContext = decl_stmt org.antlr.analysis.SemanticContext decl_stmt org.antlr.analysis.SemanticContext = if call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() = call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() if == && == = = decl_stmt org.antlr.analysis.Transition = if != = return