org.antlr.tool org.antlr.analysis.* import org.antlr.misc.IntSet import org.antlr.misc.IntervalSet import java.util.ArrayList import java.util.Collection import java.util.Iterator import java.util.List import class org.antlr.tool.NFAFactory Rule NFA public public return public public = int NFAState public public decl_stmt org.antlr.analysis.NFAState = new decl_stmt int = call org.antlr.analysis.NFA.getNewNFAStateNumber() call org.antlr.analysis.NFA.getNewNFAStateNumber() call org.antlr.analysis.NFA.getNewNFAStateNumber() call org.antlr.analysis.NFA.getNewNFAStateNumber() call org.antlr.analysis.NFA.getNewNFAStateNumber() = call NFA.addState() call NFA.addState() call NFA.addState() call NFA.addState() call NFA.addState() = return NFAState NFAState Transition public public decl_stmt org.antlr.analysis.NFAState = while != if != = call org.antlr.analysis.NFA.getState(int) call org.antlr.analysis.NFA.getState(int) call org.antlr.analysis.NFA.getState(int) call org.antlr.analysis.NFA.getState(int) call org.antlr.analysis.NFA.getState(int) continue decl_stmt org.antlr.analysis.Transition = if instanceof = continue if call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() && ! call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() call Transition.label() && call org.antlr.analysis.NFAState.getNumberOfTransitions() call org.antlr.analysis.NFAState.getNumberOfTransitions() call org.antlr.analysis.NFAState.getNumberOfTransitions() call org.antlr.analysis.NFAState.getNumberOfTransitions() call org.antlr.analysis.NFAState.getNumberOfTransitions() == decl_stmt org.antlr.analysis.NFAState = if == && != call org.antlr.analysis.NFAState.setTransition0(Transition) call org.antlr.analysis.NFAState.setTransition0(Transition) call org.antlr.analysis.NFAState.setTransition0(Transition) call org.antlr.analysis.NFAState.setTransition0(Transition) call org.antlr.analysis.NFAState.setTransition0(Transition) = NFAState StateCluster NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = = = decl_stmt StateCluster = new return int public public decl_stmt int = call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() return NFAState Transition Label StateCluster NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = = = decl_stmt org.antlr.analysis.Label = new decl_stmt org.antlr.analysis.Transition = new call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) decl_stmt StateCluster = new return NFAState Transition Label StateCluster NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.Label = new decl_stmt org.antlr.analysis.Transition = new call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) decl_stmt StateCluster = new return int public public decl_stmt int = return int int public public decl_stmt int = decl_stmt int = return int NFAState int StringBuffer NFAState NFAState NFAState public public if == decl_stmt java.lang.StringBuffer = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = for = < call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() ++ decl_stmt int = call java.lang.StringBuffer.charAt(int) call java.lang.StringBuffer.charAt(int) call java.lang.StringBuffer.charAt(int) call java.lang.StringBuffer.charAt(int) call java.lang.StringBuffer.charAt(int) decl_stmt org.antlr.analysis.NFAState = = = return new decl_stmt int = call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() return NFAState Transition StateCluster NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.Transition = new call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) decl_stmt StateCluster = new return NFAState StateCluster NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = decl_stmt StateCluster = new return NFAState Transition StateCluster NFAState public public if ! ++ decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.Transition = new new call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) decl_stmt StateCluster = new return NFAState Transition NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.Transition = new new call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) return new NFAState int public public < decl_stmt int = for : decl_stmt org.antlr.analysis.NFAState = if == ++ return Transition NFAState int private private decl_stmt org.antlr.analysis.NFAState = decl_stmt int = if == = call org.antlr.analysis.NFAState.setEOTTargetState(boolean) call org.antlr.analysis.NFAState.setEOTTargetState(boolean) call org.antlr.analysis.NFAState.setEOTTargetState(boolean) call org.antlr.analysis.NFAState.setEOTTargetState(boolean) call org.antlr.analysis.NFAState.setEOTTargetState(boolean) decl_stmt org.antlr.analysis.Transition = new StateCluster public public if == return if == return decl_stmt StateCluster = new return NFAState public public if == return decl_stmt org.antlr.analysis.NFAState = return new NFAState StateCluster StateCluster NFAState NFAState NFAState int NFAState public public < decl_stmt StateCluster if == || return if == decl_stmt StateCluster = decl_stmt org.antlr.analysis.NFAState = return new decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) decl_stmt int = for : decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) + + if == = else = ++ = new = = return StateCluster NFAState int NFAState NFAState NFAState public public decl_stmt StateCluster decl_stmt int = call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() if == decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) = = = new else decl_stmt org.antlr.analysis.NFAState = call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) = = = = return StateCluster NFAState NFAState NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = = if == decl_stmt org.antlr.analysis.NFAState = = = = = decl_stmt StateCluster = new return StateCluster NFAState NFAState NFAState NFAState public public decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) decl_stmt org.antlr.analysis.NFAState = call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) call org.antlr.analysis.NFAState.setDescription(String) decl_stmt org.antlr.analysis.NFAState = = if == decl_stmt org.antlr.analysis.NFAState = = = = = = = decl_stmt StateCluster = new return NFAState Transition Label StateCluster NFAState public public decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = = = decl_stmt org.antlr.analysis.Label = new call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() call NFA.grammar() decl_stmt org.antlr.analysis.Transition = new call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) call org.antlr.analysis.NFAState.addTransition(Transition) decl_stmt StateCluster = new return StateCluster StateCluster StateCluster StateCluster StateCluster decl List StateCluster public public decl_stmt StateCluster = decl_stmt StateCluster = = decl_stmt StateCluster = = = decl_stmt StateCluster = = decl_stmt StateCluster = decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt StateCluster = return State State Label protected protected decl_stmt org.antlr.analysis.State = if != && call State.transition() call State.transition() call State.transition() call State.transition() call State.transition() != decl_stmt org.antlr.analysis.State = call State.transition() call State.transition() call State.transition() call State.transition() call State.transition() if != && call State.transition() call State.transition() call State.transition() call State.transition() call State.transition() != decl_stmt org.antlr.analysis.Label = call State.transition() call State.transition() call State.transition() call State.transition() call State.transition() if call org.antlr.analysis.Label.isSet() call org.antlr.analysis.Label.isSet() call org.antlr.analysis.Label.isSet() call org.antlr.analysis.Label.isSet() call org.antlr.analysis.Label.isSet() return call org.antlr.analysis.Label.getSet() call org.antlr.analysis.Label.getSet() call org.antlr.analysis.Label.getSet() call org.antlr.analysis.Label.getSet() call org.antlr.analysis.Label.getSet() return Transition private private decl_stmt org.antlr.analysis.Transition = new