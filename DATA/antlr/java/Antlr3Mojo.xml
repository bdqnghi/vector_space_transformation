org.antlr.mojo.antlr3 org.apache.maven.plugin.AbstractMojo import org.apache.maven.plugin.MojoExecutionException import org.apache.maven.plugin.MojoFailureException import org.apache.maven.project.MavenProject import java.io.File import java.io.IOException import java.util.Collections import java.util.HashSet import java.util.Set import org.antlr.Tool import org.apache.maven.plugin.logging.Log import org.codehaus.plexus.compiler.util.scan.InclusionScanException import org.codehaus.plexus.compiler.util.scan.SimpleSourceInclusionScanner import org.codehaus.plexus.compiler.util.scan.SourceInclusionScanner import org.codehaus.plexus.compiler.util.scan.mapping.SourceMapping import org.codehaus.plexus.compiler.util.scan.mapping.SuffixMapping import class org.antlr.mojo.antlr3.Antlr3Mojo super super extends boolean int boolean boolean decl Set Tool String File int MavenProject boolean boolean File File boolean decl Set boolean boolean public public return public public return public public return call MavenProject.addCompileSourceRoot() call MavenProject.addCompileSourceRoot() call MavenProject.addCompileSourceRoot() call MavenProject.addCompileSourceRoot() call MavenProject.addCompileSourceRoot() Log File public public throws decl_stmt sun.rmi.runtime.Log = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() for : call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + for : call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + decl_stmt File = if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() try = new catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() throw new call org.antlr.gunit.swingui.Tool.setDebug(boolean) call org.antlr.gunit.swingui.Tool.setDebug(boolean) call org.antlr.gunit.swingui.Tool.setDebug(boolean) call org.antlr.gunit.swingui.Tool.setDebug(boolean) call org.antlr.gunit.swingui.Tool.setDebug(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_DFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_DFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_DFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_DFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_DFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_NFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_NFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_NFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_NFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setGenerate_NFA_dot(boolean) call org.antlr.gunit.swingui.Tool.setProfile(boolean) call org.antlr.gunit.swingui.Tool.setProfile(boolean) call org.antlr.gunit.swingui.Tool.setProfile(boolean) call org.antlr.gunit.swingui.Tool.setProfile(boolean) call org.antlr.gunit.swingui.Tool.setProfile(boolean) call org.antlr.gunit.swingui.Tool.setReport(boolean) call org.antlr.gunit.swingui.Tool.setReport(boolean) call org.antlr.gunit.swingui.Tool.setReport(boolean) call org.antlr.gunit.swingui.Tool.setReport(boolean) call org.antlr.gunit.swingui.Tool.setReport(boolean) call org.antlr.gunit.swingui.Tool.setPrintGrammar(boolean) call org.antlr.gunit.swingui.Tool.setPrintGrammar(boolean) call org.antlr.gunit.swingui.Tool.setPrintGrammar(boolean) call org.antlr.gunit.swingui.Tool.setPrintGrammar(boolean) call org.antlr.gunit.swingui.Tool.setPrintGrammar(boolean) call org.antlr.gunit.swingui.Tool.setTrace(boolean) call org.antlr.gunit.swingui.Tool.setTrace(boolean) call org.antlr.gunit.swingui.Tool.setTrace(boolean) call org.antlr.gunit.swingui.Tool.setTrace(boolean) call org.antlr.gunit.swingui.Tool.setTrace(boolean) call org.antlr.gunit.swingui.Tool.setVerbose(boolean) call org.antlr.gunit.swingui.Tool.setVerbose(boolean) call org.antlr.gunit.swingui.Tool.setVerbose(boolean) call org.antlr.gunit.swingui.Tool.setVerbose(boolean) call org.antlr.gunit.swingui.Tool.setVerbose(boolean) call org.antlr.gunit.swingui.Tool.setMessageFormat(String) call org.antlr.gunit.swingui.Tool.setMessageFormat(String) call org.antlr.gunit.swingui.Tool.setMessageFormat(String) call org.antlr.gunit.swingui.Tool.setMessageFormat(String) call org.antlr.gunit.swingui.Tool.setMessageFormat(String) call org.antlr.gunit.swingui.Tool.setMaxSwitchCaseLabels(int) call org.antlr.gunit.swingui.Tool.setMaxSwitchCaseLabels(int) call org.antlr.gunit.swingui.Tool.setMaxSwitchCaseLabels(int) call org.antlr.gunit.swingui.Tool.setMaxSwitchCaseLabels(int) call org.antlr.gunit.swingui.Tool.setMaxSwitchCaseLabels(int) call org.antlr.gunit.swingui.Tool.setMinSwitchAlts(int) call org.antlr.gunit.swingui.Tool.setMinSwitchAlts(int) call org.antlr.gunit.swingui.Tool.setMinSwitchAlts(int) call org.antlr.gunit.swingui.Tool.setMinSwitchAlts(int) call org.antlr.gunit.swingui.Tool.setMinSwitchAlts(int) if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call org.antlr.gunit.swingui.Tool.setOutputDirectory(String) call org.antlr.gunit.swingui.Tool.setOutputDirectory(String) call org.antlr.gunit.swingui.Tool.setOutputDirectory(String) call org.antlr.gunit.swingui.Tool.setOutputDirectory(String) call org.antlr.gunit.swingui.Tool.setOutputDirectory(String) call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call org.antlr.gunit.swingui.Tool.setForceRelativeOutput(boolean) call org.antlr.gunit.swingui.Tool.setForceRelativeOutput(boolean) call org.antlr.gunit.swingui.Tool.setForceRelativeOutput(boolean) call org.antlr.gunit.swingui.Tool.setForceRelativeOutput(boolean) call org.antlr.gunit.swingui.Tool.setForceRelativeOutput(boolean) call org.antlr.gunit.swingui.Tool.setLibDirectory(String) call org.antlr.gunit.swingui.Tool.setLibDirectory(String) call org.antlr.gunit.swingui.Tool.setLibDirectory(String) call org.antlr.gunit.swingui.Tool.setLibDirectory(String) call org.antlr.gunit.swingui.Tool.setLibDirectory(String) call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() return else if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call org.antlr.gunit.swingui.Tool.setInputDirectory(String) call org.antlr.gunit.swingui.Tool.setInputDirectory(String) call org.antlr.gunit.swingui.Tool.setInputDirectory(String) call org.antlr.gunit.swingui.Tool.setInputDirectory(String) call org.antlr.gunit.swingui.Tool.setInputDirectory(String) call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() try catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() throw new catch throw new call org.antlr.gunit.swingui.Tool.process() call org.antlr.gunit.swingui.Tool.process() call org.antlr.gunit.swingui.Tool.process() call org.antlr.gunit.swingui.Tool.process() call org.antlr.gunit.swingui.Tool.process() if call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() > throw new + call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() call org.antlr.gunit.swingui.Tool.getNumErrors() + if != decl Set SourceInclusionScanner String SourceMapping decl Set private private throws decl_stmt SourceMapping = new > decl_stmt java.util.Set < = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt SourceInclusionScanner = new call SourceInclusionScanner.addSourceMapping() call SourceInclusionScanner.addSourceMapping() call SourceInclusionScanner.addSourceMapping() call SourceInclusionScanner.addSourceMapping() call SourceInclusionScanner.addSourceMapping() decl_stmt java.util.Set < = call SourceInclusionScanner.getIncludedSources() call SourceInclusionScanner.getIncludedSources() call SourceInclusionScanner.getIncludedSources() call SourceInclusionScanner.getIncludedSources() call SourceInclusionScanner.getIncludedSources() if call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() if else call org.antlr.gunit.swingui.Tool.setMake(boolean) call org.antlr.gunit.swingui.Tool.setMake(boolean) call org.antlr.gunit.swingui.Tool.setMake(boolean) call org.antlr.gunit.swingui.Tool.setMake(boolean) call org.antlr.gunit.swingui.Tool.setMake(boolean) for : if + + decl_stmt java.lang.String = + if + call org.antlr.gunit.swingui.Tool.addGrammarFile(String) call org.antlr.gunit.swingui.Tool.addGrammarFile(String) call org.antlr.gunit.swingui.Tool.addGrammarFile(String) call org.antlr.gunit.swingui.Tool.addGrammarFile(String) call org.antlr.gunit.swingui.Tool.addGrammarFile(String) public < public < if == || call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() return return String File private private decl_stmt java.lang.String = call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() + if ! throw new + + + decl_stmt File = new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if call File.getParent() call File.getParent() call File.getParent() call File.getParent() call File.getParent() != return call File.getParent() call File.getParent() call File.getParent() call File.getParent() call File.getParent() + else return