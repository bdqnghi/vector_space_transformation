org.antlr.runtime.tree org.antlr.runtime.Token import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import class org.antlr.runtime.tree.TreeWizard TreeAdaptor decl Map public public < public public if != return + + + else return public public return new decl Map String public < public < decl_stmt java.util.Map < = new < if == return for = < ++ decl_stmt java.lang.String = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return Integer public public if == return decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != return return decl Map public < < public < < decl_stmt java.util.Map < < = new < < return int Object decl List int protected protected < < if == return decl_stmt int = call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) decl_stmt java.util.List < = if == = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) for = < ++ decl_stmt java.lang.Object = call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) decl List public < extends extends public < extends extends decl_stmt java.util.List final final final < = new < new public public call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public int TreePattern TreePatternParser decl List TreePatternLexer public < extends extends public < extends extends decl_stmt java.util.List final final final < = new < decl_stmt org.antlr.runtime.tree.TreePatternLexer = new decl_stmt org.antlr.runtime.tree.TreePatternParser = new new decl_stmt TreePattern final final = call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() if == || call TreePattern.isNil() call TreePattern.isNil() call TreePattern.isNil() call TreePattern.isNil() call TreePattern.isNil() || call TreePattern.getClass() call TreePattern.getClass() call TreePattern.getClass() call TreePattern.getClass() call TreePattern.getClass() == return decl_stmt int = call TreePattern.getType() call TreePattern.getType() call TreePattern.getType() call TreePattern.getType() call TreePattern.getType() new public public if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public if public public return public public return public public Object int protected protected if == return if call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) == decl_stmt int = call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) for = < ++ decl_stmt java.lang.Object = call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) decl Map TreePattern TreePatternParser int TreePatternLexer public public final final final final decl_stmt org.antlr.runtime.tree.TreePatternLexer = new decl_stmt org.antlr.runtime.tree.TreePatternParser = new new decl_stmt TreePattern final final = call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() if == || call TreePattern.isNil() call TreePattern.isNil() call TreePattern.isNil() call TreePattern.isNil() call TreePattern.isNil() || call TreePattern.getClass() call TreePattern.getClass() call TreePattern.getClass() call TreePattern.getClass() call TreePattern.getClass() == return decl_stmt java.util.Map final final final < = new < decl_stmt int = call TreePattern.getType() call TreePattern.getType() call TreePattern.getType() call TreePattern.getType() call TreePattern.getType() new public public < call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() if public public < if TreePattern TreePatternParser TreePatternLexer boolean public public < decl_stmt org.antlr.runtime.tree.TreePatternLexer = new decl_stmt org.antlr.runtime.tree.TreePatternParser = new new decl_stmt TreePattern = call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() decl_stmt boolean = return public public return int int TreePattern Object protected protected < if == || == return if != if call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) != return if && ! call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) return if != && != decl_stmt int = call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) decl_stmt int = if != return for = < ++ decl_stmt java.lang.Object = call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) decl_stmt TreePattern = if ! return return TreePatternParser Object TreePatternLexer public public decl_stmt org.antlr.runtime.tree.TreePatternLexer = new decl_stmt org.antlr.runtime.tree.TreePatternParser = new decl_stmt java.lang.Object = call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() call org.antlr.runtime.tree.TreePatternParser.pattern() return public static public static return public public return int int Object Object protected static protected static if == || == return if call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) != call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) call org.antlr.runtime.tree.TreeAdaptor.getType(Object) return if ! call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) call org.antlr.runtime.tree.TreeAdaptor.getText(Object) return decl_stmt int = call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) decl_stmt int = call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) call org.antlr.runtime.tree.TreeAdaptor.getChildCount(Object) if != return for = < ++ decl_stmt java.lang.Object = call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) decl_stmt java.lang.Object = call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) call org.antlr.runtime.tree.TreeAdaptor.getChild(Object,int) if ! return return