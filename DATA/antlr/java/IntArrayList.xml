org.antlr.misc java.util.AbstractList import class org.antlr.misc.IntArrayList super super extends super implements decl int int int int public public if >= decl_stmt int = = return public public if >= = ++ return public public if >= = protected protected * / + int public public for = < ++ decl_stmt int = if == return return int int public public decl_stmt int = if >= decl_stmt int = = new public public return public public return decl int public public decl_stmt int = new return public public return public public return IntArrayList public public if == return decl_stmt org.antlr.misc.IntArrayList = if != call org.antlr.misc.IntArrayList.size() call org.antlr.misc.IntArrayList.size() call org.antlr.misc.IntArrayList.size() call org.antlr.misc.IntArrayList.size() call org.antlr.misc.IntArrayList.size() return for = < ++ if != return return IntArrayList public public throws decl_stmt org.antlr.misc.IntArrayList = = return StringBuilder public public decl_stmt java.lang.StringBuilder = new for = < ++ if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()