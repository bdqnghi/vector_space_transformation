org.antlr.test org.antlr.Tool import org.antlr.analysis.Label import org.antlr.codegen.CodeGenerator import org.stringtemplate.v4.ST import org.antlr.tool.* import org.junit.Test import java.util.* import static static org.junit.Assert.* import class org.antlr.test.TestSymbolDefinitions super super extends String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.String = decl_stmt java.lang.String = String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.String = decl_stmt java.lang.String = String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.String = decl_stmt java.lang.String = String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.String = decl_stmt java.lang.String = String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.String = decl_stmt java.lang.String = String String String Grammar public public throws decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.String = decl_stmt java.lang.String = call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() decl_stmt java.lang.String = + + + + + + + + call org.antlr.tool.Grammar.getLexerGrammar() call org.antlr.tool.Grammar.getLexerGrammar() call org.antlr.tool.Grammar.getLexerGrammar() call org.antlr.tool.Grammar.getLexerGrammar() call org.antlr.tool.Grammar.getLexerGrammar() String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.String = decl_stmt java.lang.String = String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + + decl_stmt java.lang.String = decl_stmt java.lang.String = String String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = String String Grammar String public public throws decl_stmt org.antlr.tool.Grammar = new + + + + decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl Set Grammar public public throws decl_stmt org.antlr.tool.Grammar = new + decl_stmt java.util.Set < = call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() call org.antlr.tool.Grammar.getStringLiterals() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() String String public public throws decl_stmt java.lang.String = + + + + + decl_stmt java.lang.String = String String public public throws decl_stmt java.lang.String = + + + + + decl_stmt java.lang.String = String ErrorQueue Grammar CodeGenerator Tool ST String public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt java.lang.String = + + + decl_stmt org.antlr.tool.Grammar = new decl_stmt org.antlr.gunit.swingui.Tool = decl_stmt org.antlr.codegen.CodeGenerator = new call org.antlr.tool.Grammar.setCodeGenerator(CodeGenerator) call org.antlr.tool.Grammar.setCodeGenerator(CodeGenerator) call org.antlr.tool.Grammar.setCodeGenerator(CodeGenerator) call org.antlr.tool.Grammar.setCodeGenerator(CodeGenerator) call org.antlr.tool.Grammar.setCodeGenerator(CodeGenerator) decl_stmt ST = call org.antlr.codegen.CodeGenerator.genRecognizer() call org.antlr.codegen.CodeGenerator.genRecognizer() call org.antlr.codegen.CodeGenerator.genRecognizer() call org.antlr.codegen.CodeGenerator.genRecognizer() call org.antlr.codegen.CodeGenerator.genRecognizer() decl_stmt java.lang.String = call ST.render() call ST.render() call ST.render() call ST.render() call ST.render() call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) < + call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() call org.antlr.tool.Grammar.buildNFA() decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new ErrorQueue Grammar public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new GrammarSemanticsMessage ErrorQueue Grammar Object int Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.Object = decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new GrammarSemanticsMessage ErrorQueue Grammar Object int Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.Object = decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new GrammarSemanticsMessage ErrorQueue Grammar Object int Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.Object = decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new GrammarSemanticsMessage ErrorQueue Grammar Object int Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + + decl_stmt java.lang.Object = decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new GrammarSemanticsMessage ErrorQueue Grammar Tool Object int public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.gunit.swingui.Tool = decl_stmt org.antlr.tool.Grammar = new + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new int GrammarSemanticsMessage ErrorQueue Grammar Object public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt org.antlr.tool.Grammar = new + + + + + decl_stmt java.lang.Object = decl_stmt int = decl_stmt org.antlr.tool.GrammarSemanticsMessage = new String ErrorQueue Grammar String Tool String CompositeGrammar String String public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt java.lang.String = decl_stmt java.lang.String = + + decl_stmt org.antlr.gunit.swingui.Tool = new decl_stmt org.antlr.tool.CompositeGrammar = new decl_stmt org.antlr.tool.Grammar = new + call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() + call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() String ErrorQueue Grammar String Tool String CompositeGrammar String String public public throws decl_stmt org.antlr.test.ErrorQueue = new decl_stmt java.lang.String = decl_stmt java.lang.String = + + decl_stmt org.antlr.gunit.swingui.Tool = new decl_stmt org.antlr.tool.CompositeGrammar = new decl_stmt org.antlr.tool.Grammar = new + call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call org.antlr.tool.Grammar.parseAndBuildAST() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() + call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() call ErrorQueue.errors() decl Set Rule decl Set String StringTokenizer protected protected throws decl_stmt org.antlr.tool.Rule = decl_stmt java.util.StringTokenizer = new decl_stmt java.util.Set < = while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() if == = new < decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.util.Set < = if != = new = new < while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() + + + != && != || == && == + + + != && != || == && == if != call Rule.tokenListLabels() call Rule.tokenListLabels() call Rule.tokenListLabels() call Rule.tokenListLabels() call Rule.tokenListLabels() call Rule.tokenListLabels() call Rule.tokenListLabels() call Rule.tokenListLabels() call Rule.tokenListLabels() if != call Rule.ruleListLabels() call Rule.ruleListLabels() call Rule.ruleListLabels() call Rule.ruleListLabels() call Rule.ruleListLabels() call Rule.ruleListLabels() call Rule.ruleListLabels() call Rule.ruleListLabels() call Rule.ruleListLabels() decl Collection String int decl Set String StringTokenizer protected protected throws decl_stmt java.util.Set < = decl_stmt java.util.StringTokenizer = new while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) + + != call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() for : + < = new decl_stmt int = while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) + + ++ decl_stmt java.util.Collection < = + + + call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size()