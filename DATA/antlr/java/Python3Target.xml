org.antlr.codegen org.antlr.runtime.Token import org.antlr.tool.Grammar import java.util.ArrayList import java.util.List import class org.antlr.codegen.Python3Target super super extends public public return String public public if >= && <= return decl_stmt java.lang.String = if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == return return int public public decl_stmt int = return decl ArrayList int int private < private < decl_stmt java.util.ArrayList < = new < decl_stmt int = while decl_stmt int = if == - call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() break else call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() + = + return int int int String Object decl List int String int int public < public < < decl_stmt java.util.List < = new < for = < ++ decl_stmt java.lang.Object = if instanceof decl_stmt java.lang.String = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() && >= decl_stmt java.lang.String = for = < ++ += = + call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() && >= decl_stmt java.lang.String = for = <= ++ += call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = decl_stmt int = decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - while > && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() == -- decl_stmt int = while <= && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() == && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ ++ decl_stmt int = - for = <= ++ decl_stmt java.lang.Object = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if instanceof decl_stmt java.lang.String = if == if == - = for = < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() ++ if ! call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) break ++ if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() >= decl_stmt int for = < ++ if ! call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) + + break call decl List.set() call decl List.set() call decl List.set() call decl List.set() call decl List.set() call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) else if call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() > + + if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) ++ = else += call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() else += return