org.antlr.runtime.tree org.antlr.runtime.Token import java.util.List import class org.antlr.runtime.tree.ParseTree super super extends Object decl List public public return public public return public public return public public return public public public public return public public Token public public if instanceof decl_stmt org.antlr.runtime.Token = if call org.antlr.runtime.Token.getType() call org.antlr.runtime.Token.getType() call org.antlr.runtime.Token.getType() call org.antlr.runtime.Token.getType() call org.antlr.runtime.Token.getType() == return return call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() return call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() String Token StringBuilder public public decl_stmt java.lang.StringBuilder = new if != for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.antlr.runtime.Token = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() call org.antlr.runtime.Token.getText() decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() StringBuffer public public decl_stmt java.lang.StringBuffer = new return call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() ParseTree public public if instanceof return for = != && < ++ decl_stmt org.antlr.runtime.tree.ParseTree = call org.antlr.runtime.tree.ParseTree._toStringLeaves(StringBuffer) call org.antlr.runtime.tree.ParseTree._toStringLeaves(StringBuffer) call org.antlr.runtime.tree.ParseTree._toStringLeaves(StringBuffer) call org.antlr.runtime.tree.ParseTree._toStringLeaves(StringBuffer) call org.antlr.runtime.tree.ParseTree._toStringLeaves(StringBuffer)