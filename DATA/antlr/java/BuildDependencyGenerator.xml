org.antlr.tool org.antlr.Tool import org.antlr.codegen.CodeGenerator import org.antlr.misc.Utils import org.stringtemplate.v4.ST import org.stringtemplate.v4.STGroup import java.io.* import java.util.ArrayList import java.util.List import class org.antlr.tool.BuildDependencyGenerator STGroup Grammar CodeGenerator Tool String String decl List String String decl List ST String String ST String String File String public < public < decl_stmt java.util.List < = new < decl_stmt File = call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) if call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() else if call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() >= decl_stmt java.lang.String = call File.toString() call File.toString() call File.toString() call File.toString() call File.toString() = new decl_stmt java.lang.String = call org.antlr.codegen.CodeGenerator.getRecognizerFileName(String,int) call org.antlr.codegen.CodeGenerator.getRecognizerFileName(String,int) call org.antlr.codegen.CodeGenerator.getRecognizerFileName(String,int) call org.antlr.codegen.CodeGenerator.getRecognizerFileName(String,int) call org.antlr.codegen.CodeGenerator.getRecognizerFileName(String,int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.codegen.CodeGenerator.getVocabFileName() call org.antlr.codegen.CodeGenerator.getVocabFileName() call org.antlr.codegen.CodeGenerator.getVocabFileName() call org.antlr.codegen.CodeGenerator.getVocabFileName() call org.antlr.codegen.CodeGenerator.getVocabFileName() decl_stmt ST = decl_stmt ST = call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() if call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() = call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() call org.antlr.codegen.CodeGenerator.getTemplates() decl_stmt java.lang.String = decl_stmt java.lang.String = + + call ST.render() call ST.render() call ST.render() call ST.render() call ST.render() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if == decl_stmt java.lang.String = decl_stmt java.lang.String = + + call ST.render() call ST.render() call ST.render() call ST.render() call ST.render() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if != decl_stmt java.lang.String = + + call ST.render() call ST.render() call ST.render() call ST.render() call ST.render() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt java.util.List < = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() for : = call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) call org.antlr.gunit.swingui.Tool.getOutputDirectory(String) decl_stmt java.lang.String = call File.toString() call File.toString() call File.toString() call File.toString() call File.toString() + call ST.render() call ST.render() call ST.render() call ST.render() call ST.render() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return return decl List decl List String String public < public < decl_stmt java.util.List < = decl_stmt java.util.List < = call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() call Grammar.composite() for : decl_stmt java.lang.String = call org.antlr.gunit.swingui.Tool.getLibraryDirectory() call org.antlr.gunit.swingui.Tool.getLibraryDirectory() call org.antlr.gunit.swingui.Tool.getLibraryDirectory() call org.antlr.gunit.swingui.Tool.getLibraryDirectory() call org.antlr.gunit.swingui.Tool.getLibraryDirectory() decl_stmt java.lang.String = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return return decl List File public < public < decl_stmt java.util.List < = new < = call org.antlr.tool.Grammar.getOption(String) call org.antlr.tool.Grammar.getOption(String) call org.antlr.tool.Grammar.getOption(String) call org.antlr.tool.Grammar.getOption(String) call org.antlr.tool.Grammar.getOption(String) if != decl_stmt File = call org.antlr.gunit.swingui.Tool.getImportedVocabFile(String) call org.antlr.gunit.swingui.Tool.getImportedVocabFile(String) call org.antlr.gunit.swingui.Tool.getImportedVocabFile(String) call org.antlr.gunit.swingui.Tool.getImportedVocabFile(String) call org.antlr.gunit.swingui.Tool.getImportedVocabFile(String) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return ST public public decl_stmt ST = call STGroup.getInstanceOf() call STGroup.getInstanceOf() call STGroup.getInstanceOf() call STGroup.getInstanceOf() call STGroup.getInstanceOf() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() call ST.add() return String public public if != return decl_stmt java.lang.String = = new public public return public public return String public public if return else if >= decl_stmt java.lang.String = return + + else return + +