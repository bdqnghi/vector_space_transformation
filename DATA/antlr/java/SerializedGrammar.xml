org.antlr.runtime java.io.IOException import java.io.FileInputStream import java.io.BufferedInputStream import java.io.DataInputStream import java.util.List import java.util.ArrayList import class org.antlr.runtime.SerializedGrammar decl List char String String int public public return + + decl List StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for = < ++ decl_stmt java.util.List < = if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return public public return char int String String int protected protected throws decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) throw new decl_stmt int = decl_stmt char = char = decl_stmt java.lang.String = = + + decl_stmt int = + = decl List Rule protected < extends extends protected < extends extends throws decl_stmt java.util.List < = new < for = < ++ decl_stmt org.antlr.tool.Rule = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return byte byte Block String byte protected protected throws decl_stmt byte = if != throw new decl_stmt java.lang.String = + decl_stmt byte = decl_stmt Block = decl_stmt byte = if != throw new return new decl List int protected protected throws decl_stmt int = decl_stmt int = for = < ++ decl_stmt java.util.List < = = return new byte Block int byte int int int int decl List protected < protected < throws decl_stmt java.util.List < = new < decl_stmt byte = if != throw new decl_stmt byte = while != switch case decl_stmt int = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new break case decl_stmt int = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new break case break case decl_stmt int = decl_stmt int = break case decl_stmt int = break case decl_stmt Block = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() break = return byte StringBuilder protected protected throws decl_stmt byte = decl_stmt java.lang.StringBuilder = new while != call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char = return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()