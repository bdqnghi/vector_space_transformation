org.antlr.analysis org.antlr.grammar.v3.ANTLRParser import org.antlr.misc.IntervalSet import org.antlr.misc.MultiMap import java.util.Collections import java.util.Iterator import java.util.List import java.util.Map import class org.antlr.analysis.LL1DFA super super extends Label int protected protected decl_stmt org.antlr.analysis.Label decl_stmt int = if != = new else = new return decl SemanticContext NFAState NFAState SemanticContext int protected protected decl_stmt int = decl_stmt org.antlr.analysis.NFAState = decl_stmt org.antlr.analysis.NFAState = if decl_stmt org.antlr.analysis.SemanticContext = if call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() decl_stmt Predicate = if call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() call decl SemanticContext.predicateAST() == if call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() call org.antlr.analysis.SemanticContext.isSyntacticPredicate() return return