com.factual.driver java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Map import java.util.Map.Entry import com.google.common.base.Joiner import com.google.common.collect.Maps import class com.factual.driver.Parameters decl Map protected protected return new protected protected return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() protected protected return call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() protected protected call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new < protected protected call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new protected protected call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() protected < protected < return decl Map protected < protected < decl_stmt java.util.Map < = for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if != call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() return protected protected if ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() || ! call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() instanceof call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() protected protected if ! || ! instanceof return return new protected protected if ! || ! instanceof < private < private < return Object protected < protected < decl_stmt java.lang.Object = if instanceof && instanceof return < return decl List FilterGroup protected protected decl_stmt com.factual.driver.FilterGroup = new for : decl_stmt java.util.List < = if != if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call FilterGroup.add() call FilterGroup.add() call FilterGroup.add() call FilterGroup.add() call FilterGroup.add() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - protected protected if ! || ! instanceof || ! instanceof new public public if return else if == return else return new public public if return else if == return else return new public public return public public return public public return public public return public public return public public return public public return public public return