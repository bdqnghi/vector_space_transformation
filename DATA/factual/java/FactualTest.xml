com.factual.driver static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertFalse import static static org.junit.Assert.assertTrue import static static org.junit.Assert.fail import java.io.File import java.io.IOException import java.io.InputStream import java.io.UnsupportedEncodingException import java.util.ArrayList import java.util.Arrays import java.util.Calendar import java.util.GregorianCalendar import java.util.HashMap import java.util.List import java.util.Map import org.apache.commons.io.FileUtils import org.json.JSONArray import org.json.JSONException import org.json.JSONObject import org.junit.Before import org.junit.Ignore import org.junit.Test import org.yaml.snakeyaml.Yaml import com.google.api.client.http.HttpHeaders import com.google.common.base.Joiner import com.google.common.collect.Lists import com.google.common.collect.Maps import com.google.common.io.Closeables import class com.factual.driver.FactualTest String File String int double double String Factual String public public = ColumnSchema SchemaResponse public public decl_stmt com.factual.driver.SchemaResponse = call com.factual.driver.Factual.schema(String) call com.factual.driver.Factual.schema(String) call com.factual.driver.Factual.schema(String) call com.factual.driver.Factual.schema(String) call com.factual.driver.Factual.schema(String) call com.factual.driver.SchemaResponse.getTitle() call com.factual.driver.SchemaResponse.getTitle() call com.factual.driver.SchemaResponse.getTitle() call com.factual.driver.SchemaResponse.getTitle() call com.factual.driver.SchemaResponse.getTitle() call com.factual.driver.SchemaResponse.isGeoEnabled() call com.factual.driver.SchemaResponse.isGeoEnabled() call com.factual.driver.SchemaResponse.isGeoEnabled() call com.factual.driver.SchemaResponse.isGeoEnabled() call com.factual.driver.SchemaResponse.isGeoEnabled() call SchemaResponse.isSearchEnabled() call SchemaResponse.isSearchEnabled() call SchemaResponse.isSearchEnabled() call SchemaResponse.isSearchEnabled() call SchemaResponse.isSearchEnabled() call com.factual.driver.SchemaResponse.getColumnSchemas() call com.factual.driver.SchemaResponse.getColumnSchemas() call com.factual.driver.SchemaResponse.getColumnSchemas() call com.factual.driver.SchemaResponse.getColumnSchemas() call com.factual.driver.SchemaResponse.getColumnSchemas() decl_stmt com.factual.driver.ColumnSchema = call com.factual.driver.SchemaResponse.getColumnSchema(String) call com.factual.driver.SchemaResponse.getColumnSchema(String) call com.factual.driver.SchemaResponse.getColumnSchema(String) call com.factual.driver.SchemaResponse.getColumnSchema(String) call com.factual.driver.SchemaResponse.getColumnSchema(String) ReadResponse String decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new new decl_stmt java.lang.String = call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() ReadResponse String decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() ReadResponse String decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() ReadResponse String decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() call com.factual.driver.ReadResponse.getData() ReadResponse public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new new - - call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() > ReadResponse public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new new - call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() call com.factual.driver.ReadResponse.size() > ReadResponse String decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new new decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new new new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new new decl_stmt java.lang.String = call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() ReadResponse String decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() ReadResponse String decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new new decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new new new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.Factual.get(String,Map) call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() call com.factual.driver.ReadResponse.getJson() ReadResponse decl Map public public decl_stmt com.factual.driver.ReadResponse = call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) call com.factual.driver.Factual.fetch(String,ResolveQuery) new decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new new new new new