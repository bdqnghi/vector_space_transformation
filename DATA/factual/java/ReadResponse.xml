com.factual.driver java.util.Collection import java.util.List import java.util.Map import org.json.JSONArray import org.json.JSONException import org.json.JSONObject import com.google.common.base.Function import com.google.common.collect.Collections2 import com.google.common.collect.Lists import class com.factual.driver.ReadResponse super super extends super implements decl List public public return public < public < if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return else return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() public < < public < < return public public return call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() Object public < public < final final return new < < public public < decl_stmt java.lang.Object = return != call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() : Object public public < decl_stmt java.lang.Object = return != call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() :