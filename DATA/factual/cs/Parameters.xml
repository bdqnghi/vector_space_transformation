FactualDriver FactualDriver.Filters using FactualDriver.Utils using System using System.Collections.Generic using System.Linq using class FactualDriver.Parameters decl List public public call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new public public if is || is return call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() var private private if call decl List.All() call decl List.All() call decl List.All() call decl List.All() call decl List.All() != typeof call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new decl_stmt var = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() public public < call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new var var public public decl_stmt var = call decl List.SingleOrDefault() call decl List.SingleOrDefault() call decl List.SingleOrDefault() call decl List.SingleOrDefault() call decl List.SingleOrDefault() == if != && is decl_stmt var = call var.Pairs() call var.Pairs() call var.Pairs() call var.Pairs() call var.Pairs() call var.Pairs() call var.Pairs() call var.Pairs() call var.Pairs() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new new < var var public public decl_stmt var = call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() == if != && is decl_stmt var = = else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new public < public < return call decl List.Single() call decl List.Single() call decl List.Single() call decl List.Single() call decl List.Single() == typeof var var var public public < decl_stmt var = decl_stmt var = new decl_stmt var = call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.RowFilters() call var.Skip() call var.Skip() call var.Skip() call var.Skip() call var.Skip() - if > = call var.Count() call var.Count() call var.Count() call var.Count() call var.Count() call var.RemoveRange() call var.RemoveRange() call var.RemoveRange() call var.RemoveRange() call var.RemoveRange() - public public return call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() public public return new new < public public return call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray()