FactualDriver.OAuth System using System.Collections using System.Collections.Generic using System.Globalization using System.IO using System.Security.Cryptography using System.Text using class FactualDriver.OAuth.OAuthBase string string string string string decl char string string string string string string string string string string string string string string string string string string string string string string string string string string decl byte decl byte private static private static if == throw new if throw new decl_stmt byte = decl_stmt byte = return public static < public static < return decl string string decl SortedDictionary decl string string public static < public static < < if = decl_stmt System.Collections.Generic.SortedDictionary < = == new < : new < if ! decl_stmt string = foreach in if ! if > - decl_stmt string = decl_stmt string = decl_stmt string = if call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() = else call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() else call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() return StringBuilder public static public static if return decl_stmt System.Text.StringBuilder = new foreach in if call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() != - call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) var var public static public static decl_stmt var = decl_stmt var = new foreach in if > && < || == call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() else call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() StringBuilder bool protected static protected static < if == return decl_stmt bool = decl_stmt System.Text.StringBuilder = new foreach < in if ! call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) OAuthParameters public static public static decl_stmt FactualDriver.OAuth.OAuthParameters = new = = = = = = return StringBuilder decl SortedDictionary string string public static public static if throw new if throw new if throw new decl_stmt string = decl_stmt string = decl_stmt System.Collections.Generic.SortedDictionary < = if ! call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() call decl SortedDictionary.ContainsKey() call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() call decl SortedDictionary.Add() = if ! == && == || == && == += + += = decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) call System.Text.StringBuilder.AppendFormat(String,Object,Object,Object) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public static public static return public static public static return OAuthParameters public static public static decl_stmt FactualDriver.OAuth.OAuthParameters = new = = = = = = = return string HMACSHA1 public static public static switch case return case decl_stmt string = decl_stmt System.Security.Cryptography.HMACSHA1 = new = return case throw new default: throw new public static public static return public static public static return : string int TimeSpan public static public static decl_stmt TimeSpan = - new decl_stmt string = call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() call TimeSpan.TotalSeconds() decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() if != - = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() return public static public static return public static public static return decl byte int char ArrayList long public static public static if == return if == - && == - return if == = decl_stmt long = if decl_stmt var = new < else decl_stmt System.Collections.ArrayList = new endif decl_stmt int decl_stmt char for = < ++ = if == && + < && + != if + == && + < = + if != - char += else else if = + != - char += else continue if == else if decl_stmt byte = call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) else decl_stmt byte = call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) typeof byte endif = return static static if > foreach in new else byte int char int int static static decl_stmt int = decl_stmt int = + for = < ++ decl_stmt char = if > return - decl_stmt int = byte if == - return - = << + return char static static decl_stmt char = char if >= && <= return - if >= && <= return - + if >= && <= return - + return - public static public static return bool char decl byte int int public static public static if == return if return decl_stmt bool = decl_stmt int = for = < ++ decl_stmt char = if < || < && && || > && < || > if continue = break if ! return decl_stmt byte = new decl_stmt int = return static static return == || == || == || == || == || == || == || == int MemoryStream int public static public static if == return decl_stmt int = if == return new if < || >= throw new if < || || - throw new decl_stmt System.IO.MemoryStream = new decl_stmt int = + for = < ++ char return call System.IO.MemoryStream.ToArray() call System.IO.MemoryStream.ToArray() call System.IO.MemoryStream.ToArray() call System.IO.MemoryStream.ToArray() call System.IO.MemoryStream.ToArray() int int static static if > decl_stmt int decl_stmt int = int byte byte = >> byte = >> & byte = >> & byte = & byte return if > && byte return if == byte return if < || < && && || > && < || > if && > byte byte byte byte else byte decl_stmt int = int >> byte = int & byte else byte