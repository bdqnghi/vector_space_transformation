FactualDriver FactualDriver.Exceptions using FactualDriver.Filters using FactualDriver.Utils using Newtonsoft.Json using System using System.Collections.Generic using System.IO using System.Net using System.Text using System.Web using FactualDriver.OAuth.OAuth2LeggedAuthenticator class FactualDriver.Factual string MultiQuery OAuth2LeggedAuthenticator return ?? = new var string var public public decl_stmt string = : decl_stmt var = new new decl_stmt var = call FactualDriver.OAuth.OAuth2LeggedAuthenticator.CreateHttpWebRequest(string,Uri) call FactualDriver.OAuth.OAuth2LeggedAuthenticator.CreateHttpWebRequest(string,Uri) call FactualDriver.OAuth.OAuth2LeggedAuthenticator.CreateHttpWebRequest(string,Uri) call FactualDriver.OAuth.OAuth2LeggedAuthenticator.CreateHttpWebRequest(string,Uri) call FactualDriver.OAuth.OAuth2LeggedAuthenticator.CreateHttpWebRequest(string,Uri) call var.Headers() call var.Headers() call var.Headers() call var.Headers() call var.Headers() call var.Headers() call var.Headers() call var.Headers() call var.Headers() = ?? = ?? return public public < return public public params params params return < dynamic var public public decl_stmt var = decl_stmt dynamic = if int == return string else return public public return public public return public public return public public return public public return public public return new public public return + + public public return + + + + var private private decl_stmt var = + + return public public return + + + + var private private decl_stmt var = + + return public public return new public public return new public public return new public public return new public public return + + public public return public public return public public public public public public public public public public public public return protected static protected static return + + protected static protected static return + + protected static protected static return + protected static protected static return + + protected static protected static return + + + protected static protected static return + + protected static protected static return protected static protected static return + + protected static protected static return protected static protected static return + + + + public public return public public return public public return public public return public public < return public public return public public return public public return public public return public public return var private private < decl_stmt var = + + + if != += + if != && > += + return public public < return public public return var public public decl_stmt var = if return public public < < return public public return : decl byte var public public decl_stmt var = if decl_stmt byte = = = using = call var.GetRequestStream() call var.GetRequestStream() call var.GetRequestStream() call var.GetRequestStream() call var.GetRequestStream() return var string var var private private decl_stmt string try using = if int decl_stmt var = call var.GetResponseStream() call var.GetResponseStream() call var.GetResponseStream() call var.GetResponseStream() call var.GetResponseStream() if == throw new using = new = if throw new if if == return catch decl_stmt var = if == throw if int decl_stmt var = call var.GetResponseStream() call var.GetResponseStream() call var.GetResponseStream() call var.GetResponseStream() call var.GetResponseStream() if == throw new using = new decl_stmt var = if throw new return string private private < decl_stmt string = foreach in if += + + + else += + + + if > = call string.Remove() call string.Remove() call string.Remove() call string.Remove() call string.Remove() - return dynamic string string private private decl_stmt dynamic = decl_stmt string = string decl_stmt string = string return