NetMQ.Tests System using System.Collections.Generic using System.Diagnostics using System.Net using System.Net.Sockets using System.Text using System.Threading using System.Threading.Tasks using NetMQ.Monitoring using NetMQ.Sockets using NUnit.Framework using class attribute NetMQ.Tests.SocketTests var public public using = new decl_stmt var = new call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() ref var public public using = new using = new decl_stmt var = = = = + var public public using = new = = decl_stmt var = = var var decl byte public public using = new using = new decl_stmt var = + decl_stmt var = new decl_stmt byte = var var var int NetMQMessage var public public decl_stmt var = new decl_stmt var = new decl_stmt int const const = decl_stmt var = new using = new call var.WaitOne() call var.WaitOne() call var.WaitOne() call var.WaitOne() call var.WaitOne() call var.WaitOne() call var.WaitOne() call var.WaitOne() call var.WaitOne() call var.WaitOne() decl_stmt var = new using = new call var.Set() call var.Set() call var.Set() call var.Set() call var.Set() decl_stmt NetMQMessage = ref ref call var.Set() call var.Set() call var.Set() call var.Set() call var.Set() call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() var var decl byte public public using = new using = new = = decl_stmt var = + decl_stmt var = new decl_stmt byte = var bool public public using = new using = new = = = = = = decl_stmt var = + decl_stmt bool out out decl byte var var public public decl_stmt var = new for = < ++ = using = new using = new decl_stmt var = + for = < ++ decl_stmt byte = for = < ++ decl byte var var public public decl_stmt var = new = = = = using = new using = new decl_stmt var = + decl_stmt byte = var var int decl byte decl byte int decl byte public public using = new using = new = decl_stmt var = = decl_stmt byte = decl_stmt int = decl_stmt byte = decl_stmt byte = decl_stmt var = new decl_stmt int = int public public using = new using = new decl_stmt int = + var var public public decl_stmt var = new foreach in using = new using = new decl_stmt var = + var public public using = new using = new = decl_stmt var = var public public using = new using = new = decl_stmt var = = string var public public using = new using = new decl_stmt var = + decl_stmt string = public public using = new var public public using = new using = new decl_stmt var = + string var var public public using = new using = new using = new decl_stmt string if == decl_stmt var = decl_stmt var = + + = + else = string var var public public using = new decl_stmt string using = new using = new if == decl_stmt var = decl_stmt var = = + = + else == = = using = new using = new = = if == else < var var var var public public using = new decl_stmt var = + using = new decl_stmt var = + using = new decl_stmt var = decl_stmt var = decl_stmt var = + + + var public public using = new = using = new = decl_stmt var = == = == public public using = new = using = new = < public public using = new = using = new var ParameterizedThreadStart var decl byte var var decl byte var var var var public public decl_stmt var = decl_stmt var = new < using = new = += while decl_stmt var = decl_stmt var = call var.Pop() call var.Pop() call var.Pop() call var.Pop() call var.Pop() if call var.Pop() call var.Pop() call var.Pop() call var.Pop() call var.Pop() decl_stmt var = call var.Pop() call var.Pop() call var.Pop() call var.Pop() call var.Pop() if call var.Pop() call var.Pop() call var.Pop() call var.Pop() call var.Pop() if == if == && == && == lock call var.Enqueue() call var.Enqueue() call var.Enqueue() call var.Enqueue() call var.Enqueue() decl_stmt var = new for = < ++ decl_stmt ParameterizedThreadStart = decl_stmt byte = decl_stmt byte = using = new = decl_stmt var = new call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.AppendEmptyFrame() call var.AppendEmptyFrame() call var.AppendEmptyFrame() call var.AppendEmptyFrame() call var.AppendEmptyFrame() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() decl_stmt var = new = = + call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() call var.RunAsync() call var.RunAsync() call var.RunAsync() call var.RunAsync() call var.RunAsync() call var.Stop() call var.Stop() call var.Stop() call var.Stop() call var.Stop() public public using = new using = new public public using = new using = new public public using = new using = new public public using = new using = new public public using = new using = new using = new int public public decl_stmt int using = new = using = new