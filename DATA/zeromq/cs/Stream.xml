NetMQ.Core.Patterns System using System.Collections.Generic using System.Diagnostics using JetBrains.Annotations using NetMQ.Core.Patterns.Utils using NetMQ.Core.Utils using class NetMQ.Core.Patterns.Stream super super SocketBase Pipe bool Msg FairQueueing int bool Random bool decl Dictionary Msg public override public override call Msg.Close() call Msg.Close() call Msg.Close() call Msg.Close() call Msg.Close() call Msg.Close() call Msg.Close() call Msg.Close() call Msg.Close() call Msg.Close() protected override protected override != call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) Outpipe protected override protected override decl_stmt Outpipe call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() != call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) if == = protected override protected override call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) Outpipe protected override protected override decl_stmt Outpipe = foreach in if == ! = = break != bool var Outpipe protected override protected override ref ref if ! == if decl_stmt var = == : decl_stmt Outpipe if call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out = if ! call NetMQ.Core.Pipe.CheckWrite() call NetMQ.Core.Pipe.CheckWrite() call NetMQ.Core.Pipe.CheckWrite() call NetMQ.Core.Pipe.CheckWrite() call NetMQ.Core.Pipe.CheckWrite() = = return else throw new = return = if != if == call NetMQ.Core.Pipe.Terminate(bool) call NetMQ.Core.Pipe.Terminate(bool) call NetMQ.Core.Pipe.Terminate(bool) call NetMQ.Core.Pipe.Terminate(bool) call NetMQ.Core.Pipe.Terminate(bool) = return decl_stmt bool = call NetMQ.Core.Pipe.Write(Msg) call NetMQ.Core.Pipe.Write(Msg) call NetMQ.Core.Pipe.Write(Msg) call NetMQ.Core.Pipe.Write(Msg) call NetMQ.Core.Pipe.Write(Msg) ref if call Pipe.Flush() call Pipe.Flush() call Pipe.Flush() call Pipe.Flush() call Pipe.Flush() = return var bool decl byte protected override protected override ref ref if if ! ref = else ref = return decl_stmt var = new decl_stmt bool = call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() ref if ! return != ! decl_stmt byte = = = return var bool decl byte protected override protected override if return decl_stmt var = new decl_stmt bool = call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() call FairQueueing.RecvPipe() ref if ! return != ! decl_stmt byte = = new call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() call Msg.Put() call Msg.Put() call Msg.Put() call Msg.Put() call Msg.Put() call Msg.SetFlags() call Msg.SetFlags() call Msg.SetFlags() call Msg.SetFlags() call Msg.SetFlags() = = return protected override protected override return decl byte var var private private decl_stmt var = new decl_stmt byte = ++ = = byte = decl_stmt var = new call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add()