NetMQ.Core.Transports class NetMQ.Core.Transports.V1Decoder super super DecoderBase IMsgSink int long Msg int int ByteArraySegment int public override public override = protected override protected override switch case return case return case return case return default: return byte private private call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() decl_stmt byte = if == else if == return if >= && - > return else call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() - return long int private private call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() decl_stmt long = call NetMQ.Core.Transports.ByteArraySegment.GetLong(Endianness,int) call NetMQ.Core.Transports.ByteArraySegment.GetLong(Endianness,int) call NetMQ.Core.Transports.ByteArraySegment.GetLong(Endianness,int) call NetMQ.Core.Transports.ByteArraySegment.GetLong(Endianness,int) call NetMQ.Core.Transports.ByteArraySegment.GetLong(Endianness,int) if == return if >= && - > return if - > return decl_stmt int = - call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() call Msg.InitPool() return int private private call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() decl_stmt int = call Msg.SetFlags() call Msg.SetFlags() call Msg.SetFlags() call Msg.SetFlags() call Msg.SetFlags() & new return bool private private call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() call NetMQ.Core.Transports.ByteArraySegment.Reset() if == return try decl_stmt bool = call IMsgSink.PushMsg() call IMsgSink.PushMsg() call IMsgSink.PushMsg() call IMsgSink.PushMsg() call IMsgSink.PushMsg() ref if return catch return