NetMQ.Core.Utils System using System.Reflection using System.Runtime.InteropServices using JetBrains.Annotations using class NetMQ.Core.Utils.Opcode decl byte IntPtr decl byte ulong decl byte Assembly Type MethodInfo var object Type Type object public static public static decl_stmt var = int decl_stmt byte = == : = if == || == if return decl_stmt System.Reflection.Assembly = decl_stmt System.Type = call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) decl_stmt System.Reflection.MethodInfo = call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) decl_stmt System.Type = call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) decl_stmt object = int call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) | int call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) | int call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) decl_stmt System.Type = call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) decl_stmt object = int call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) | int call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) = call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() new - if == || == - throw new else = | = typeof as return Type var decl object MethodInfo Assembly Type var var private static private static decl_stmt System.Reflection.Assembly = decl_stmt System.Type = call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) decl_stmt System.Type = call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) decl_stmt System.Reflection.MethodInfo = call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) decl_stmt object = decl_stmt var = int call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() if != return decl_stmt var = decl_stmt var = string call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) return call var.ToLower() call var.ToLower() call var.ToLower() call var.ToLower() call var.ToLower() Type var MethodInfo Assembly public static public static = decl_stmt var = int if == || == decl_stmt System.Reflection.Assembly = + decl_stmt System.Type = call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) call System.Reflection.Assembly.GetType(String) decl_stmt System.Reflection.MethodInfo = call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call System.Type.GetMethod(String,BindingFlags) call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() new else