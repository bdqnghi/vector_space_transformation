NetMQ.Core.Transports.Pgm System using System.Net using System.Net.Sockets using JetBrains.Annotations using class NetMQ.Core.Transports.Pgm.PgmAddress super string int int string string IPAddress int public public decl_stmt int = if < throw new decl_stmt string = decl_stmt string = + if call string.Contains() call string.Contains() call string.Contains() call string.Contains() call string.Contains() decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() decl_stmt string = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() + = else = if >= && == && - == = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() - decl_stmt int if == || == = else = if == throw new if == = decl_stmt System.Net.IPAddress if ! out throw new = new IPEndPoint public override public override if == return decl_stmt System.Net.IPEndPoint = return == + + + + : + + + +