NetMQ.Tests System using NUnit.Framework using class attribute NetMQ.Tests.MsgTests public public var public public decl_stmt var = new < = < var public public decl_stmt var = new call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() | call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() | | call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() call var.SetFlags() | | call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() | call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() call var.ResetFlags() var public public decl_stmt var = new call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() var public public decl_stmt var = new call var.InitDelimiter() call var.InitDelimiter() call var.InitDelimiter() call var.InitDelimiter() call var.InitDelimiter() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() var var public public decl_stmt var = new decl_stmt var = new call var.InitGC() call var.InitGC() call var.InitGC() call var.InitGC() call var.InitGC() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() var var var public public decl_stmt var = new decl_stmt var = new call var.InitGC() call var.InitGC() call var.InitGC() call var.InitGC() call var.InitGC() decl_stmt var = new for = < ++ = byte call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() call var.Put() for = < ++ = + call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() var var var public public decl_stmt var = new decl_stmt var = new call var.InitPool() call var.InitPool() call var.InitPool() call var.InitPool() call var.InitPool() decl_stmt var = call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() var var public public decl_stmt var = new decl_stmt var = new < call var.Copy() call var.Copy() call var.Copy() call var.Copy() call var.Copy() ref var var var public public decl_stmt var = new decl_stmt var = new call var.InitPool() call var.InitPool() call var.InitPool() call var.InitPool() call var.InitPool() decl_stmt var = new call var.Copy() call var.Copy() call var.Copy() call var.Copy() call var.Copy() ref call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close()