NetMQ System using System.Threading using JetBrains.Annotations using class NetMQ.Proxy NetMQSocket int NetMQSocket INetMQPoller bool int int int NetMQSocket int NetMQSocket public public if ref != throw new += += if = else = new = call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() public public if ref != throw new if ! call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() call INetMQPoller.Dispose() call INetMQPoller.Dispose() call INetMQPoller.Dispose() call INetMQPoller.Dispose() call INetMQPoller.Dispose() = -= -= = private private private private var var var private static private static decl_stmt var = new call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() decl_stmt var = new call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() call var.InitEmpty() while from ref decl_stmt var = if != call var.Copy() call var.Copy() call var.Copy() call var.Copy() call var.Copy() ref ref ref if ! break call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() call var.Close()