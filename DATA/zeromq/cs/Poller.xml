NetMQ.Core.Utils System using System.Collections.Generic using System.Linq using System.Net.Sockets using System.Threading using JetBrains.Annotations using class NetMQ.Core.Utils.Poller super super PollerBase bool decl List decl HashSet decl List bool Thread bool decl HashSet string public public if ! try call Thread.Join() call Thread.Join() call Thread.Join() call Thread.Join() call Thread.Join() catch public public call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() PollSet public public decl_stmt PollSet = call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() call decl List.FirstOrDefault() == if != call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() = else = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() == = = call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() - public public call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() public public = new = = call Thread.Start() call Thread.Start() call Thread.Start() call Thread.Start() call Thread.Start() = public public = var int var private private decl_stmt var = new < decl_stmt var = new < while ! call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() decl_stmt int = call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() try != * : - catch continue foreach in if continue if call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() try catch if continue if call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() try catch call var.Clear() call var.Clear() call var.Clear() call var.Clear() call var.Clear() call var.Clear() call var.Clear() call var.Clear() call var.Clear() call var.Clear() if foreach in call decl List.Where() call decl List.Where() call decl List.Where() call decl List.Where() call decl List.Where() call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() = =