NetMQ.Core.Utils System.Diagnostics using System.Net using System.Net.Sockets using System.Threading using JetBrains.Annotations using class NetMQ.Core.Utils.Signaler decl byte decl byte Socket Socket public public try = new catch try if call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() else call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) endif catch try if call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() else call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) call System.Net.Sockets.Socket.Dispose(bool) endif catch int public public decl_stmt int = call System.Net.Sockets.Socket.Send(byte,int,int,SocketFlags) call System.Net.Sockets.Socket.Send(byte,int,int,SocketFlags) call System.Net.Sockets.Socket.Send(byte,int,int,SocketFlags) call System.Net.Sockets.Socket.Send(byte,int,int,SocketFlags) call System.Net.Sockets.Socket.Send(byte,int,int,SocketFlags) == int public public decl_stmt int = >= * : if return call System.Net.Sockets.Socket.Poll(int,SelectMode) call System.Net.Sockets.Socket.Poll(int,SelectMode) call System.Net.Sockets.Socket.Poll(int,SelectMode) call System.Net.Sockets.Socket.Poll(int,SelectMode) call System.Net.Sockets.Socket.Poll(int,SelectMode) return int public public decl_stmt int = call System.Net.Sockets.Socket.Receive(IList) call System.Net.Sockets.Socket.Receive(IList) call System.Net.Sockets.Socket.Receive(IList) call System.Net.Sockets.Socket.Receive(IList) call System.Net.Sockets.Socket.Receive(IList) == ==