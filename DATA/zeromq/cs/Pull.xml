NetMQ.Core.Patterns System.Diagnostics using JetBrains.Annotations using NetMQ.Core.Patterns.Utils using class NetMQ.Core.Patterns.Pull super super SocketBase FairQueueing protected override protected override != call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Attach(Pipe) protected override protected override call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Activated(Pipe) protected override protected override call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) call NetMQ.Core.Patterns.Utils.FairQueueing.Terminated(Pipe) protected override protected override ref ref return call NetMQ.Core.Patterns.Utils.FairQueueing.Recv(Msg) call NetMQ.Core.Patterns.Utils.FairQueueing.Recv(Msg) call NetMQ.Core.Patterns.Utils.FairQueueing.Recv(Msg) call NetMQ.Core.Patterns.Utils.FairQueueing.Recv(Msg) call NetMQ.Core.Patterns.Utils.FairQueueing.Recv(Msg) ref protected override protected override return call NetMQ.Core.Patterns.Utils.FairQueueing.HasIn() call NetMQ.Core.Patterns.Utils.FairQueueing.HasIn() call NetMQ.Core.Patterns.Utils.FairQueueing.HasIn() call NetMQ.Core.Patterns.Utils.FairQueueing.HasIn() call NetMQ.Core.Patterns.Utils.FairQueueing.HasIn()