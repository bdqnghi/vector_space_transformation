NetMQ.Core.Patterns.Utils System using System.Collections.Generic using System.Diagnostics using JetBrains.Annotations using class NetMQ.Core.Patterns.Utils.MultiTrie decl HashSet int decl MultiTrie int int public public return byte MultiTrie int bool private private if == decl_stmt bool = == if == = new < call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() return != decl_stmt byte = if < || >= + if == = = = else if == decl_stmt int = decl_stmt NetMQ.Core.Patterns.Utils.MultiTrie = = < - : - + = new = - = else if < = - + = call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() else = + - = call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() = if == if == = new = new ++ return + - else if - == - = new ++ return - + - public public return < < int MultiTrie decl MultiTrie int private private if != && call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() && == = if >= = + ref if == return if == = byte ++ if = = -- == return decl_stmt int = + - decl_stmt int = for = != ++ = + if != + if = > -- else if + < = + if + > = + > if == = = else if == == >= && < + decl_stmt NetMQ.Core.Patterns.Utils.MultiTrie = - != = = new = = else if > && > || < + - - + > decl_stmt NetMQ.Core.Patterns.Utils.MultiTrie = > || < + - >= <= + - - + < = - + = new - = return public public return bool byte MultiTrie int MultiTrie bool private private if == if != decl_stmt bool = call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() if == = return == decl_stmt byte = if == || < || >= + return decl_stmt NetMQ.Core.Patterns.Utils.MultiTrie = == : - if == return decl_stmt bool = call NetMQ.Core.Patterns.Utils.MultiTrie.RemoveHelper(Pipe,byte,int,int,MultiTrieDelegate,object) call NetMQ.Core.Patterns.Utils.MultiTrie.RemoveHelper(Pipe,byte,int,int,MultiTrieDelegate,object) call NetMQ.Core.Patterns.Utils.MultiTrie.RemoveHelper(Pipe,byte,int,int,MultiTrieDelegate,object) call NetMQ.Core.Patterns.Utils.MultiTrie.RemoveHelper(Pipe,byte,int,int,MultiTrieDelegate,object) call NetMQ.Core.Patterns.Utils.MultiTrie.RemoveHelper(Pipe,byte,int,int,MultiTrieDelegate,object) + - if > if == = = -- == else - = > -- if == decl_stmt int for = < ++ if != break < += = decl_stmt NetMQ.Core.Patterns.Utils.MultiTrie = = new else if == decl_stmt int for = < ++ if != break < += -= = call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() else if == + - decl_stmt int for = < ++ if - - != break < -= = call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() call decl MultiTrie.Resize() return MultiTrie int byte public public decl_stmt NetMQ.Core.Patterns.Utils.MultiTrie = decl_stmt int = while if != foreach in if == break if == break decl_stmt byte = if == if != break = ++ -- continue if < || >= + break if - == break = - ++ --