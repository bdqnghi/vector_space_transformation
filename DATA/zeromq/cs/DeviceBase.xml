NetMQ.Devices System using JetBrains.Annotations using class NetMQ.Devices.DeviceBase super super IDevice NetMQSocket INetMQPoller bool DeviceRunner NetMQSocket bool public public = if && ! call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() call NetMQ.INetMQPoller.Run() public public if ! = public public call DeviceRunner.Start() call DeviceRunner.Start() call DeviceRunner.Start() call DeviceRunner.Start() call DeviceRunner.Start() public public = if && if call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() call NetMQ.INetMQPoller.Stop() else call NetMQ.INetMQPoller.StopAsync() call NetMQ.INetMQPoller.StopAsync() call NetMQ.INetMQPoller.StopAsync() call NetMQ.INetMQPoller.StopAsync() call NetMQ.INetMQPoller.StopAsync() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call NetMQ.NetMQSocket.Close() call INetMQPoller.Dispose() call INetMQPoller.Dispose() call INetMQPoller.Dispose() call INetMQPoller.Dispose() call INetMQPoller.Dispose() = protected virtual protected virtual