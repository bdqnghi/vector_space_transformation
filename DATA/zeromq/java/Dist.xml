zmq java.util.ArrayList import java.util.Collections import java.util.List import class zmq.Dist int decl List boolean int int public public if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - ++ else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - ++ ++ int public public decl_stmt int = call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() if < return if >= return ++ public public = public public if call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() < call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() - -- if call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() < call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() - -- if call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() < call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() - -- call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() public public call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() ++ if ! - ++ public public = return boolean public public decl_stmt boolean = if ! = = return private private if == return for = < ++ if ! call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() -- public public return private private if ! call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() - -- call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() call decl List.indexOf() - -- - -- return if ! return public public for = < ++ if ! call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() return return