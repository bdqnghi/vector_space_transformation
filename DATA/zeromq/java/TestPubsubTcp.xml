zmq org.junit.Test import static static org.junit.Assert.assertThat import static static org.hamcrest.CoreMatchers.is import static static org.hamcrest.CoreMatchers.notNullValue import class zmq.TestPubsubTcp SocketBase SocketBase Ctx Msg boolean public public throws decl_stmt zmq.Ctx = decl_stmt zmq.SocketBase = decl_stmt boolean = decl_stmt zmq.SocketBase = call zmq.SocketBase.setSocketOpt(int,Object) call zmq.SocketBase.setSocketOpt(int,Object) call zmq.SocketBase.setSocketOpt(int,Object) call zmq.SocketBase.setSocketOpt(int,Object) call zmq.SocketBase.setSocketOpt(int,Object) = call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) new call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) new call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) call zmq.SocketBase.send(Msg,int) new decl_stmt zmq.Msg = call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() = call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.SocketBase.recv(int) call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size()