guide org.zeromq.ZContext import org.zeromq.ZLoop import org.zeromq.ZLoop.IZLoopHandler import org.zeromq.ZMQ import org.zeromq.ZMQ.PollItem import org.zeromq.ZMQ.Socket import org.zeromq.ZMsg import class guide.bstar decl IZLoopHandler long decl ZLoop decl ZLoop ZContext Object decl IZLoopHandler Socket State Socket decl ZLoop Object Object decl IZLoopHandler int Event ZLoop boolean private private decl_stmt boolean = if == if == = if != call Object.handle() call Object.handle() call Object.handle() call Object.handle() call Object.handle() else if == = if != call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() else if == assert > if >= = if != call Object.handle() call Object.handle() call Object.handle() call Object.handle() call Object.handle() else = else if == if == = if != call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() call decl IZLoopHandler.handle() else if == = else if == if == = else if == if == = else if == = else if == = else if == assert > if >= = else = if == && != call Object.handle() call Object.handle() call Object.handle() call Object.handle() call Object.handle() return private private = + * bstar public public decl_stmt guide.bstar = call bstar.statepub() call bstar.statepub() call bstar.statepub() call bstar.statepub() call bstar.statepub() call bstar.statepub() call bstar.statepub() call bstar.statepub() call bstar.statepub() call bstar.state() call bstar.state() call bstar.state() call bstar.state() call bstar.state() call bstar.state() call bstar.state() call bstar.state() call bstar.state() return bstar String public public decl_stmt guide.bstar = decl_stmt java.lang.String = if != = call guide.bstar.updatePeerExpiry() call guide.bstar.updatePeerExpiry() call guide.bstar.updatePeerExpiry() call guide.bstar.updatePeerExpiry() call guide.bstar.updatePeerExpiry() return call guide.bstar.execute() call guide.bstar.execute() call guide.bstar.execute() call guide.bstar.execute() call guide.bstar.execute() : - ZMsg bstar public public decl_stmt guide.bstar = = if call guide.bstar.execute() call guide.bstar.execute() call guide.bstar.execute() call guide.bstar.execute() call guide.bstar.execute() call bstar.voterFn() call bstar.voterFn() call bstar.voterFn() call bstar.voterFn() call bstar.voterFn() call bstar.voterFn() call bstar.voterFn() call bstar.voterFn() call bstar.voterFn() else decl_stmt org.zeromq.ZMsg = call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() return public public call ZLoop.destroy() call ZLoop.destroy() call ZLoop.destroy() call ZLoop.destroy() call ZLoop.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() public public return PollItem Socket public public decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) = = decl_stmt zmq.PollItem = new return call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) public public = = public public = = public public call org.zeromq.ZLoop.verbose(boolean) call org.zeromq.ZLoop.verbose(boolean) call org.zeromq.ZLoop.verbose(boolean) call org.zeromq.ZLoop.verbose(boolean) call org.zeromq.ZLoop.verbose(boolean) public public assert != return call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start()