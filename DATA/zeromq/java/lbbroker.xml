guide java.util.LinkedList import java.util.Queue import org.zeromq.ZMQ import org.zeromq.ZMQ.Context import org.zeromq.ZMQ.Poller import org.zeromq.ZMQ.Socket import class guide.lbbroker int int String Socket Context public public decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() + call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Context.term() call Context.term() call Context.term() call Context.term() call Context.term() String Socket String Context String public public decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() while ! decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() assert call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() + call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Context.term() call Context.term() call Context.term() call Context.term() call Context.term() String Socket int Poller String String Context decl Queue String String Socket public static public static decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) decl_stmt int for = < ++ new for = < ++ new decl_stmt java.util.Queue < = new < while ! decl_stmt zmq.Poller = new call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) if call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() > call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) if call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() < break if call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() assert call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() assert call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() if -- == break if call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() assert call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt java.lang.String = call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Context.term() call Context.term() call Context.term() call Context.term() call Context.term()