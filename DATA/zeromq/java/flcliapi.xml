guide org.zeromq.ZContext import org.zeromq.ZMQ import org.zeromq.ZMQ.PollItem import org.zeromq.ZMQ.Socket import org.zeromq.ZMsg import org.zeromq.ZThread import org.zeromq.ZThread.IAttachedRunnable import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import class guide.flcliapi Socket int ZContext int int public public call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() ZMsg public public decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) try catch String ZMsg public public decl_stmt org.zeromq.ZMsg = if != decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() return protected protected ZMsg private private if >= decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) = + private private if > return return - protected protected for : ZMsg String String String Server private private decl_stmt org.zeromq.ZMsg = decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() decl_stmt com.sun.security.ntlm.Server = new = + = + else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) assert == decl_stmt java.lang.String = ++ call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) = = = + if != call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() String ZMsg String Server private private decl_stmt org.zeromq.ZMsg = decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() decl_stmt com.sun.security.ntlm.Server = assert != if ! = = + = + decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() if == call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) = else call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() long long decl PollItem ZMsg Agent Server int public public decl_stmt sun.management.Agent = new decl_stmt zmq.PollItem = new new while ! decl_stmt long = + * if != && > = for : call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() decl_stmt long = call Server.tickless() call Server.tickless() call Server.tickless() call Server.tickless() call Server.tickless() if > = decl_stmt int = - if == - break if call Agent.controlMessage() call Agent.controlMessage() call Agent.controlMessage() call Agent.controlMessage() call Agent.controlMessage() if call Agent.routerMessage() call Agent.routerMessage() call Agent.routerMessage() call Agent.routerMessage() call Agent.routerMessage() if != if >= call Agent.pipe() call Agent.pipe() call Agent.pipe() call Agent.pipe() call Agent.pipe() call Agent.pipe() call Agent.pipe() call Agent.pipe() call Agent.pipe() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() = else while ! call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() decl_stmt com.sun.security.ntlm.Server = call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() if >= call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() call Agent.actives() = else decl_stmt org.zeromq.ZMsg = call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call Agent.request() call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) break for : call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Agent.servers() call Server.ping() call Server.ping() call Server.ping() call Server.ping() call Server.ping() call Agent.destroy() call Agent.destroy() call Agent.destroy() call Agent.destroy() call Agent.destroy()