guide org.zeromq.ZContext import org.zeromq.ZFrame import org.zeromq.ZMsg import org.zeromq.ZLoop import org.zeromq.ZMQ import org.zeromq.ZMQ.PollItem import org.zeromq.ZMQ.Socket import org.zeromq.ZThread import java.util.Arrays import java.util.LinkedList import java.util.Queue import class guide.lbbroker3 int decl byte int BackendHandler FrontendHandler String Socket ZContext public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() + call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() ZMsg ZFrame Socket ZContext public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt org.zeromq.ZFrame = new call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) while decl_stmt org.zeromq.ZMsg = if == break call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() ZMsg LBBroker public public decl_stmt LBBroker = decl_stmt org.zeromq.ZMsg = if != call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) if call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() == new return ZMsg PollItem ZFrame ZFrame LBBroker public public decl_stmt LBBroker = decl_stmt org.zeromq.ZMsg = if != decl_stmt org.zeromq.ZFrame = call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() if call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() call LBBroker.workers() == decl_stmt zmq.PollItem = new decl_stmt org.zeromq.ZFrame = call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() if call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() else call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) return int PollItem ZLoop ZContext LBBroker public static public static decl_stmt org.zeromq.ZContext = new decl_stmt LBBroker = new = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call LBBroker.frontend() call LBBroker.frontend() call LBBroker.frontend() call LBBroker.frontend() call LBBroker.frontend() call LBBroker.frontend() call LBBroker.frontend() call LBBroker.frontend() call LBBroker.frontend() call LBBroker.backend() call LBBroker.backend() call LBBroker.backend() call LBBroker.backend() call LBBroker.backend() call LBBroker.backend() call LBBroker.backend() call LBBroker.backend() call LBBroker.backend() decl_stmt int for = < ++ new for = < ++ new = new < decl_stmt org.zeromq.ZLoop = new decl_stmt zmq.PollItem = new call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy()