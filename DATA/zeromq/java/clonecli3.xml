guide java.nio.ByteBuffer import java.util.HashMap import java.util.Map import java.util.Random import java.util.concurrent.atomic.AtomicLong import org.zeromq.ZContext import org.zeromq.ZMQ import org.zeromq.ZMQ.Poller import org.zeromq.ZMQ.Socket import class guide.clonecli3 decl Map int kvsimple kvsimple long long Random ZContext Socket ByteBuffer Socket int int Socket Poller public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt long = call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() while decl_stmt guide.kvsimple = if == break = call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() if call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() + call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() break + call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() decl_stmt zmq.Poller = new call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) decl_stmt java.util.Random = new decl_stmt long = + while decl_stmt int = call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() - if == - break if call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() decl_stmt guide.kvsimple = if == break if call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() > = call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() call guide.kvsimple.getSequence() + call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() call guide.kvsimple.getKey() if >= decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt ByteBuffer = call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() decl_stmt guide.kvsimple = new + call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) = + call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() public static public static new