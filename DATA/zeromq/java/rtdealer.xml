guide org.zeromq.ZMQ import org.zeromq.ZMQ.Context import org.zeromq.ZMQ.Socket import java.util.Random import class guide.rtdealer Random int String int Socket boolean Context public public decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt int = while call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt boolean = call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if break ++ try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Context.term() call Context.term() call Context.term() call Context.term() call Context.term() int Thread Socket Context long String public static public static throws decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) for = < ++ decl_stmt java.lang.Thread = new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() decl_stmt long = + decl_stmt int = while decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() if < call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() else call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() if ++ == break call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Context.term() call Context.term() call Context.term() call Context.term() call Context.term()