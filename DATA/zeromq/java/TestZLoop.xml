org.zeromq org.junit.After import org.junit.Assert import org.zeromq.ZMQ.Poller import org.zeromq.ZMQ.Socket import org.zeromq.ZMQ.PollItem import org.junit.Test import org.junit.Before import class org.zeromq.TestZLoop String Socket ZContext Socket public public = new assert != = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) assert != call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) assert != call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) = public public call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() decl ZLoop decl IZLoopHandler decl ZLoop ZLoop int public public decl_stmt int = decl_stmt org.zeromq.ZLoop = new assert != decl_stmt org.zeromq.IZLoopHandler = new public public return decl_stmt org.zeromq.IZLoopHandler = new public public = return - call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) decl_stmt zmq.PollItem = new = call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) public public return public public = return - long long decl ZLoop ZLoop int decl IZLoopHandler decl IZLoopHandler decl ZLoop public public decl_stmt int = decl_stmt org.zeromq.ZLoop = new assert != decl_stmt org.zeromq.IZLoopHandler = new public public decl_stmt long final final = decl_stmt org.zeromq.IZLoopHandler = new public public decl_stmt long final final = assert >= + return call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) return decl_stmt org.zeromq.IZLoopHandler = new public public = return - call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) decl_stmt zmq.PollItem = new = call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) decl ZLoop long decl IZLoopHandler public public decl_stmt long final final = decl_stmt org.zeromq.IZLoopHandler = new public public decl_stmt long final final = assert >= + return return long public public decl_stmt long final final = assert >= + return public public = return - decl ZLoop decl IZLoopHandler decl ZLoop long int decl IZLoopHandler decl ZLoop ZLoop = public = public decl_stmt int = decl_stmt org.zeromq.ZLoop = new assert != decl_stmt org.zeromq.IZLoopHandler = new public public return decl_stmt org.zeromq.IZLoopHandler = new public public decl_stmt long final final = decl_stmt org.zeromq.IZLoopHandler = new public public decl_stmt long final final = >= + = return - call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) return call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) decl_stmt zmq.PollItem = new = call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) public public return decl ZLoop long decl IZLoopHandler public public decl_stmt long final final = decl_stmt org.zeromq.IZLoopHandler = new public public decl_stmt long final final = >= + = return - return long public public decl_stmt long final final = >= + = return - decl IZLoopHandler decl ZLoop int decl IZLoopHandler ZLoop decl ZLoop = public = public decl_stmt int = decl_stmt org.zeromq.ZLoop = new assert != decl_stmt org.zeromq.IZLoopHandler = new public public return decl_stmt org.zeromq.IZLoopHandler = new public public decl_stmt org.zeromq.IZLoopHandler = new public public = return - call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) return call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) decl_stmt zmq.PollItem = new = call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) call org.zeromq.ZLoop.removePoller(PollItem) public public return decl ZLoop public public decl_stmt org.zeromq.IZLoopHandler = new public public = return - return public public = return -