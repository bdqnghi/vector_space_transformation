guide org.zeromq.ZContext import org.zeromq.ZFrame import org.zeromq.ZMQ import org.zeromq.ZMQ.PollItem import org.zeromq.ZMQ.Socket import org.zeromq.ZMsg import org.zeromq.ZThread import org.zeromq.ZThread.IAttachedRunnable import org.zeromq.ZThread.IDetachedRunnable import java.io.BufferedWriter import java.io.DataInputStream import java.io.DataOutputStream import java.io.File import java.io.FileInputStream import java.io.FileNotFoundException import java.io.FileOutputStream import java.io.FileWriter import java.io.IOException import java.io.RandomAccessFile import java.util.UUID import class guide.titanic String static static return String private static private static decl_stmt java.lang.String = return String private static private static decl_stmt java.lang.String = return String ZMsg mdwrkapi String DataOutputStream ZMsg public public decl_stmt guide.mdwrkapi = new decl_stmt org.zeromq.ZMsg = while decl_stmt org.zeromq.ZMsg = call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) if == break new decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt DataOutputStream = try = new new catch finally try if != call DataOutputStream.close() call DataOutputStream.close() call DataOutputStream.close() call DataOutputStream.close() call DataOutputStream.close() catch call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() String String ZMsg mdwrkapi DataInputStream String ZMsg public public decl_stmt guide.mdwrkapi = new decl_stmt org.zeromq.ZMsg = while decl_stmt org.zeromq.ZMsg = call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) if == break decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() decl_stmt java.lang.String = decl_stmt java.lang.String = if new decl_stmt java.io.DataInputStream = try = new new = call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) catch finally try if != call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() catch else = new if new call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) else call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call org.zeromq.ZMsg.push(ZFrame) call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() String String String ZMsg mdwrkapi ZMsg public public decl_stmt guide.mdwrkapi = new decl_stmt org.zeromq.ZMsg = while decl_stmt org.zeromq.ZMsg = call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) call guide.mdwrkapi.receive(ZMsg) if == break decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() decl_stmt java.lang.String = decl_stmt java.lang.String = new new call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() call guide.mdwrkapi.destroy() BufferedWriter boolean ZContext PollItem Socket RandomAccessFile int ZMsg decl byte String public static public static decl_stmt boolean = > && decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = new new new while decl_stmt zmq.PollItem = new decl_stmt int = if == - break if new decl_stmt org.zeromq.ZMsg = if == break decl_stmt java.lang.String = call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() decl_stmt BufferedWriter = try = new new + call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() + + catch break finally try if != call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() catch call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() decl_stmt byte = new decl_stmt java.io.RandomAccessFile = try = new + while call java.io.RandomAccessFile.read(byte,int,int) call java.io.RandomAccessFile.read(byte,int,int) call java.io.RandomAccessFile.read(byte,int,int) call java.io.RandomAccessFile.read(byte,int,int) call java.io.RandomAccessFile.read(byte,int,int) > if == if new - if new - call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() - call java.io.RandomAccessFile.writeBytes(String) call java.io.RandomAccessFile.writeBytes(String) call java.io.RandomAccessFile.writeBytes(String) call java.io.RandomAccessFile.writeBytes(String) call java.io.RandomAccessFile.writeBytes(String) call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() call RandomAccessFile.getFilePointer() + if call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() == call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() call java.io.RandomAccessFile.readByte() if break catch catch finally if != try call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() catch ZMsg ZFrame DataOutputStream ZMsg boolean String mdcliapi boolean DataInputStream ZMsg String ZMsg static static decl_stmt java.lang.String = if ! new return decl_stmt java.io.DataInputStream = decl_stmt org.zeromq.ZMsg try = new new = catch return finally try if != call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() catch decl_stmt org.zeromq.ZFrame = call org.zeromq.ZMsg.pop() call org.zeromq.ZMsg.pop() call org.zeromq.ZMsg.pop() call org.zeromq.ZMsg.pop() call org.zeromq.ZMsg.pop() decl_stmt java.lang.String = call org.zeromq.ZFrame.toString() call org.zeromq.ZFrame.toString() call org.zeromq.ZFrame.toString() call org.zeromq.ZFrame.toString() call org.zeromq.ZFrame.toString() decl_stmt guide.mdcliapi = new call guide.mdcliapi.setTimeout(long) call guide.mdcliapi.setTimeout(long) call guide.mdcliapi.setTimeout(long) call guide.mdcliapi.setTimeout(long) call guide.mdcliapi.setTimeout(long) call guide.mdcliapi.setRetries(int) call guide.mdcliapi.setRetries(int) call guide.mdcliapi.setRetries(int) call guide.mdcliapi.setRetries(int) call guide.mdcliapi.setRetries(int) decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) decl_stmt org.zeromq.ZMsg = call mdcliapi.send() call mdcliapi.send() call mdcliapi.send() call mdcliapi.send() call mdcliapi.send() decl_stmt boolean = != && call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() decl_stmt boolean = if decl_stmt org.zeromq.ZMsg = call mdcliapi.send() call mdcliapi.send() call mdcliapi.send() call mdcliapi.send() call mdcliapi.send() if != = decl_stmt DataOutputStream = try = new new catch return finally try if != call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() catch = call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() else call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call guide.mdcliapi.destroy() call guide.mdcliapi.destroy() call guide.mdcliapi.destroy() call guide.mdcliapi.destroy() call guide.mdcliapi.destroy() return