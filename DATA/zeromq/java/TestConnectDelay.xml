zmq org.junit.Test import static static org.junit.Assert.assertEquals import class zmq.TestConnectDelay SocketBase int int SocketBase Ctx boolean Msg int String int public public throws decl_stmt zmq.Ctx = assert != decl_stmt zmq.SocketBase = assert != decl_stmt int = decl_stmt boolean = assert decl_stmt zmq.SocketBase = assert != = = assert = assert for = < ++ decl_stmt java.lang.String = += + decl_stmt int = assert >= decl_stmt int = decl_stmt int = for = < ++ decl_stmt zmq.Msg = if == break ++ SocketBase int int SocketBase Ctx boolean Msg int String int public public throws decl_stmt zmq.Ctx = decl_stmt zmq.SocketBase = assert != decl_stmt boolean = assert decl_stmt int = assert decl_stmt zmq.SocketBase = assert != = = = assert = assert for = < ++ decl_stmt java.lang.String = += + decl_stmt int = assert >= decl_stmt int = decl_stmt int = for = < ++ decl_stmt zmq.Msg = if == break ++ SocketBase int Ctx boolean Msg int SocketBase public public throws decl_stmt zmq.Ctx = decl_stmt zmq.SocketBase = assert != decl_stmt zmq.SocketBase = assert != decl_stmt int = = = decl_stmt boolean = assert = assert decl_stmt int = decl_stmt zmq.Msg = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() = = - = = = assert = = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() =