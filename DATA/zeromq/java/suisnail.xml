guide org.zeromq.ZContext import org.zeromq.ZMQ import org.zeromq.ZMQ.Socket import org.zeromq.ZThread import org.zeromq.ZThread.IAttachedRunnable import java.util.Random import class guide.suisnail Random long Socket String long public public decl_stmt java.net.Socket = call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) while decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt long = if - > break try + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) catch break Socket String String public public decl_stmt java.net.Socket = call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) while decl_stmt java.lang.String = call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() decl_stmt java.lang.String = if != break try catch ZContext Socket Socket public static public static throws decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = new decl_stmt java.net.Socket = new call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy()