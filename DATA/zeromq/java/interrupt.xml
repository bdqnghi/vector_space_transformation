guide org.zeromq.ZMQ import org.zeromq.ZMQException import class guide.interrupt decl Context Thread decl ZMQ public static public static decl_stmt sun.tools.tree.Context final final final final final = decl_stmt java.lang.Thread final final = new public public decl_stmt java.net.Socket = call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call Thread.bind() call Thread.bind() call Thread.bind() call Thread.bind() call Thread.bind() while ! try call Thread.recv() call Thread.recv() call Thread.recv() call Thread.recv() call Thread.recv() catch if == break call Thread.close() call Thread.close() call Thread.close() call Thread.close() call Thread.close() new public public call decl ZMQ.term() call decl ZMQ.term() call decl ZMQ.term() call decl ZMQ.term() call decl ZMQ.term() try call decl Context.interrupt() call decl Context.interrupt() call decl Context.interrupt() call decl Context.interrupt() call decl Context.interrupt() call decl Context.join() call decl Context.join() call decl Context.join() call decl Context.join() call decl Context.join() catch call decl Context.start() call decl Context.start() call decl Context.start() call decl Context.start() call decl Context.start() decl ZMQ public public decl_stmt java.net.Socket = call decl ZMQ.bind() call decl ZMQ.bind() call decl ZMQ.bind() call decl ZMQ.bind() call decl ZMQ.bind() while ! try call decl ZMQ.recv() call decl ZMQ.recv() call decl ZMQ.recv() call decl ZMQ.recv() call decl ZMQ.recv() catch if == break call decl ZMQ.close() call decl ZMQ.close() call decl ZMQ.close() call decl ZMQ.close() call decl ZMQ.close() public public try catch