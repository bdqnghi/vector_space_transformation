zmq java.io.IOException import java.io.InputStream import java.io.OutputStream import java.net.Socket import java.nio.ByteBuffer import java.nio.channels.WritableByteChannel import java.util.ArrayList import java.util.List import java.util.concurrent.atomic.AtomicInteger import static static org.junit.Assert.assertThat import static static org.hamcrest.CoreMatchers.is import class zmq.Helper AtomicInteger DummyCtx public public return public public throws public public return int public public throws decl_stmt int = if > return return protected protected protected protected public public + return Msg public public + if == return decl_stmt zmq.Msg = return decl byte Msg long int public static public static decl_stmt byte = decl_stmt int = assert == = decl_stmt zmq.Msg = assert call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() == decl_stmt long = assert == = assert == = assert == = new assert == = new assert == = assert == = = assert == = int int int decl byte int decl byte InputStream decl byte OutputStream public static public static throws decl_stmt byte = decl_stmt byte = decl_stmt byte = new decl_stmt int decl_stmt int decl_stmt java.io.InputStream = decl_stmt java.io.OutputStream = call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) + + + decl_stmt int = decl_stmt int = while > = call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) += -= + + + + + try catch = new call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) + + + new