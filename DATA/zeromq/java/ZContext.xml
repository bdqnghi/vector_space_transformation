org.zeromq java.io.Closeable import java.util.List import java.util.concurrent.CopyOnWriteArrayList import org.zeromq.ZMQ.Context import org.zeromq.ZMQ.Socket import zmq.ZError import class org.zeromq.ZContext super super implements int int int Context boolean decl List public public for : try catch call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() if && != call Context.term() call Context.term() call Context.term() call Context.term() call Context.term() = Socket public public decl_stmt java.net.Socket = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public if == return if call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() try catch ZContext public static public static decl_stmt org.zeromq.ZContext = new call org.zeromq.ZContext.setContext(Context) call org.zeromq.ZContext.setContext(Context) call org.zeromq.ZContext.setContext(Context) call org.zeromq.ZContext.setContext(Context) call org.zeromq.ZContext.setContext(Context) call ZContext.setMain() call ZContext.setMain() call ZContext.setMain() call ZContext.setMain() call ZContext.setMain() return public public return public public = public public return public public = public public return public public = public public return public public = Context public public decl_stmt sun.tools.tree.Context = if == synchronized = if == = = return public public = public < public < return public public