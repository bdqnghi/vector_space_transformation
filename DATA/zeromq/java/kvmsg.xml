guide org.zeromq.ZContext import org.zeromq.ZMQ import org.zeromq.ZMQ.Socket import java.nio.ByteBuffer import java.util.HashMap import java.util.Map import java.util.Map.Entry import java.util.Properties import java.util.UUID import class guide.kvmsg int int int int decl byte int int int String Properties int decl boolean ByteBuffer String private private decl_stmt ByteBuffer = for < : call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() decl_stmt java.lang.String = + + + call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) = = call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() decl byte decl String private private decl_stmt byte = = call Properties.clear() call Properties.clear() call Properties.clear() call Properties.clear() call Properties.clear() if == return + + + new for : new decl_stmt java.lang.String = call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() public public kvmsg int boolean public static public static assert != decl_stmt guide.kvmsg = new decl_stmt int for = < ++ = if = == call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() break decl_stmt boolean = < - : if != call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() break call guide.kvmsg.decodeProps() call guide.kvmsg.decodeProps() call guide.kvmsg.decodeProps() call guide.kvmsg.decodeProps() call guide.kvmsg.decodeProps() return decl byte int public public assert != decl_stmt int for = < ++ decl_stmt byte = if = < - : kvmsg int public public decl_stmt guide.kvmsg = new decl_stmt int for = < ++ if = new = = call kvmsg.props() call kvmsg.props() call kvmsg.props() call kvmsg.props() call kvmsg.props() call kvmsg.props() call kvmsg.props() call kvmsg.props() call kvmsg.props() return decl byte int public public if if == decl_stmt int = if > = decl_stmt byte = new = new return else return decl byte public public decl_stmt byte = new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() = = public public ByteBuffer public public if assert == decl_stmt ByteBuffer = return call ByteBuffer.getLong() call ByteBuffer.getLong() call ByteBuffer.getLong() call ByteBuffer.getLong() call ByteBuffer.getLong() else return ByteBuffer public public decl_stmt ByteBuffer = call ByteBuffer.putLong() call ByteBuffer.putLong() call ByteBuffer.putLong() call ByteBuffer.putLong() call ByteBuffer.putLong() = = call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() public public if return else return decl byte public public decl_stmt byte = new = = public public public public if return else return public public if return else return decl byte public public decl_stmt byte = = = public public return call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) Object String public public decl_stmt java.lang.String = decl_stmt java.lang.Object = call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() if != -= call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() else += + += call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() public public < if > if && else decl byte int public public decl_stmt int = decl_stmt byte = for : call java.util.Properties.stringPropertyNames() call java.util.Properties.stringPropertyNames() call java.util.Properties.stringPropertyNames() call java.util.Properties.stringPropertyNames() call java.util.Properties.stringPropertyNames() call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) for = < ++ Socket kvmsg ZContext decl Map Socket public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt java.util.Map < = new < decl_stmt guide.kvmsg = new call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) if call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) = call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) if call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() assert call guide.kvmsg.getKey() call guide.kvmsg.getKey() call guide.kvmsg.getKey() call guide.kvmsg.getKey() call guide.kvmsg.getKey() call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) = new call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setUUID() call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) assert call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) if call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() = call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) call guide.kvmsg.recv(Socket) if call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() call guide.kvmsg.dump() assert call kvmsg.key() call kvmsg.key() call kvmsg.key() call kvmsg.key() call kvmsg.key() call kvmsg.key() call kvmsg.key() call kvmsg.key() call kvmsg.key() assert call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy()