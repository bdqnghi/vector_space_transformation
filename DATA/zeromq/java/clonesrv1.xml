guide java.nio.ByteBuffer import java.util.Random import java.util.concurrent.atomic.AtomicLong import org.zeromq.ZMQ import org.zeromq.ZMQ.Context import org.zeromq.ZMQ.Socket import class guide.clonesrv1 AtomicLong int Socket ByteBuffer long Random Context kvsimple int public public decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) try catch decl_stmt java.util.Random = new while decl_stmt long = call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt ByteBuffer = call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() call ByteBuffer.asIntBuffer() decl_stmt guide.kvsimple = new + call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) call guide.kvsimple.send(Socket) + public static public static new