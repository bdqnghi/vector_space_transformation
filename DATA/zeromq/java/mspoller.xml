guide org.zeromq.ZMQ import class guide.mspoller decl ZMQ decl Socket decl ZMQ decl ZMQ decl Context public static public static decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl Context.connect() call decl Context.connect() call decl Context.connect() call decl Context.connect() call decl Context.connect() decl_stmt java.net.Socket = call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.socket() call decl ZMQ.connect() call decl ZMQ.connect() call decl ZMQ.connect() call decl ZMQ.connect() call decl ZMQ.connect() call decl ZMQ.subscribe() call decl ZMQ.subscribe() call decl ZMQ.subscribe() call decl ZMQ.subscribe() call decl ZMQ.subscribe() decl_stmt zmq.Poller = new call decl Socket.register() call decl Socket.register() call decl Socket.register() call decl Socket.register() call decl Socket.register() call decl Socket.register() call decl Socket.register() call decl Socket.register() call decl Socket.register() call decl Socket.register() while ! decl_stmt byte call decl Socket.poll() call decl Socket.poll() call decl Socket.poll() call decl Socket.poll() call decl Socket.poll() if call decl Socket.pollin() call decl Socket.pollin() call decl Socket.pollin() call decl Socket.pollin() call decl Socket.pollin() = call decl Context.recv() call decl Context.recv() call decl Context.recv() call decl Context.recv() call decl Context.recv() if call decl Socket.pollin() call decl Socket.pollin() call decl Socket.pollin() call decl Socket.pollin() call decl Socket.pollin() = call decl ZMQ.recv() call decl ZMQ.recv() call decl ZMQ.recv() call decl ZMQ.recv() call decl ZMQ.recv() call decl Context.close() call decl Context.close() call decl Context.close() call decl Context.close() call decl Context.close() call decl ZMQ.term() call decl ZMQ.term() call decl ZMQ.term() call decl ZMQ.term() call decl ZMQ.term()