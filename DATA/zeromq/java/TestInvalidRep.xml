zmq org.junit.Test import static static org.junit.Assert.assertThat import static static org.hamcrest.CoreMatchers.is import static static org.hamcrest.CoreMatchers.notNullValue import class zmq.TestInvalidRep SocketBase Msg SocketBase Msg int Msg Ctx int boolean int public public decl_stmt zmq.Ctx = decl_stmt zmq.SocketBase = decl_stmt zmq.SocketBase = decl_stmt int = decl_stmt int decl_stmt boolean = = = decl_stmt zmq.Msg decl_stmt zmq.Msg decl_stmt zmq.Msg = decl_stmt int = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() + call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() > = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() byte = = = = = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() byte