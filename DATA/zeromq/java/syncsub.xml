guide org.zeromq.ZMQ import org.zeromq.ZMQ.Context import org.zeromq.ZMQ.Socket import class guide.syncsub Socket int Socket Context String public static public static decl_stmt sun.tools.tree.Context = decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() decl_stmt java.net.Socket = call Context.socket() call Context.socket() call Context.socket() call Context.socket() call Context.socket() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() decl_stmt int = while decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) break ++ + + call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Context.term() call Context.term() call Context.term() call Context.term() call Context.term()