guide org.zeromq.ZContext import org.zeromq.ZMQ import org.zeromq.ZMQ.Poller import org.zeromq.ZMQ.Socket import java.nio.ByteBuffer import java.util.HashMap import java.util.Map import java.util.Random import class guide.clonecli5 String Socket kvmsg long long Random ZContext Socket Socket int Poller decl Map public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call Socket.subscribe() call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt java.util.Map < = new < call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.sendMore() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() decl_stmt long = while decl_stmt guide.kvmsg = if == break = call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() if call guide.kvmsg.getKey() call guide.kvmsg.getKey() call guide.kvmsg.getKey() call guide.kvmsg.getKey() call guide.kvmsg.getKey() + call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() break + call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) decl_stmt zmq.Poller = new call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) decl_stmt java.util.Random = new decl_stmt long = + while decl_stmt int = call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() - if == - break if call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() decl_stmt guide.kvmsg = if == break if call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() > = call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() call guide.kvmsg.getSequence() + call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) else call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() if >= decl_stmt guide.kvmsg = new call guide.kvmsg.fmtKey(String,Object) call guide.kvmsg.fmtKey(String,Object) call guide.kvmsg.fmtKey(String,Object) call guide.kvmsg.fmtKey(String,Object) call guide.kvmsg.fmtKey(String,Object) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call guide.kvmsg.fmtBody(String,Object) call guide.kvmsg.fmtBody(String,Object) call guide.kvmsg.fmtBody(String,Object) call guide.kvmsg.fmtBody(String,Object) call guide.kvmsg.fmtBody(String,Object) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() = + call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() public static public static new