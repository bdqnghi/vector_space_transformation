zmq java.util.concurrent.atomic.AtomicInteger import class decl YQueue AtomicInteger int int int public public final final call decl YQueue.push() call decl YQueue.push() call decl YQueue.push() call decl YQueue.push() call decl YQueue.push() if ! = call decl YQueue.backPos() call decl YQueue.backPos() call decl YQueue.backPos() call decl YQueue.backPos() call decl YQueue.backPos() public public if == call decl YQueue.backPos() call decl YQueue.backPos() call decl YQueue.backPos() call decl YQueue.backPos() call decl YQueue.backPos() return call decl YQueue.unpush() call decl YQueue.unpush() call decl YQueue.unpush() call decl YQueue.unpush() call decl YQueue.unpush() return call decl YQueue.back() call decl YQueue.back() call decl YQueue.back() call decl YQueue.back() call decl YQueue.back() public public if == return if ! call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) = return = return int public public decl_stmt int = call decl YQueue.frontPos() call decl YQueue.frontPos() call decl YQueue.frontPos() call decl YQueue.frontPos() call decl YQueue.frontPos() if != return if call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) - else = call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() if == || == - return return public public if ! return return call decl YQueue.pop() call decl YQueue.pop() call decl YQueue.pop() call decl YQueue.pop() call decl YQueue.pop() boolean public public decl_stmt boolean = assert return call decl YQueue.front() call decl YQueue.front() call decl YQueue.front() call decl YQueue.front() call decl YQueue.front()