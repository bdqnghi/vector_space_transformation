zmq java.io.IOException import java.net.ConnectException import java.net.SocketAddress import java.net.SocketException import java.net.SocketTimeoutException import java.nio.channels.SocketChannel import class zmq.TcpConnecter super super extends super implements SessionBase IOObject SocketChannel Address boolean int boolean Address boolean int SocketBase public public assert ! assert ! assert == protected protected call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) if else protected protected if call zmq.IOObject.cancelTimer(int) call zmq.IOObject.cancelTimer(int) call zmq.IOObject.cancelTimer(int) call zmq.IOObject.cancelTimer(int) call zmq.IOObject.cancelTimer(int) = if call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) = if != public public public public public public throw new StreamEngine SocketChannel boolean public public decl_stmt boolean = decl_stmt java.nio.channels.SocketChannel = try = catch = catch = catch = catch throw new call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) = if return = try catch throw new decl_stmt zmq.StreamEngine = try = new call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() catch call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() - return call zmq.SocketBase.eventConnected(String,SelectableChannel) call zmq.SocketBase.eventConnected(String,SelectableChannel) call zmq.SocketBase.eventConnected(String,SelectableChannel) call zmq.SocketBase.eventConnected(String,SelectableChannel) call zmq.SocketBase.eventConnected(String,SelectableChannel) call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() public public = boolean private private try decl_stmt boolean = if call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) = call zmq.IOObject.connectEvent() call zmq.IOObject.connectEvent() call zmq.IOObject.connectEvent() call zmq.IOObject.connectEvent() call zmq.IOObject.connectEvent() else call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) = call zmq.IOObject.setPollConnect(SelectableChannel) call zmq.IOObject.setPollConnect(SelectableChannel) call zmq.IOObject.setPollConnect(SelectableChannel) call zmq.IOObject.setPollConnect(SelectableChannel) call zmq.IOObject.setPollConnect(SelectableChannel) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.SocketBase.eventConnectDelayed(String,int) call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() - catch if != int private private decl_stmt int = call zmq.IOObject.addTimer(long,int) call zmq.IOObject.addTimer(long,int) call zmq.IOObject.addTimer(long,int) call zmq.IOObject.addTimer(long,int) call zmq.IOObject.addTimer(long,int) try call zmq.Address.resolve() call zmq.Address.resolve() call zmq.Address.resolve() call zmq.Address.resolve() call zmq.Address.resolve() catch call zmq.SocketBase.eventConnectRetried(String,int) call zmq.SocketBase.eventConnectRetried(String,int) call zmq.SocketBase.eventConnectRetried(String,int) call zmq.SocketBase.eventConnectRetried(String,int) call zmq.SocketBase.eventConnectRetried(String,int) call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() = int private private decl_stmt int = + if > && > = * if >= = return decl Address decl IZAddress SocketAddress private private throws assert == = if == throw new decl_stmt zmq.IZAddress = call Address.resolved() call Address.resolved() call Address.resolved() call Address.resolved() call Address.resolved() if == throw new decl_stmt SocketAddress = call decl Address.address() call decl Address.address() call decl Address.address() call decl Address.address() call decl Address.address() if == throw new decl_stmt boolean = try = call SocketChannel.connect() call SocketChannel.connect() call SocketChannel.connect() call SocketChannel.connect() call SocketChannel.connect() catch throw new return boolean SocketChannel private private throws decl_stmt boolean = call SocketChannel.finishConnect() call SocketChannel.finishConnect() call SocketChannel.finishConnect() call SocketChannel.finishConnect() call SocketChannel.finishConnect() assert decl_stmt java.nio.channels.SocketChannel = return private private assert != try call SocketChannel.close() call SocketChannel.close() call SocketChannel.close() call SocketChannel.close() call SocketChannel.close() call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() catch call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() call zmq.Address.toString() = public public return + + +