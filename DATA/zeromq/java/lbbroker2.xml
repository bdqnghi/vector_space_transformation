guide org.zeromq.ZContext import org.zeromq.ZFrame import org.zeromq.ZMQ import org.zeromq.ZMQ.Poller import org.zeromq.ZMQ.Socket import org.zeromq.ZMsg import org.zeromq.ZThread import java.util.Arrays import java.util.LinkedList import java.util.Queue import class guide.lbbroker2 int decl byte int String Socket ZContext public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() + call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() ZMsg ZFrame Socket ZContext public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) decl_stmt org.zeromq.ZFrame = new call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) while decl_stmt org.zeromq.ZMsg = if == break call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.getLast() call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() Socket int Poller ZFrame ZMsg ZContext decl Queue ZFrame Socket public static public static decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) decl_stmt int for = < ++ new for = < ++ new decl_stmt java.util.Queue < = new < while ! decl_stmt zmq.Poller = new call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) if call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() > call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) call zmq.Poller.register(SelectableChannel,int,boolean) if call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() call Poller.poll() < break if call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() decl_stmt org.zeromq.ZMsg = if == break decl_stmt org.zeromq.ZFrame = call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call org.zeromq.ZMsg.unwrap() call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() decl_stmt org.zeromq.ZFrame = call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() call org.zeromq.ZMsg.getFirst() if call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call org.zeromq.ZFrame.getData() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() else call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) if call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() call Poller.pollin() decl_stmt org.zeromq.ZMsg = if != call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call org.zeromq.ZMsg.wrap(ZFrame) call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy()