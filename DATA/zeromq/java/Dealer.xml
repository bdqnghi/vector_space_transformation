zmq class zmq.Dealer super super extends boolean FQ Msg LB protected protected assert != call zmq.FQ.attach(Pipe) call zmq.FQ.attach(Pipe) call zmq.FQ.attach(Pipe) call zmq.FQ.attach(Pipe) call zmq.FQ.attach(Pipe) call zmq.LB.attach(Pipe) call zmq.LB.attach(Pipe) call zmq.LB.attach(Pipe) call zmq.LB.attach(Pipe) call zmq.LB.attach(Pipe) protected protected return call LB.send() call LB.send() call LB.send() call LB.send() call LB.send() protected protected return Msg private private decl_stmt zmq.Msg = if = = = return while = call zmq.FQ.recv(ValueReference) call zmq.FQ.recv(ValueReference) call zmq.FQ.recv(ValueReference) call zmq.FQ.recv(ValueReference) call zmq.FQ.recv(ValueReference) if == return if call Msg.flags() call Msg.flags() call Msg.flags() call Msg.flags() call Msg.flags() & == break return protected protected if return = if == return = return protected protected return call zmq.LB.hasOut() call zmq.LB.hasOut() call zmq.LB.hasOut() call zmq.LB.hasOut() call zmq.LB.hasOut() protected protected call zmq.FQ.activated(Pipe) call zmq.FQ.activated(Pipe) call zmq.FQ.activated(Pipe) call zmq.FQ.activated(Pipe) call zmq.FQ.activated(Pipe) protected protected call zmq.LB.activated(Pipe) call zmq.LB.activated(Pipe) call zmq.LB.activated(Pipe) call zmq.LB.activated(Pipe) call zmq.LB.activated(Pipe) protected protected call FQ.terminated() call FQ.terminated() call FQ.terminated() call FQ.terminated() call FQ.terminated() call zmq.LB.terminated(Pipe) call zmq.LB.terminated(Pipe) call zmq.LB.terminated(Pipe) call zmq.LB.terminated(Pipe) call zmq.LB.terminated(Pipe)