zmq java.nio.ByteBuffer import java.nio.ByteOrder import class zmq.Msg ByteBuffer decl byte int int int int int Type int int int public public return & == public public return == public public return public public return public public return & > public public |= public public = = public public if == = new call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() return public public return call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() public public return public public = & ~ public public return ++ public public return call ByteBuffer.get() call ByteBuffer.get() call ByteBuffer.get() call ByteBuffer.get() call ByteBuffer.get() public public return ++ public public call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() return public public return ByteBuffer public public if == return decl_stmt ByteBuffer = call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() += call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() return ByteBuffer public public decl_stmt ByteBuffer = call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() += call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() return int ByteBuffer public public decl_stmt int = - if == decl_stmt ByteBuffer = call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() call ByteBuffer.put() else return ByteBuffer int public public decl_stmt ByteBuffer = call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.duplicate() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() decl_stmt int = call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() = return public public return