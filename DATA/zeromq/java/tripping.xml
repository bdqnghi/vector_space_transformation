guide org.zeromq.ZContext import org.zeromq.ZFrame import org.zeromq.ZMQ import org.zeromq.ZMQ.Socket import org.zeromq.ZMsg import class guide.tripping Socket decl ZMQ ZContext ZMsg ZFrame Socket public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) call java.net.Socket.bind(SocketAddress) while ! decl_stmt zmq.Poller = new call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() call decl ZMQ.register() if call decl ZMQ.poll() call decl ZMQ.poll() call decl ZMQ.poll() call decl ZMQ.poll() call decl ZMQ.poll() == - break if call decl ZMQ.pollin() call decl ZMQ.pollin() call decl ZMQ.pollin() call decl ZMQ.pollin() call decl ZMQ.pollin() decl_stmt org.zeromq.ZMsg = if == break decl_stmt org.zeromq.ZFrame = call ZFrame.pop() call ZFrame.pop() call ZFrame.pop() call ZFrame.pop() call ZFrame.pop() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZFrame.addFirst() call ZFrame.addFirst() call ZFrame.addFirst() call ZFrame.addFirst() call ZFrame.addFirst() new call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) if call decl ZMQ.pollin() call decl ZMQ.pollin() call decl ZMQ.pollin() call decl ZMQ.pollin() call decl ZMQ.pollin() decl_stmt org.zeromq.ZMsg = if == break decl_stmt org.zeromq.ZFrame = call ZFrame.pop() call ZFrame.pop() call ZFrame.pop() call ZFrame.pop() call ZFrame.pop() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZMsg.destroy() call ZFrame.addFirst() call ZFrame.addFirst() call ZFrame.addFirst() call ZFrame.addFirst() call ZFrame.addFirst() new call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZFrame.send(Socket,int) call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() ZMsg Socket ZContext public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setIdentity() call Socket.setIdentity() call Socket.setIdentity() call Socket.setIdentity() call Socket.setIdentity() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) while ! decl_stmt org.zeromq.ZMsg = call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() long int Socket ZContext ZMsg public public decl_stmt org.zeromq.ZContext = new decl_stmt java.net.Socket = call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call org.zeromq.ZContext.createSocket(int) call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setHWM() call Socket.setIdentity() call Socket.setIdentity() call Socket.setIdentity() call Socket.setIdentity() call Socket.setIdentity() call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) call java.net.Socket.connect(SocketAddress,int) try catch decl_stmt int decl_stmt long = for = < ++ decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) * / - = for = < ++ decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.addString(String) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) for = < && ! ++ * / - call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() Thread Thread Thread public static public static if == = decl_stmt java.lang.Thread = new new decl_stmt java.lang.Thread = new new decl_stmt java.lang.Thread = new new call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() try call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() catch