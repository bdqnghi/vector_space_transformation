org.zeromq java.util.Arrays import java.util.concurrent.TimeUnit import java.util.concurrent.locks.LockSupport import org.junit.After import org.junit.Assert import org.junit.Test import org.zeromq.ZMQ.Socket import class org.zeromq.TestZProxy decl ZProxy ZContext public public decl_stmt org.zeromq.ZContext = ZContext public public decl_stmt org.zeromq.ZContext = ZContext public public decl_stmt org.zeromq.ZContext = ZContext public public decl_stmt org.zeromq.ZContext = ZMsg ZContext public public decl_stmt org.zeromq.ZContext = decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) ZMsg ZContext public public decl_stmt org.zeromq.ZContext = decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) ZContext public public decl_stmt org.zeromq.ZContext = ZContext public public decl_stmt org.zeromq.ZContext = ZContext public public decl_stmt org.zeromq.ZContext = Socket public public decl_stmt java.net.Socket = if == = if == = return public public if == if == if == && != String public public if == if == if == && != decl_stmt java.lang.String = return ZMsg public public assert decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) call org.zeromq.ZMsg.send(Socket,boolean) return public public return public public throws private private return private private private private private private return new private private String boolean ZMsg ZProxy ZMsg private private decl_stmt org.zeromq.ZProxy = + == : decl_stmt boolean final final = decl_stmt java.lang.String = = call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) = call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) decl_stmt org.zeromq.ZMsg = call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() = call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) = call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() String ZMsg ZMsg ZProxy boolean private private decl_stmt org.zeromq.ZProxy = + == : decl_stmt boolean final final = decl_stmt java.lang.String = = call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) == : = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) == : = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) call org.zeromq.ZProxy.restart(ZMsg) == : = call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() decl_stmt org.zeromq.ZMsg = new call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) call org.zeromq.ZMsg.add(String) decl_stmt org.zeromq.ZMsg = call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZProxy.configure(Socket,ZMsg,Socket,Socket,Socket,Object) call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() call org.zeromq.ZMsg.popString() = call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() call org.zeromq.ZProxy.status() = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) String boolean ZProxy private private decl_stmt boolean final final = decl_stmt java.lang.String = decl_stmt org.zeromq.ZProxy = + == : = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) String boolean ZProxy private private decl_stmt boolean final final = decl_stmt java.lang.String = decl_stmt org.zeromq.ZProxy = + == : = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) String boolean ZProxy private private decl_stmt boolean final final = decl_stmt java.lang.String = decl_stmt org.zeromq.ZProxy = + == : = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) call org.zeromq.ZProxy.start(ZPoller) = call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) call org.zeromq.ZProxy.stop(boolean) = call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) call org.zeromq.ZProxy.pause(ZPoller,boolean) = call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean) call org.zeromq.ZProxy.exit(boolean)