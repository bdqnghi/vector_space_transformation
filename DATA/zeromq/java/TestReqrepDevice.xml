zmq org.junit.Test import static static org.junit.Assert.assertThat import static static org.hamcrest.CoreMatchers.is import static static org.hamcrest.CoreMatchers.notNullValue import class zmq.TestReqrepDevice SocketBase SocketBase Ctx long int Msg SocketBase boolean SocketBase String public public decl_stmt boolean decl_stmt zmq.Ctx = decl_stmt zmq.SocketBase = = decl_stmt zmq.SocketBase = = decl_stmt zmq.SocketBase = = decl_stmt zmq.SocketBase = = decl_stmt int decl_stmt zmq.Msg decl_stmt java.lang.String decl_stmt long = = for = != ++ = = = > : >= = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() = new call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() = > = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() = new call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() = = = for = != ++ = = = > : >= = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() = new call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() = > = call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() call zmq.Msg.size() = new call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() call zmq.Msg.data() =