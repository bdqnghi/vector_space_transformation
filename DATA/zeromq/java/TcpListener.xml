zmq java.io.IOException import java.net.Socket import java.nio.channels.ServerSocketChannel import java.nio.channels.SocketChannel import class zmq.TcpListener super super extends super implements IOObject String ServerSocketChannel SocketBase TcpAddress boolean public public assert == protected protected call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.addHandle(SelectableChannel) call zmq.IOObject.setPollAccept(SelectableChannel) call zmq.IOObject.setPollAccept(SelectableChannel) call zmq.IOObject.setPollAccept(SelectableChannel) call zmq.IOObject.setPollAccept(SelectableChannel) call zmq.IOObject.setPollAccept(SelectableChannel) protected protected call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.setHandler(IPollEvents) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) call zmq.IOObject.removeHandle(SelectableChannel) StreamEngine IOThread SessionBase SocketChannel public public decl_stmt java.nio.channels.SocketChannel = try = catch call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) return decl_stmt zmq.StreamEngine = try = new catch call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) call zmq.SocketBase.eventAcceptFailed(String,int) return decl_stmt zmq.IOThread = decl_stmt zmq.SessionBase = new call SocketChannel.socket() call SocketChannel.socket() call SocketChannel.socket() call SocketChannel.socket() call SocketChannel.socket() call SessionBase.incSeqnum() call SessionBase.incSeqnum() call SessionBase.incSeqnum() call SessionBase.incSeqnum() call SessionBase.incSeqnum() call zmq.SocketBase.eventAccepted(String,SelectableChannel) call zmq.SocketBase.eventAccepted(String,SelectableChannel) call zmq.SocketBase.eventAccepted(String,SelectableChannel) call zmq.SocketBase.eventAccepted(String,SelectableChannel) call zmq.SocketBase.eventAccepted(String,SelectableChannel) private private if == return try call ServerSocketChannel.close() call ServerSocketChannel.close() call ServerSocketChannel.close() call ServerSocketChannel.close() call ServerSocketChannel.close() call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) call zmq.SocketBase.eventClosed(String,SelectableChannel) catch call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) call zmq.SocketBase.eventCloseFailed(String,int) = public public return call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() public public final final call zmq.TcpAddress.resolve(String,boolean) call zmq.TcpAddress.resolve(String,boolean) call zmq.TcpAddress.resolve(String,boolean) call zmq.TcpAddress.resolve(String,boolean) call zmq.TcpAddress.resolve(String,boolean) > try = call ServerSocketChannel.configureBlocking() call ServerSocketChannel.configureBlocking() call ServerSocketChannel.configureBlocking() call ServerSocketChannel.configureBlocking() call ServerSocketChannel.configureBlocking() if ! call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call zmq.TcpAddress.address() call zmq.TcpAddress.address() call zmq.TcpAddress.address() call zmq.TcpAddress.address() call zmq.TcpAddress.address() if call TcpAddress.getPort() call TcpAddress.getPort() call TcpAddress.getPort() call TcpAddress.getPort() call TcpAddress.getPort() == call zmq.TcpAddress.updatePort(int) call zmq.TcpAddress.updatePort(int) call zmq.TcpAddress.updatePort(int) call zmq.TcpAddress.updatePort(int) call zmq.TcpAddress.updatePort(int) call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() catch return = call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() call zmq.TcpAddress.toString() call zmq.SocketBase.eventListening(String,SelectableChannel) call zmq.SocketBase.eventListening(String,SelectableChannel) call zmq.SocketBase.eventListening(String,SelectableChannel) call zmq.SocketBase.eventListening(String,SelectableChannel) call zmq.SocketBase.eventListening(String,SelectableChannel) return Socket boolean private private decl_stmt java.net.Socket = try = call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() call ServerSocketChannel.socket() catch return if ! decl_stmt boolean = for : if call zmq.TcpAddress.address() call zmq.TcpAddress.address() call zmq.TcpAddress.address() call zmq.TcpAddress.address() call zmq.TcpAddress.address() = break if ! try call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() catch return return call java.net.Socket.getChannel() call java.net.Socket.getChannel() call java.net.Socket.getChannel() call java.net.Socket.getChannel() call java.net.Socket.getChannel() public public throw new public public throw new public public throw new public public throw new