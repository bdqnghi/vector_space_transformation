zmq java.nio.ByteBuffer import org.junit.Before import org.junit.Test import zmq.Helper.DummySession import static static org.junit.Assert.assertThat import static static org.hamcrest.CoreMatchers.is import class zmq.TestDecoder decl Helper DecoderBase public public = new = new call DecoderBase.setMsgSink() call DecoderBase.setMsgSink() call DecoderBase.setMsgSink() call DecoderBase.setMsgSink() call DecoderBase.setMsgSink() private private byte byte return private private byte byte for = < ++ return private private for = < ++ return int int ByteBuffer public public decl_stmt ByteBuffer = call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() decl_stmt int = call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() decl_stmt int = call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) int int ByteBuffer public public decl_stmt ByteBuffer = call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() decl_stmt int = call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() decl_stmt int = call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) = call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call ByteBuffer.capacity() call ByteBuffer.capacity() call ByteBuffer.capacity() call ByteBuffer.capacity() call ByteBuffer.capacity() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() = = call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() byte int int ByteBuffer public public decl_stmt ByteBuffer = call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() call zmq.DecoderBase.getBuffer() decl_stmt int = call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() decl_stmt int = call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call zmq.DecoderBase.processBuffer(ByteBuffer,int) call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() protected protected switch case return case return return ByteBuffer private private new decl_stmt ByteBuffer = = call ByteBuffer.getInt() call ByteBuffer.getInt() call ByteBuffer.getInt() call ByteBuffer.getInt() call ByteBuffer.getInt() = new return private private return public public return == public public = CustomDecoder int int ByteBuffer public public decl_stmt CustomDecoder = new call CustomDecoder.setMsgSink() call CustomDecoder.setMsgSink() call CustomDecoder.setMsgSink() call CustomDecoder.setMsgSink() call CustomDecoder.setMsgSink() decl_stmt ByteBuffer = call CustomDecoder.getBuffer() call CustomDecoder.getBuffer() call CustomDecoder.getBuffer() call CustomDecoder.getBuffer() call CustomDecoder.getBuffer() decl_stmt int = call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() call ByteBuffer.flip() decl_stmt int = call CustomDecoder.processBuffer() call CustomDecoder.processBuffer() call CustomDecoder.processBuffer() call CustomDecoder.processBuffer() call CustomDecoder.processBuffer() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() call decl Helper.out() private private private private return