guide org.zeromq.ZContext import org.zeromq.ZLoop import org.zeromq.ZLoop.IZLoopHandler import org.zeromq.ZMQ import org.zeromq.ZMQ.PollItem import org.zeromq.ZMQ.Socket import java.util.ArrayList import java.util.HashMap import java.util.Map import java.util.Map.Entry import class guide.clonesrv5 Socket long ZContext Socket decl Map Socket int ZLoop kvmsg Socket String String clonesrv5 decl byte public public decl_stmt guide.clonesrv5 = decl_stmt java.net.Socket = decl_stmt byte = call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() call Socket.recv() if != decl_stmt java.lang.String = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() call Socket.recvStr() else if != for < : call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call Socket.send() call Socket.send() call Socket.send() call Socket.send() call Socket.send() decl_stmt guide.kvmsg = new call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setKey(String) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call guide.kvmsg.setBody(byte) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() call guide.kvmsg.destroy() return kvmsg clonesrv5 Socket int public public decl_stmt guide.clonesrv5 = decl_stmt java.net.Socket = decl_stmt guide.kvmsg = if != call guide.kvmsg.setSequence(long) call guide.kvmsg.setSequence(long) call guide.kvmsg.setSequence(long) call guide.kvmsg.setSequence(long) call guide.kvmsg.setSequence(long) ++ call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) call guide.kvmsg.send(Socket) decl_stmt int = call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) call guide.kvmsg.getProp(String) if > call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() call kvmsg.setProp() + * call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) call guide.kvmsg.store(Map) return clonesrv5 public public decl_stmt guide.clonesrv5 = if != for : new < call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call clonesrv5.kvmap() call guide.clonesrv5.flushSingle(kvmsg) call guide.clonesrv5.flushSingle(kvmsg) call guide.clonesrv5.flushSingle(kvmsg) call guide.clonesrv5.flushSingle(kvmsg) call guide.clonesrv5.flushSingle(kvmsg) return PollItem public public decl_stmt zmq.PollItem = new call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) new = new call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) call org.zeromq.ZLoop.addPoller(PollItem,IZLoopHandler,Object) new call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) call org.zeromq.ZLoop.addTimer(int,int,IZLoopHandler,Object) new call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call org.zeromq.ZLoop.start() call ZLoop.destroy() call ZLoop.destroy() call ZLoop.destroy() call ZLoop.destroy() call ZLoop.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() call org.zeromq.ZContext.destroy() private static private static if long private private decl_stmt long = if > && >= ++ clonesrv5 public static public static decl_stmt guide.clonesrv5 = new call guide.clonesrv5.run() call guide.clonesrv5.run() call guide.clonesrv5.run() call guide.clonesrv5.run() call guide.clonesrv5.run()