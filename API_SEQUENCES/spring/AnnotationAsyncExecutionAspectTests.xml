ClassWithoutAsyncAnnotation.incrementAsync() ClassWithoutAsyncAnnotation.incrementAsync() ClassWithoutAsyncAnnotation.incrementAsync() ClassWithoutAsyncAnnotation.incrementAsync() ClassWithoutAsyncAnnotation.incrementAsync() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() ClassWithoutAsyncAnnotation.incrementReturningAFuture() ClassWithoutAsyncAnnotation.incrementReturningAFuture() ClassWithoutAsyncAnnotation.incrementReturningAFuture() ClassWithoutAsyncAnnotation.incrementReturningAFuture() ClassWithoutAsyncAnnotation.incrementReturningAFuture() Future.get() Future.get() Future.get() Future.get() Future.get() ClassWithoutAsyncAnnotation.increment() ClassWithoutAsyncAnnotation.increment() ClassWithoutAsyncAnnotation.increment() ClassWithoutAsyncAnnotation.increment() ClassWithoutAsyncAnnotation.increment() ClassWithAsyncAnnotation.increment() ClassWithAsyncAnnotation.increment() ClassWithAsyncAnnotation.increment() ClassWithAsyncAnnotation.increment() ClassWithAsyncAnnotation.increment() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() CountingExecutor.waitForCompletion() ClassWithAsyncAnnotation.incrementReturningAFuture() ClassWithAsyncAnnotation.incrementReturningAFuture() ClassWithAsyncAnnotation.incrementReturningAFuture() ClassWithAsyncAnnotation.incrementReturningAFuture() ClassWithAsyncAnnotation.incrementReturningAFuture() Future.get() Future.get() Future.get() Future.get() Future.get() org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) ClassWithQualifiedAsyncMethods.defaultWork() ClassWithQualifiedAsyncMethods.defaultWork() ClassWithQualifiedAsyncMethods.defaultWork() ClassWithQualifiedAsyncMethods.defaultWork() ClassWithQualifiedAsyncMethods.defaultWork() Future.get() Future.get() Future.get() Future.get() Future.get() Future.get() Future.get() Future.get() Future.get() Future.get() ClassWithQualifiedAsyncMethods.e1Work() ClassWithQualifiedAsyncMethods.e1Work() ClassWithQualifiedAsyncMethods.e1Work() ClassWithQualifiedAsyncMethods.e1Work() ClassWithQualifiedAsyncMethods.e1Work() ListenableFuture.get() ListenableFuture.get() ListenableFuture.get() ListenableFuture.get() ListenableFuture.get() ClassWithQualifiedAsyncMethods.e1OtherWork() ClassWithQualifiedAsyncMethods.e1OtherWork() ClassWithQualifiedAsyncMethods.e1OtherWork() ClassWithQualifiedAsyncMethods.e1OtherWork() ClassWithQualifiedAsyncMethods.e1OtherWork() CompletableFuture.get() CompletableFuture.get() CompletableFuture.get() CompletableFuture.get() CompletableFuture.get() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() ClassWithException.failWithVoid() ClassWithException.failWithVoid() ClassWithException.failWithVoid() ClassWithException.failWithVoid() ClassWithException.failWithVoid() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() ClassWithException.failWithVoid() ClassWithException.failWithVoid() ClassWithException.failWithVoid() ClassWithException.failWithVoid() ClassWithException.failWithVoid() org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class)